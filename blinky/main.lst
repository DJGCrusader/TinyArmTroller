GAS LISTING /tmp/cccYkJc5.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/home/dgonz/projects/gitHome/TinyArmTroller/blinky/",100,0,2,.Ltext0
  11               		.stabs	"main.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/io.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/inttypes.h",130,0,0,0
  33               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdint.h",130,0,0,0
  34               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  35               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  36               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  37               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  38               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  39               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  40               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  41               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  42               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  43               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  44               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  45               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  46               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  47               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  48               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  49               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  50               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  51               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  52               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  53               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  54               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  55               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  56               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  57               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
GAS LISTING /tmp/cccYkJc5.s 			page 2


  58               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  59               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  60               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  61               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/iox32a4.h",130,0,0,0
  68               		.stabs	"register8_t:t(5,1)=(5,2)=B(4,2)",128,0,86,0
  69               		.stabs	"register16_t:t(5,3)=(5,4)=B(4,4)",128,0,87,0
  70               		.stabs	"register32_t:t(5,5)=(5,6)=B(4,6)",128,0,88,0
  71               		.stabs	"OCD_struct:T(5,7)=s2OCDR0:(5,8)=B(0,11),0,8;OCDR1:(5,8),8,8;;",128,0,0,0
  72               		.stabs	"OCD_t:t(5,9)=(5,7)",128,0,140,0
  73               		.stabs	"CCP_enum:T(5,10)=@s8;eCCP_SPM_gc:157,CCP_IOREG_gc:216,;",128,0,0,0
  74               		.stabs	"CCP_t:t(5,11)=(5,10)",128,0,148,0
  75               		.stabs	"CLK_struct:T(5,12)=s4CTRL:(5,8),0,8;PSCTRL:(5,8),8,8;LOCK:(5,8),16,8;RTCCTRL:(5,8),24,8;;"
  76               		.stabs	"CLK_t:t(5,13)=(5,12)",128,0,164,0
  77               		.stabs	"PR_struct:T(5,14)=s7PRGEN:(5,8),0,8;PRPA:(5,8),8,8;PRPB:(5,8),16,8;PRPC:(5,8),24,8;PRPD:(5
  78               		.stabs	"PR_t:t(5,15)=(5,14)",128,0,182,0
  79               		.stabs	"CLK_SCLKSEL_enum:T(5,16)=@s8;eCLK_SCLKSEL_RC2M_gc:0,CLK_SCLKSEL_RC32M_gc:1,CLK_SCLKSEL_RC3
  80               		.stabs	"CLK_SCLKSEL_t:t(5,17)=(5,16)",128,0,192,0
  81               		.stabs	"CLK_PSADIV_enum:T(5,18)=@s8;eCLK_PSADIV_1_gc:0,CLK_PSADIV_2_gc:4,CLK_PSADIV_4_gc:12,CLK_PS
  82               		.stabs	"CLK_PSADIV_t:t(5,19)=(5,18)",128,0,207,0
  83               		.stabs	"CLK_PSBCDIV_enum:T(5,20)=@s8;eCLK_PSBCDIV_1_1_gc:0,CLK_PSBCDIV_1_2_gc:1,CLK_PSBCDIV_4_1_gc
  84               		.stabs	"CLK_PSBCDIV_t:t(5,21)=(5,20)",128,0,216,0
  85               		.stabs	"CLK_RTCSRC_enum:T(5,22)=@s8;eCLK_RTCSRC_ULP_gc:0,CLK_RTCSRC_TOSC_gc:2,CLK_RTCSRC_RCOSC_gc:
  86               		.stabs	"CLK_RTCSRC_t:t(5,23)=(5,22)",128,0,225,0
  87               		.stabs	"SLEEP_struct:T(5,24)=s1CTRL:(5,8),0,8;;",128,0,0,0
  88               		.stabs	"SLEEP_t:t(5,25)=(5,24)",128,0,238,0
  89               		.stabs	"SLEEP_SMODE_enum:T(5,26)=@s8;eSLEEP_SMODE_IDLE_gc:0,SLEEP_SMODE_PDOWN_gc:4,SLEEP_SMODE_PSA
  90               		.stabs	"SLEEP_SMODE_t:t(5,27)=(5,26)",128,0,248,0
  91               		.stabs	"OSC_struct:T(5,28)=s7CTRL:(5,8),0,8;STATUS:(5,8),8,8;XOSCCTRL:(5,8),16,8;XOSCFAIL:(5,8),24
  92               		.stabs	"OSC_t:t(5,29)=(5,28)",128,0,267,0
  93               		.stabs	"OSC_FRQRANGE_enum:T(5,30)=@s8;eOSC_FRQRANGE_04TO2_gc:0,OSC_FRQRANGE_2TO9_gc:64,OSC_FRQRANG
  94               		.stabs	"OSC_FRQRANGE_t:t(5,31)=(5,30)",128,0,276,0
  95               		.stabs	"OSC_XOSCSEL_enum:T(5,32)=@s8;eOSC_XOSCSEL_EXTCLK_gc:0,OSC_XOSCSEL_32KHz_gc:2,OSC_XOSCSEL_X
  96               		.stabs	"OSC_XOSCSEL_t:t(5,33)=(5,32)",128,0,286,0
  97               		.stabs	"OSC_PLLSRC_enum:T(5,34)=@s8;eOSC_PLLSRC_RC2M_gc:0,OSC_PLLSRC_RC32M_gc:128,OSC_PLLSRC_XOSC_
  98               		.stabs	"OSC_PLLSRC_t:t(5,35)=(5,34)",128,0,294,0
  99               		.stabs	"DFLL_struct:T(5,36)=s8CTRL:(5,8),0,8;reserved_0x01:(5,8),8,8;CALA:(5,8),16,8;CALB:(5,8),24
 100               		.stabs	"DFLL_t:t(5,37)=(5,36)",128,0,314,0
 101               		.stabs	"RST_struct:T(5,38)=s2STATUS:(5,8),0,8;CTRL:(5,8),8,8;;",128,0,0,0
 102               		.stabs	"RST_t:t(5,39)=(5,38)",128,0,328,0
 103               		.stabs	"WDT_struct:T(5,40)=s3CTRL:(5,8),0,8;WINCTRL:(5,8),8,8;STATUS:(5,8),16,8;;",128,0,0,0
 104               		.stabs	"WDT_t:t(5,41)=(5,40)",128,0,343,0
 105               		.stabs	"WDT_PER_enum:T(5,42)=@s8;eWDT_PER_8CLK_gc:0,WDT_PER_16CLK_gc:4,WDT_PER_32CLK_gc:8,WDT_PER_
 106               		.stabs	"WDT_PER_t:t(5,43)=(5,42)",128,0,359,0
 107               		.stabs	"WDT_WPER_enum:T(5,44)=@s8;eWDT_WPER_8CLK_gc:0,WDT_WPER_16CLK_gc:4,WDT_WPER_32CLK_gc:8,WDT_
 108               		.stabs	"WDT_WPER_t:t(5,45)=(5,44)",128,0,375,0
 109               		.stabs	"MCU_struct:T(5,46)=s12DEVID0:(5,8),0,8;DEVID1:(5,8),8,8;DEVID2:(5,8),16,8;REVID:(5,8),24,8
 110               		.stabs	"MCU_t:t(5,47)=(5,46)",128,0,399,0
 111               		.stabs	"PMIC_struct:T(5,48)=s3STATUS:(5,8),0,8;INTPRI:(5,8),8,8;CTRL:(5,8),16,8;;",128,0,0,0
 112               		.stabs	"PMIC_t:t(5,49)=(5,48)",128,0,414,0
 113               		.stabs	"DMA_CH_struct:T(5,50)=s16CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;ADDRCTRL:(5,8),16,8;TRIGSRC:(5,8)
 114               		.stabs	"DMA_CH_t:t(5,54)=(5,50)",128,0,441,0
GAS LISTING /tmp/cccYkJc5.s 			page 3


 115               		.stabs	"DMA_struct:T(5,55)=s80CTRL:(5,8),0,8;reserved_0x01:(5,8),8,8;reserved_0x02:(5,8),16,8;INTF
 116               		.stabs	"DMA_t:t(5,58)=(5,55)",128,0,471,0
 117               		.stabs	"DMA_CH_BURSTLEN_enum:T(5,59)=@s8;eDMA_CH_BURSTLEN_1BYTE_gc:0,DMA_CH_BURSTLEN_2BYTE_gc:1,DM
 118               		.stabs	"DMA_CH_BURSTLEN_t:t(5,60)=(5,59)",128,0,480,0
 119               		.stabs	"DMA_CH_SRCRELOAD_enum:T(5,61)=@s8;eDMA_CH_SRCRELOAD_NONE_gc:0,DMA_CH_SRCRELOAD_BLOCK_gc:64
 120               		.stabs	"DMA_CH_SRCRELOAD_t:t(5,62)=(5,61)",128,0,489,0
 121               		.stabs	"DMA_CH_SRCDIR_enum:T(5,63)=@s8;eDMA_CH_SRCDIR_FIXED_gc:0,DMA_CH_SRCDIR_INC_gc:16,DMA_CH_SR
 122               		.stabs	"DMA_CH_SRCDIR_t:t(5,64)=(5,63)",128,0,497,0
 123               		.stabs	"DMA_CH_DESTRELOAD_enum:T(5,65)=@s8;eDMA_CH_DESTRELOAD_NONE_gc:0,DMA_CH_DESTRELOAD_BLOCK_gc
 124               		.stabs	"DMA_CH_DESTRELOAD_t:t(5,66)=(5,65)",128,0,506,0
 125               		.stabs	"DMA_CH_DESTDIR_enum:T(5,67)=@s8;eDMA_CH_DESTDIR_FIXED_gc:0,DMA_CH_DESTDIR_INC_gc:1,DMA_CH_
 126               		.stabs	"DMA_CH_DESTDIR_t:t(5,68)=(5,67)",128,0,514,0
 127               		.stabs	"DMA_CH_TRIGSRC_enum:T(5,69)=@s8;eDMA_CH_TRIGSRC_OFF_gc:0,DMA_CH_TRIGSRC_EVSYS_CH0_gc:1,DMA
 128               		.stabs	"DMA_CH_TRIGSRC_t:t(5,70)=(5,69)",128,0,597,0
 129               		.stabs	"DMA_DBUFMODE_enum:T(5,71)=@s8;eDMA_DBUFMODE_DISABLED_gc:0,DMA_DBUFMODE_CH01_gc:4,DMA_DBUFM
 130               		.stabs	"DMA_DBUFMODE_t:t(5,72)=(5,71)",128,0,606,0
 131               		.stabs	"DMA_PRIMODE_enum:T(5,73)=@s8;eDMA_PRIMODE_RR0123_gc:0,DMA_PRIMODE_CH0RR123_gc:1,DMA_PRIMOD
 132               		.stabs	"DMA_PRIMODE_t:t(5,74)=(5,73)",128,0,615,0
 133               		.stabs	"DMA_CH_ERRINTLVL_enum:T(5,75)=@s8;eDMA_CH_ERRINTLVL_OFF_gc:0,DMA_CH_ERRINTLVL_LO_gc:4,DMA_
 134               		.stabs	"DMA_CH_ERRINTLVL_t:t(5,76)=(5,75)",128,0,624,0
 135               		.stabs	"DMA_CH_TRNINTLVL_enum:T(5,77)=@s8;eDMA_CH_TRNINTLVL_OFF_gc:0,DMA_CH_TRNINTLVL_LO_gc:1,DMA_
 136               		.stabs	"DMA_CH_TRNINTLVL_t:t(5,78)=(5,77)",128,0,633,0
 137               		.stabs	"EVSYS_struct:T(5,79)=s18CH0MUX:(5,8),0,8;CH1MUX:(5,8),8,8;CH2MUX:(5,8),16,8;CH3MUX:(5,8),2
 138               		.stabs	"EVSYS_t:t(5,80)=(5,79)",128,0,663,0
 139               		.stabs	"EVSYS_QDIRM_enum:T(5,81)=@s8;eEVSYS_QDIRM_00_gc:0,EVSYS_QDIRM_01_gc:32,EVSYS_QDIRM_10_gc:6
 140               		.stabs	"EVSYS_QDIRM_t:t(5,82)=(5,81)",128,0,672,0
 141               		.stabs	"EVSYS_DIGFILT_enum:T(5,83)=@s8;eEVSYS_DIGFILT_1SAMPLE_gc:0,EVSYS_DIGFILT_2SAMPLES_gc:1,EVS
 142               		.stabs	"EVSYS_DIGFILT_t:t(5,84)=(5,83)",128,0,685,0
 143               		.stabs	"EVSYS_CHMUX_enum:T(5,85)=@s8;eEVSYS_CHMUX_OFF_gc:0,EVSYS_CHMUX_RTC_OVF_gc:8,EVSYS_CHMUX_RT
 144               		.stabs	"EVSYS_CHMUX_t:t(5,86)=(5,85)",128,0,811,0
 145               		.stabs	"NVM_struct:T(5,87)=s17ADDR0:(5,8),0,8;ADDR1:(5,8),8,8;ADDR2:(5,8),16,8;reserved_0x03:(5,8)
 146               		.stabs	"NVM_t:t(5,88)=(5,87)",128,0,840,0
 147               		.stabs	"NVM_LOCKBITS_struct:T(5,89)=s1LOCKBITS:(5,8),0,8;;",128,0,0,0
 148               		.stabs	"NVM_LOCKBITS_t:t(5,90)=(5,89)",128,0,852,0
 149               		.stabs	"NVM_FUSES_struct:T(5,91)=s6FUSEBYTE0:(5,8),0,8;FUSEBYTE1:(5,8),8,8;FUSEBYTE2:(5,8),16,8;re
 150               		.stabs	"NVM_FUSES_t:t(5,92)=(5,91)",128,0,869,0
 151               		.stabs	"NVM_PROD_SIGNATURES_struct:T(5,93)=s63RCOSC2M:(5,8),0,8;reserved_0x01:(5,8),8,8;RCOSC32K:(
 152               		.stabs	"NVM_PROD_SIGNATURES_t:t(5,94)=(5,93)",128,0,943,0
 153               		.stabs	"NVM_CMD_enum:T(5,95)=@s8;eNVM_CMD_NO_OPERATION_gc:0,NVM_CMD_READ_CALIB_ROW_gc:2,NVM_CMD_RE
 154               		.stabs	"NVM_CMD_t:t(5,96)=(5,95)",128,0,974,0
 155               		.stabs	"NVM_SPMLVL_enum:T(5,97)=@s8;eNVM_SPMLVL_OFF_gc:0,NVM_SPMLVL_LO_gc:4,NVM_SPMLVL_MED_gc:8,NV
 156               		.stabs	"NVM_SPMLVL_t:t(5,98)=(5,97)",128,0,983,0
 157               		.stabs	"NVM_EELVL_enum:T(5,99)=@s8;eNVM_EELVL_OFF_gc:0,NVM_EELVL_LO_gc:1,NVM_EELVL_MED_gc:2,NVM_EE
 158               		.stabs	"NVM_EELVL_t:t(5,100)=(5,99)",128,0,992,0
 159               		.stabs	"NVM_BLBB_enum:T(5,101)=@s8;eNVM_BLBB_NOLOCK_gc:192,NVM_BLBB_WLOCK_gc:128,NVM_BLBB_RLOCK_gc
 160               		.stabs	"NVM_BLBB_t:t(5,102)=(5,101)",128,0,1001,0
 161               		.stabs	"NVM_BLBA_enum:T(5,103)=@s8;eNVM_BLBA_NOLOCK_gc:48,NVM_BLBA_WLOCK_gc:32,NVM_BLBA_RLOCK_gc:1
 162               		.stabs	"NVM_BLBA_t:t(5,104)=(5,103)",128,0,1010,0
 163               		.stabs	"NVM_BLBAT_enum:T(5,105)=@s8;eNVM_BLBAT_NOLOCK_gc:12,NVM_BLBAT_WLOCK_gc:8,NVM_BLBAT_RLOCK_g
 164               		.stabs	"NVM_BLBAT_t:t(5,106)=(5,105)",128,0,1019,0
 165               		.stabs	"NVM_LB_enum:T(5,107)=@s8;eNVM_LB_NOLOCK_gc:3,NVM_LB_WLOCK_gc:2,NVM_LB_RWLOCK_gc:0,;",128,0
 166               		.stabs	"NVM_LB_t:t(5,108)=(5,107)",128,0,1027,0
 167               		.stabs	"BOOTRST_enum:T(5,109)=@s8;eBOOTRST_BOOTLDR_gc:0,BOOTRST_APPLICATION_gc:64,;",128,0,0,0
 168               		.stabs	"BOOTRST_t:t(5,110)=(5,109)",128,0,1034,0
 169               		.stabs	"BOD_enum:T(5,111)=@s8;eBOD_INSAMPLEDMODE_gc:1,BOD_CONTINOUSLY_gc:2,BOD_DISABLED_gc:3,;",12
 170               		.stabs	"BOD_t:t(5,112)=(5,111)",128,0,1042,0
 171               		.stabs	"WD_enum:T(5,113)=@s8;eWD_8CLK_gc:0,WD_16CLK_gc:16,WD_32CLK_gc:32,WD_64CLK_gc:48,WD_128CLK_
GAS LISTING /tmp/cccYkJc5.s 			page 4


 172               		.stabs	"WD_t:t(5,114)=(5,113)",128,0,1058,0
 173               		.stabs	"SUT_enum:T(5,115)=@s8;eSUT_0MS_gc:12,SUT_4MS_gc:4,SUT_64MS_gc:0,;",128,0,0,0
 174               		.stabs	"SUT_t:t(5,116)=(5,115)",128,0,1066,0
 175               		.stabs	"BODLVL_enum:T(5,117)=@s8;eBODLVL_1V6_gc:7,BODLVL_1V9_gc:6,BODLVL_2V1_gc:5,BODLVL_2V4_gc:4,
 176               		.stabs	"BODLVL_t:t(5,118)=(5,117)",128,0,1078,0
 177               		.stabs	"AC_struct:T(5,119)=s8AC0CTRL:(5,8),0,8;AC1CTRL:(5,8),8,8;AC0MUXCTRL:(5,8),16,8;AC1MUXCTRL:
 178               		.stabs	"AC_t:t(5,120)=(5,119)",128,0,1098,0
 179               		.stabs	"AC_INTMODE_enum:T(5,121)=@s8;eAC_INTMODE_BOTHEDGES_gc:0,AC_INTMODE_FALLING_gc:128,AC_INTMO
 180               		.stabs	"AC_INTMODE_t:t(5,122)=(5,121)",128,0,1106,0
 181               		.stabs	"AC_INTLVL_enum:T(5,123)=@s8;eAC_INTLVL_OFF_gc:0,AC_INTLVL_LO_gc:16,AC_INTLVL_MED_gc:32,AC_
 182               		.stabs	"AC_INTLVL_t:t(5,124)=(5,123)",128,0,1115,0
 183               		.stabs	"AC_HYSMODE_enum:T(5,125)=@s8;eAC_HYSMODE_NO_gc:0,AC_HYSMODE_SMALL_gc:2,AC_HYSMODE_LARGE_gc
 184               		.stabs	"AC_HYSMODE_t:t(5,126)=(5,125)",128,0,1123,0
 185               		.stabs	"AC_MUXPOS_enum:T(5,127)=@s8;eAC_MUXPOS_PIN0_gc:0,AC_MUXPOS_PIN1_gc:8,AC_MUXPOS_PIN2_gc:16,
 186               		.stabs	"AC_MUXPOS_t:t(5,128)=(5,127)",128,0,1136,0
 187               		.stabs	"AC_MUXNEG_enum:T(5,129)=@s8;eAC_MUXNEG_PIN0_gc:0,AC_MUXNEG_PIN1_gc:1,AC_MUXNEG_PIN3_gc:2,A
 188               		.stabs	"AC_MUXNEG_t:t(5,130)=(5,129)",128,0,1149,0
 189               		.stabs	"AC_WINTMODE_enum:T(5,131)=@s8;eAC_WINTMODE_ABOVE_gc:0,AC_WINTMODE_INSIDE_gc:4,AC_WINTMODE_
 190               		.stabs	"AC_WINTMODE_t:t(5,132)=(5,131)",128,0,1158,0
 191               		.stabs	"AC_WINTLVL_enum:T(5,133)=@s8;eAC_WINTLVL_OFF_gc:0,AC_WINTLVL_LO_gc:1,AC_WINTLVL_MED_gc:2,A
 192               		.stabs	"AC_WINTLVL_t:t(5,134)=(5,133)",128,0,1167,0
 193               		.stabs	"AC_WSTATE_enum:T(5,135)=@s8;eAC_WSTATE_ABOVE_gc:0,AC_WSTATE_INSIDE_gc:64,AC_WSTATE_BELOW_g
 194               		.stabs	"AC_WSTATE_t:t(5,136)=(5,135)",128,0,1175,0
 195               		.stabs	"ADC_CH_struct:T(5,137)=s8CTRL:(5,8),0,8;MUXCTRL:(5,8),8,8;INTCTRL:(5,8),16,8;INTFLAGS:(5,8
 196               		.stabs	"ADC_CH_t:t(5,140)=(5,137)",128,0,1194,0
 197               		.stabs	"ADC_struct:T(5,141)=s64CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;REFCTRL:(5,8),16,8;EVCTRL:(5,8),24,
 198               		.stabs	"ADC_t:t(5,154)=(5,141)",128,0,1235,0
 199               		.stabs	"ADC_CH_MUXPOS_enum:T(5,155)=@s8;eADC_CH_MUXPOS_PIN0_gc:0,ADC_CH_MUXPOS_PIN1_gc:8,ADC_CH_MU
 200               		.stabs	"ADC_CH_MUXPOS_t:t(5,156)=(5,155)",128,0,1248,0
 201               		.stabs	"ADC_CH_MUXINT_enum:T(5,157)=@s8;eADC_CH_MUXINT_TEMP_gc:0,ADC_CH_MUXINT_BANDGAP_gc:8,ADC_CH
 202               		.stabs	"ADC_CH_MUXINT_t:t(5,158)=(5,157)",128,0,1257,0
 203               		.stabs	"ADC_CH_MUXNEG_enum:T(5,159)=@s8;eADC_CH_MUXNEG_PIN0_gc:0,ADC_CH_MUXNEG_PIN1_gc:1,ADC_CH_MU
 204               		.stabs	"ADC_CH_MUXNEG_t:t(5,160)=(5,159)",128,0,1270,0
 205               		.stabs	"ADC_CH_INPUTMODE_enum:T(5,161)=@s8;eADC_CH_INPUTMODE_INTERNAL_gc:0,ADC_CH_INPUTMODE_SINGLE
 206               		.stabs	"ADC_CH_INPUTMODE_t:t(5,162)=(5,161)",128,0,1279,0
 207               		.stabs	"ADC_CH_GAIN_enum:T(5,163)=@s8;eADC_CH_GAIN_1X_gc:0,ADC_CH_GAIN_2X_gc:4,ADC_CH_GAIN_4X_gc:8
 208               		.stabs	"ADC_CH_GAIN_t:t(5,164)=(5,163)",128,0,1291,0
 209               		.stabs	"ADC_RESOLUTION_enum:T(5,165)=@s8;eADC_RESOLUTION_12BIT_gc:0,ADC_RESOLUTION_8BIT_gc:4,ADC_R
 210               		.stabs	"ADC_RESOLUTION_t:t(5,166)=(5,165)",128,0,1299,0
 211               		.stabs	"ADC_REFSEL_enum:T(5,167)=@s8;eADC_REFSEL_INT1V_gc:0,ADC_REFSEL_VCC_gc:16,ADC_REFSEL_AREFA_
 212               		.stabs	"ADC_REFSEL_t:t(5,168)=(5,167)",128,0,1308,0
 213               		.stabs	"ADC_SWEEP_enum:T(5,169)=@s8;eADC_SWEEP_0_gc:0,ADC_SWEEP_01_gc:64,ADC_SWEEP_012_gc:128,ADC_
 214               		.stabs	"ADC_SWEEP_t:t(5,170)=(5,169)",128,0,1317,0
 215               		.stabs	"ADC_EVSEL_enum:T(5,171)=@s8;eADC_EVSEL_0123_gc:0,ADC_EVSEL_1234_gc:8,ADC_EVSEL_2345_gc:16,
 216               		.stabs	"ADC_EVSEL_t:t(5,172)=(5,171)",128,0,1330,0
 217               		.stabs	"ADC_EVACT_enum:T(5,173)=@s8;eADC_EVACT_NONE_gc:0,ADC_EVACT_CH0_gc:1,ADC_EVACT_CH01_gc:2,AD
 218               		.stabs	"ADC_EVACT_t:t(5,174)=(5,173)",128,0,1342,0
 219               		.stabs	"ADC_CH_INTMODE_enum:T(5,175)=@s8;eADC_CH_INTMODE_COMPLETE_gc:0,ADC_CH_INTMODE_BELOW_gc:4,A
 220               		.stabs	"ADC_CH_INTMODE_t:t(5,176)=(5,175)",128,0,1350,0
 221               		.stabs	"ADC_CH_INTLVL_enum:T(5,177)=@s8;eADC_CH_INTLVL_OFF_gc:0,ADC_CH_INTLVL_LO_gc:1,ADC_CH_INTLV
 222               		.stabs	"ADC_CH_INTLVL_t:t(5,178)=(5,177)",128,0,1359,0
 223               		.stabs	"ADC_DMASEL_enum:T(5,179)=@s8;eADC_DMASEL_OFF_gc:0,ADC_DMASEL_CH01_gc:64,ADC_DMASEL_CH012_g
 224               		.stabs	"ADC_DMASEL_t:t(5,180)=(5,179)",128,0,1368,0
 225               		.stabs	"ADC_PRESCALER_enum:T(5,181)=@s8;eADC_PRESCALER_DIV4_gc:0,ADC_PRESCALER_DIV8_gc:1,ADC_PRESC
 226               		.stabs	"ADC_PRESCALER_t:t(5,182)=(5,181)",128,0,1381,0
 227               		.stabs	"DAC_struct:T(5,183)=s28CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;CTRLC:(5,8),16,8;EVCTRL:(5,8),24,8;
 228               		.stabs	"DAC_t:t(5,188)=(5,183)",128,0,1419,0
GAS LISTING /tmp/cccYkJc5.s 			page 5


 229               		.stabs	"DAC_CHSEL_enum:T(5,189)=@s8;eDAC_CHSEL_SINGLE_gc:0,DAC_CHSEL_DUAL_gc:64,;",128,0,0,0
 230               		.stabs	"DAC_CHSEL_t:t(5,190)=(5,189)",128,0,1426,0
 231               		.stabs	"DAC_REFSEL_enum:T(5,191)=@s8;eDAC_REFSEL_INT1V_gc:0,DAC_REFSEL_AVCC_gc:8,DAC_REFSEL_AREFA_
 232               		.stabs	"DAC_REFSEL_t:t(5,192)=(5,191)",128,0,1435,0
 233               		.stabs	"DAC_EVSEL_enum:T(5,193)=@s8;eDAC_EVSEL_0_gc:0,DAC_EVSEL_1_gc:1,DAC_EVSEL_2_gc:2,DAC_EVSEL_
 234               		.stabs	"DAC_EVSEL_t:t(5,194)=(5,193)",128,0,1448,0
 235               		.stabs	"DAC_CONINTVAL_enum:T(5,195)=@s8;eDAC_CONINTVAL_1CLK_gc:0,DAC_CONINTVAL_2CLK_gc:16,DAC_CONI
 236               		.stabs	"DAC_CONINTVAL_t:t(5,196)=(5,195)",128,0,1461,0
 237               		.stabs	"DAC_REFRESH_enum:T(5,197)=@s8;eDAC_REFRESH_16CLK_gc:0,DAC_REFRESH_32CLK_gc:1,DAC_REFRESH_6
 238               		.stabs	"DAC_REFRESH_t:t(5,198)=(5,197)",128,0,1480,0
 239               		.stabs	"RTC_struct:T(5,199)=s14CTRL:(5,8),0,8;STATUS:(5,8),8,8;INTCTRL:(5,8),16,8;INTFLAGS:(5,8),2
 240               		.stabs	"RTC_t:t(5,206)=(5,199)",128,0,1503,0
 241               		.stabs	"RTC_PRESCALER_enum:T(5,207)=@s8;eRTC_PRESCALER_OFF_gc:0,RTC_PRESCALER_DIV1_gc:1,RTC_PRESCA
 242               		.stabs	"RTC_PRESCALER_t:t(5,208)=(5,207)",128,0,1516,0
 243               		.stabs	"RTC_COMPINTLVL_enum:T(5,209)=@s8;eRTC_COMPINTLVL_OFF_gc:0,RTC_COMPINTLVL_LO_gc:4,RTC_COMPI
 244               		.stabs	"RTC_COMPINTLVL_t:t(5,210)=(5,209)",128,0,1525,0
 245               		.stabs	"RTC_OVFINTLVL_enum:T(5,211)=@s8;eRTC_OVFINTLVL_OFF_gc:0,RTC_OVFINTLVL_LO_gc:1,RTC_OVFINTLV
 246               		.stabs	"RTC_OVFINTLVL_t:t(5,212)=(5,211)",128,0,1534,0
 247               		.stabs	"EBI_CS_struct:T(5,213)=s4CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;:(5,214)=u2BASEADDR:(5,52),0,16;:
 248               		.stabs	"EBI_CS_t:t(5,216)=(5,213)",128,0,1549,0
 249               		.stabs	"EBI_struct:T(5,217)=s32CTRL:(5,8),0,8;SDRAMCTRLA:(5,8),8,8;reserved_0x02:(5,8),16,8;reserv
 250               		.stabs	"EBI_t:t(5,222)=(5,217)",128,0,1578,0
 251               		.stabs	"EBI_CS_ASPACE_enum:T(5,223)=@s8;eEBI_CS_ASPACE_256B_gc:0,EBI_CS_ASPACE_512B_gc:4,EBI_CS_AS
 252               		.stabs	"EBI_CS_ASPACE_t:t(5,224)=(5,223)",128,0,1600,0
 253               		.stabs	"EBI_CS_SRWS_enum:T(5,225)=@s8;eEBI_CS_SRWS_0CLK_gc:0,EBI_CS_SRWS_1CLK_gc:1,EBI_CS_SRWS_2CL
 254               		.stabs	"EBI_CS_SRWS_t:t(5,226)=(5,225)",128,0,1613,0
 255               		.stabs	"EBI_CS_MODE_enum:T(5,227)=@s8;eEBI_CS_MODE_DISABLED_gc:0,EBI_CS_MODE_SRAM_gc:1,EBI_CS_MODE
 256               		.stabs	"EBI_CS_MODE_t:t(5,228)=(5,227)",128,0,1622,0
 257               		.stabs	"EBI_CS_SDMODE_enum:T(5,229)=@s8;eEBI_CS_SDMODE_NORMAL_gc:0,EBI_CS_SDMODE_LOAD_gc:1,;",128,
 258               		.stabs	"EBI_CS_SDMODE_t:t(5,230)=(5,229)",128,0,1629,0
 259               		.stabs	"EBI_SDDATAW_enum:T(5,231)=@s8;eEBI_SDDATAW_4BIT_gc:0,EBI_SDDATAW_8BIT_gc:64,;",128,0,0,0
 260               		.stabs	"EBI_SDDATAW_t:t(5,232)=(5,231)",128,0,1636,0
 261               		.stabs	"EBI_LPCMODE_enum:T(5,233)=@s8;eEBI_LPCMODE_ALE1_gc:0,EBI_LPCMODE_ALE12_gc:32,;",128,0,0,0
 262               		.stabs	"EBI_LPCMODE_t:t(5,234)=(5,233)",128,0,1643,0
 263               		.stabs	"EBI_SRMODE_enum:T(5,235)=@s8;eEBI_SRMODE_ALE1_gc:0,EBI_SRMODE_ALE2_gc:4,EBI_SRMODE_ALE12_g
 264               		.stabs	"EBI_SRMODE_t:t(5,236)=(5,235)",128,0,1652,0
 265               		.stabs	"EBI_IFMODE_enum:T(5,237)=@s8;eEBI_IFMODE_DISABLED_gc:0,EBI_IFMODE_3PORT_gc:1,EBI_IFMODE_4P
 266               		.stabs	"EBI_IFMODE_t:t(5,238)=(5,237)",128,0,1661,0
 267               		.stabs	"EBI_SDCOL_enum:T(5,239)=@s8;eEBI_SDCOL_8BIT_gc:0,EBI_SDCOL_9BIT_gc:1,EBI_SDCOL_10BIT_gc:2,
 268               		.stabs	"EBI_SDCOL_t:t(5,240)=(5,239)",128,0,1670,0
 269               		.stabs	"EBI_MRDLY_enum:T(5,241)=@s8;eEBI_MRDLY_0CLK_gc:0,EBI_MRDLY_1CLK_gc:64,EBI_MRDLY_2CLK_gc:12
 270               		.stabs	"EBI_MRDLY_t:t(5,242)=(5,241)",128,0,1679,0
 271               		.stabs	"EBI_ROWCYCDLY_enum:T(5,243)=@s8;eEBI_ROWCYCDLY_0CLK_gc:0,EBI_ROWCYCDLY_1CLK_gc:8,EBI_ROWCY
 272               		.stabs	"EBI_ROWCYCDLY_t:t(5,244)=(5,243)",128,0,1692,0
 273               		.stabs	"EBI_RPDLY_enum:T(5,245)=@s8;eEBI_RPDLY_0CLK_gc:0,EBI_RPDLY_1CLK_gc:1,EBI_RPDLY_2CLK_gc:2,E
 274               		.stabs	"EBI_RPDLY_t:t(5,246)=(5,245)",128,0,1705,0
 275               		.stabs	"EBI_WRDLY_enum:T(5,247)=@s8;eEBI_WRDLY_0CLK_gc:0,EBI_WRDLY_1CLK_gc:64,EBI_WRDLY_2CLK_gc:12
 276               		.stabs	"EBI_WRDLY_t:t(5,248)=(5,247)",128,0,1714,0
 277               		.stabs	"EBI_ESRDLY_enum:T(5,249)=@s8;eEBI_ESRDLY_0CLK_gc:0,EBI_ESRDLY_1CLK_gc:8,EBI_ESRDLY_2CLK_gc
 278               		.stabs	"EBI_ESRDLY_t:t(5,250)=(5,249)",128,0,1727,0
 279               		.stabs	"EBI_ROWCOLDLY_enum:T(5,251)=@s8;eEBI_ROWCOLDLY_0CLK_gc:0,EBI_ROWCOLDLY_1CLK_gc:1,EBI_ROWCO
 280               		.stabs	"EBI_ROWCOLDLY_t:t(5,252)=(5,251)",128,0,1740,0
 281               		.stabs	"TWI_MASTER_struct:T(5,253)=s7CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;CTRLC:(5,8),16,8;STATUS:(5,8)
 282               		.stabs	"TWI_MASTER_t:t(5,254)=(5,253)",128,0,1759,0
 283               		.stabs	"TWI_SLAVE_struct:T(5,255)=s6CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;STATUS:(5,8),16,8;ADDR:(5,8),2
 284               		.stabs	"TWI_SLAVE_t:t(5,256)=(5,255)",128,0,1776,0
 285               		.stabs	"TWI_struct:T(5,257)=s14CTRL:(5,8),0,8;MASTER:(5,254),8,56;SLAVE:(5,256),64,48;;",128,0,0,0
GAS LISTING /tmp/cccYkJc5.s 			page 6


 286               		.stabs	"TWI_t:t(5,258)=(5,257)",128,0,1790,0
 287               		.stabs	"TWI_MASTER_INTLVL_enum:T(5,259)=@s8;eTWI_MASTER_INTLVL_OFF_gc:0,TWI_MASTER_INTLVL_LO_gc:64
 288               		.stabs	"TWI_MASTER_INTLVL_t:t(5,260)=(5,259)",128,0,1799,0
 289               		.stabs	"TWI_MASTER_TIMEOUT_enum:T(5,261)=@s8;eTWI_MASTER_TIMEOUT_DISABLED_gc:0,TWI_MASTER_TIMEOUT_
 290               		.stabs	"TWI_MASTER_TIMEOUT_t:t(5,262)=(5,261)",128,0,1808,0
 291               		.stabs	"TWI_MASTER_CMD_enum:T(5,263)=@s8;eTWI_MASTER_CMD_NOACT_gc:0,TWI_MASTER_CMD_REPSTART_gc:1,T
 292               		.stabs	"TWI_MASTER_CMD_t:t(5,264)=(5,263)",128,0,1817,0
 293               		.stabs	"TWI_MASTER_BUSSTATE_enum:T(5,265)=@s8;eTWI_MASTER_BUSSTATE_UNKNOWN_gc:0,TWI_MASTER_BUSSTAT
 294               		.stabs	"TWI_MASTER_BUSSTATE_t:t(5,266)=(5,265)",128,0,1826,0
 295               		.stabs	"TWI_SLAVE_INTLVL_enum:T(5,267)=@s8;eTWI_SLAVE_INTLVL_OFF_gc:0,TWI_SLAVE_INTLVL_LO_gc:64,TW
 296               		.stabs	"TWI_SLAVE_INTLVL_t:t(5,268)=(5,267)",128,0,1835,0
 297               		.stabs	"TWI_SLAVE_CMD_enum:T(5,269)=@s8;eTWI_SLAVE_CMD_NOACT_gc:0,TWI_SLAVE_CMD_COMPTRANS_gc:2,TWI
 298               		.stabs	"TWI_SLAVE_CMD_t:t(5,270)=(5,269)",128,0,1843,0
 299               		.stabs	"PORTCFG_struct:T(5,271)=s5MPCMASK:(5,8),0,8;reserved_0x01:(5,8),8,8;VPCTRLA:(5,8),16,8;VPC
 300               		.stabs	"PORTCFG_t:t(5,272)=(5,271)",128,0,1860,0
 301               		.stabs	"VPORT_struct:T(5,273)=s4DIR:(5,8),0,8;OUT:(5,8),8,8;IN:(5,8),16,8;INTFLAGS:(5,8),24,8;;",1
 302               		.stabs	"VPORT_t:t(5,274)=(5,273)",128,0,1875,0
 303               		.stabs	"PORT_struct:T(5,275)=s24DIR:(5,8),0,8;DIRSET:(5,8),8,8;DIRCLR:(5,8),16,8;DIRTGL:(5,8),24,8
 304               		.stabs	"PORT_t:t(5,276)=(5,275)",128,0,1910,0
 305               		.stabs	"PORTCFG_VP0MAP_enum:T(5,277)=@s8;ePORTCFG_VP0MAP_PORTA_gc:0,PORTCFG_VP0MAP_PORTB_gc:1,PORT
 306               		.stabs	"PORTCFG_VP0MAP_t:t(5,278)=(5,277)",128,0,1931,0
 307               		.stabs	"PORTCFG_VP1MAP_enum:T(5,279)=@s8;ePORTCFG_VP1MAP_PORTA_gc:0,PORTCFG_VP1MAP_PORTB_gc:16,POR
 308               		.stabs	"PORTCFG_VP1MAP_t:t(5,280)=(5,279)",128,0,1952,0
 309               		.stabs	"PORTCFG_VP2MAP_enum:T(5,281)=@s8;ePORTCFG_VP2MAP_PORTA_gc:0,PORTCFG_VP2MAP_PORTB_gc:1,PORT
 310               		.stabs	"PORTCFG_VP2MAP_t:t(5,282)=(5,281)",128,0,1973,0
 311               		.stabs	"PORTCFG_VP3MAP_enum:T(5,283)=@s8;ePORTCFG_VP3MAP_PORTA_gc:0,PORTCFG_VP3MAP_PORTB_gc:16,POR
 312               		.stabs	"PORTCFG_VP3MAP_t:t(5,284)=(5,283)",128,0,1994,0
 313               		.stabs	"PORTCFG_CLKOUT_enum:T(5,285)=@s8;ePORTCFG_CLKOUT_OFF_gc:0,PORTCFG_CLKOUT_PC7_gc:1,PORTCFG_
 314               		.stabs	"PORTCFG_CLKOUT_t:t(5,286)=(5,285)",128,0,2003,0
 315               		.stabs	"PORTCFG_EVOUT_enum:T(5,287)=@s8;ePORTCFG_EVOUT_OFF_gc:0,PORTCFG_EVOUT_PC7_gc:16,PORTCFG_EV
 316               		.stabs	"PORTCFG_EVOUT_t:t(5,288)=(5,287)",128,0,2012,0
 317               		.stabs	"PORT_INT0LVL_enum:T(5,289)=@s8;ePORT_INT0LVL_OFF_gc:0,PORT_INT0LVL_LO_gc:1,PORT_INT0LVL_ME
 318               		.stabs	"PORT_INT0LVL_t:t(5,290)=(5,289)",128,0,2021,0
 319               		.stabs	"PORT_INT1LVL_enum:T(5,291)=@s8;ePORT_INT1LVL_OFF_gc:0,PORT_INT1LVL_LO_gc:4,PORT_INT1LVL_ME
 320               		.stabs	"PORT_INT1LVL_t:t(5,292)=(5,291)",128,0,2030,0
 321               		.stabs	"PORT_OPC_enum:T(5,293)=@s8;ePORT_OPC_TOTEM_gc:0,PORT_OPC_BUSKEEPER_gc:8,PORT_OPC_PULLDOWN_
 322               		.stabs	"PORT_OPC_t:t(5,294)=(5,293)",128,0,2043,0
 323               		.stabs	"PORT_ISC_enum:T(5,295)=@s8;ePORT_ISC_BOTHEDGES_gc:0,PORT_ISC_RISING_gc:1,PORT_ISC_FALLING_
 324               		.stabs	"PORT_ISC_t:t(5,296)=(5,295)",128,0,2053,0
 325               		.stabs	"TC0_struct:T(5,297)=s64CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;CTRLC:(5,8),16,8;CTRLD:(5,8),24,8;C
 326               		.stabs	"TC0_t:t(5,320)=(5,297)",128,0,2118,0
 327               		.stabs	"TC1_struct:T(5,321)=s60CTRLA:(5,8),0,8;CTRLB:(5,8),8,8;CTRLC:(5,8),16,8;CTRLD:(5,8),24,8;C
 328               		.stabs	"TC1_t:t(5,336)=(5,321)",128,0,2182,0
 329               		.stabs	"AWEX_struct:T(5,337)=s13CTRL:(5,8),0,8;reserved_0x01:(5,8),8,8;FDEVMASK:(5,8),16,8;FDCTRL:
 330               		.stabs	"AWEX_t:t(5,338)=(5,337)",128,0,2206,0
 331               		.stabs	"HIRES_struct:T(5,339)=s1CTRL:(5,8),0,8;;",128,0,0,0
 332               		.stabs	"HIRES_t:t(5,340)=(5,339)",128,0,2218,0
 333               		.stabs	"TC_CLKSEL_enum:T(5,341)=@s8;eTC_CLKSEL_OFF_gc:0,TC_CLKSEL_DIV1_gc:1,TC_CLKSEL_DIV2_gc:2,TC
 334               		.stabs	"TC_CLKSEL_t:t(5,342)=(5,341)",128,0,2239,0
 335               		.stabs	"TC_WGMODE_enum:T(5,343)=@s8;eTC_WGMODE_NORMAL_gc:0,TC_WGMODE_FRQ_gc:1,TC_WGMODE_SS_gc:3,TC
 336               		.stabs	"TC_WGMODE_t:t(5,344)=(5,343)",128,0,2250,0
 337               		.stabs	"TC_EVACT_enum:T(5,345)=@s8;eTC_EVACT_OFF_gc:0,TC_EVACT_CAPT_gc:32,TC_EVACT_UPDOWN_gc:64,TC
 338               		.stabs	"TC_EVACT_t:t(5,346)=(5,345)",128,0,2262,0
 339               		.stabs	"TC_EVSEL_enum:T(5,347)=@s8;eTC_EVSEL_OFF_gc:0,TC_EVSEL_CH0_gc:8,TC_EVSEL_CH1_gc:9,TC_EVSEL
 340               		.stabs	"TC_EVSEL_t:t(5,348)=(5,347)",128,0,2276,0
 341               		.stabs	"TC_ERRINTLVL_enum:T(5,349)=@s8;eTC_ERRINTLVL_OFF_gc:0,TC_ERRINTLVL_LO_gc:4,TC_ERRINTLVL_ME
 342               		.stabs	"TC_ERRINTLVL_t:t(5,350)=(5,349)",128,0,2285,0
GAS LISTING /tmp/cccYkJc5.s 			page 7


 343               		.stabs	"TC_OVFINTLVL_enum:T(5,351)=@s8;eTC_OVFINTLVL_OFF_gc:0,TC_OVFINTLVL_LO_gc:1,TC_OVFINTLVL_ME
 344               		.stabs	"TC_OVFINTLVL_t:t(5,352)=(5,351)",128,0,2294,0
 345               		.stabs	"TC_CCDINTLVL_enum:T(5,353)=@s8;eTC_CCDINTLVL_OFF_gc:0,TC_CCDINTLVL_LO_gc:64,TC_CCDINTLVL_M
 346               		.stabs	"TC_CCDINTLVL_t:t(5,354)=(5,353)",128,0,2303,0
 347               		.stabs	"TC_CCCINTLVL_enum:T(5,355)=@s8;eTC_CCCINTLVL_OFF_gc:0,TC_CCCINTLVL_LO_gc:16,TC_CCCINTLVL_M
 348               		.stabs	"TC_CCCINTLVL_t:t(5,356)=(5,355)",128,0,2312,0
 349               		.stabs	"TC_CCBINTLVL_enum:T(5,357)=@s8;eTC_CCBINTLVL_OFF_gc:0,TC_CCBINTLVL_LO_gc:4,TC_CCBINTLVL_ME
 350               		.stabs	"TC_CCBINTLVL_t:t(5,358)=(5,357)",128,0,2321,0
 351               		.stabs	"TC_CCAINTLVL_enum:T(5,359)=@s8;eTC_CCAINTLVL_OFF_gc:0,TC_CCAINTLVL_LO_gc:1,TC_CCAINTLVL_ME
 352               		.stabs	"TC_CCAINTLVL_t:t(5,360)=(5,359)",128,0,2330,0
 353               		.stabs	"TC_CMD_enum:T(5,361)=@s8;eTC_CMD_NONE_gc:0,TC_CMD_UPDATE_gc:4,TC_CMD_RESTART_gc:8,TC_CMD_R
 354               		.stabs	"TC_CMD_t:t(5,362)=(5,361)",128,0,2339,0
 355               		.stabs	"AWEX_FDACT_enum:T(5,363)=@s8;eAWEX_FDACT_NONE_gc:0,AWEX_FDACT_CLEAROE_gc:1,AWEX_FDACT_CLEA
 356               		.stabs	"AWEX_FDACT_t:t(5,364)=(5,363)",128,0,2347,0
 357               		.stabs	"HIRES_HREN_enum:T(5,365)=@s8;eHIRES_HREN_NONE_gc:0,HIRES_HREN_TC0_gc:1,HIRES_HREN_TC1_gc:2
 358               		.stabs	"HIRES_HREN_t:t(5,366)=(5,365)",128,0,2356,0
 359               		.stabs	"USART_struct:T(5,367)=s8DATA:(5,8),0,8;STATUS:(5,8),8,8;reserved_0x02:(5,8),16,8;CTRLA:(5,
 360               		.stabs	"USART_t:t(5,368)=(5,367)",128,0,2376,0
 361               		.stabs	"USART_RXCINTLVL_enum:T(5,369)=@s8;eUSART_RXCINTLVL_OFF_gc:0,USART_RXCINTLVL_LO_gc:16,USART
 362               		.stabs	"USART_RXCINTLVL_t:t(5,370)=(5,369)",128,0,2385,0
 363               		.stabs	"USART_TXCINTLVL_enum:T(5,371)=@s8;eUSART_TXCINTLVL_OFF_gc:0,USART_TXCINTLVL_LO_gc:4,USART_
 364               		.stabs	"USART_TXCINTLVL_t:t(5,372)=(5,371)",128,0,2394,0
 365               		.stabs	"USART_DREINTLVL_enum:T(5,373)=@s8;eUSART_DREINTLVL_OFF_gc:0,USART_DREINTLVL_LO_gc:1,USART_
 366               		.stabs	"USART_DREINTLVL_t:t(5,374)=(5,373)",128,0,2403,0
 367               		.stabs	"USART_CHSIZE_enum:T(5,375)=@s8;eUSART_CHSIZE_5BIT_gc:0,USART_CHSIZE_6BIT_gc:1,USART_CHSIZE
 368               		.stabs	"USART_CHSIZE_t:t(5,376)=(5,375)",128,0,2413,0
 369               		.stabs	"USART_CMODE_enum:T(5,377)=@s8;eUSART_CMODE_ASYNCHRONOUS_gc:0,USART_CMODE_SYNCHRONOUS_gc:64
 370               		.stabs	"USART_CMODE_t:t(5,378)=(5,377)",128,0,2422,0
 371               		.stabs	"USART_PMODE_enum:T(5,379)=@s8;eUSART_PMODE_DISABLED_gc:0,USART_PMODE_EVEN_gc:32,USART_PMOD
 372               		.stabs	"USART_PMODE_t:t(5,380)=(5,379)",128,0,2430,0
 373               		.stabs	"SPI_struct:T(5,381)=s4CTRL:(5,8),0,8;INTCTRL:(5,8),8,8;STATUS:(5,8),16,8;DATA:(5,8),24,8;;
 374               		.stabs	"SPI_t:t(5,382)=(5,381)",128,0,2446,0
 375               		.stabs	"SPI_MODE_enum:T(5,383)=@s8;eSPI_MODE_0_gc:0,SPI_MODE_1_gc:4,SPI_MODE_2_gc:8,SPI_MODE_3_gc:
 376               		.stabs	"SPI_MODE_t:t(5,384)=(5,383)",128,0,2455,0
 377               		.stabs	"SPI_PRESCALER_enum:T(5,385)=@s8;eSPI_PRESCALER_DIV4_gc:0,SPI_PRESCALER_DIV16_gc:1,SPI_PRES
 378               		.stabs	"SPI_PRESCALER_t:t(5,386)=(5,385)",128,0,2464,0
 379               		.stabs	"SPI_INTLVL_enum:T(5,387)=@s8;eSPI_INTLVL_OFF_gc:0,SPI_INTLVL_LO_gc:1,SPI_INTLVL_MED_gc:2,S
 380               		.stabs	"SPI_INTLVL_t:t(5,388)=(5,387)",128,0,2473,0
 381               		.stabs	"IRCOM_struct:T(5,389)=s3CTRL:(5,8),0,8;TXPLCTRL:(5,8),8,8;RXPLCTRL:(5,8),16,8;;",128,0,0,0
 382               		.stabs	"IRCOM_t:t(5,390)=(5,389)",128,0,2488,0
 383               		.stabs	"IRDA_EVSEL_enum:T(5,391)=@s8;eIRDA_EVSEL_OFF_gc:0,IRDA_EVSEL_0_gc:8,IRDA_EVSEL_1_gc:9,IRDA
 384               		.stabs	"IRDA_EVSEL_t:t(5,392)=(5,391)",128,0,2502,0
 385               		.stabs	"AES_struct:T(5,393)=s5CTRL:(5,8),0,8;STATUS:(5,8),8,8;STATE:(5,8),16,8;KEY:(5,8),24,8;INTC
 386               		.stabs	"AES_t:t(5,394)=(5,393)",128,0,2519,0
 387               		.stabs	"AES_INTLVL_enum:T(5,395)=@s8;eAES_INTLVL_OFF_gc:0,AES_INTLVL_LO_gc:1,AES_INTLVL_MED_gc:2,A
 388               		.stabs	"AES_INTLVL_t:t(5,396)=(5,395)",128,0,2528,0
 389               		.stabn	162,0,0,0
 390               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/fuse.h",130,0,0,0
 391               		.stabs	"__fuse_t:t(6,1)=(6,2)=s6byte:(6,3)=ar(6,4)=r(6,4);0;0177777;;0;5;(0,11),0,48;;",128,0,229,
 392               		.stabn	162,0,0,0
 393               		.stabn	162,0,0,0
 394               		.stabs	"requiredFiles/avr_compiler.h",130,0,0,0
 395               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdlib.h",130,0,0,0
 396               		.stabs	"/usr/lib/gcc/avr/4.3.4/include/stddef.h",130,0,0,0
 397               		.stabs	"size_t:t(9,1)=(0,4)",128,0,214,0
 398               		.stabs	"wchar_t:t(9,2)=(0,1)",128,0,326,0
 399               		.stabn	162,0,0,0
GAS LISTING /tmp/cccYkJc5.s 			page 8


 400               		.stabs	"div_t:t(8,1)=(8,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 401               		.stabs	"ldiv_t:t(8,3)=(8,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 402               		.stabs	"__compar_fn_t:t(8,5)=(8,6)=*(8,7)=f(0,1)",128,0,80,0
 403               		.stabn	162,0,0,0
 404               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/pgmspace.h",130,0,0,0
 405               		.stabs	"prog_void:t(10,1)=(10,2)=(10,2)",128,0,211,0
 406               		.stabs	"prog_char:t(10,3)=(10,4)=@s8;r(10,4);0;255;",128,0,212,0
 407               		.stabs	"prog_uchar:t(10,5)=(10,4)",128,0,213,0
 408               		.stabs	"prog_int8_t:t(10,6)=(10,7)=(0,10)",128,0,215,0
 409               		.stabs	"prog_uint8_t:t(10,8)=(10,4)",128,0,216,0
 410               		.stabs	"prog_int16_t:t(10,9)=(10,10)=(0,1)",128,0,217,0
 411               		.stabs	"prog_uint16_t:t(10,11)=(10,12)=(0,4)",128,0,218,0
 412               		.stabs	"prog_int32_t:t(10,13)=(10,14)=(0,3)",128,0,219,0
 413               		.stabs	"prog_uint32_t:t(10,15)=(10,16)=(0,5)",128,0,220,0
 414               		.stabs	"prog_int64_t:t(10,17)=(10,18)=(0,6)",128,0,222,0
 415               		.stabs	"prog_uint64_t:t(10,19)=(10,20)=(0,7)",128,0,223,0
 416               		.stabn	162,0,0,0
 417               		.stabn	162,0,0,0
 418               		.stabs	"CCPWrite:F(0,15)",36,0,78,CCPWrite
 419               		.stabs	"address:P(0,16)=*(5,2)",64,0,77,24
 420               		.stabs	"value:P(4,2)",64,0,77,22
 421               	.global	CCPWrite
 422               		.type	CCPWrite, @function
 423               	CCPWrite:
 424               		.stabd	46,0,0
 425               		.stabs	"requiredFiles/clksys_driver.c",132,0,0,.Ltext1
 426               	.Ltext1:
   0:requiredFiles/clksys_driver.c **** /* This file has been prepared for Doxygen automatic documentation generation.*/
   1:requiredFiles/clksys_driver.c **** /*! \file *********************************************************************
   2:requiredFiles/clksys_driver.c ****  *
   3:requiredFiles/clksys_driver.c ****  * \brief  XMEGA Clock System driver source file.
   4:requiredFiles/clksys_driver.c ****  *
   5:requiredFiles/clksys_driver.c ****  *      This file contains the function implementations for the XMEGA Clock
   6:requiredFiles/clksys_driver.c ****  *      System driver.
   7:requiredFiles/clksys_driver.c ****  *
   8:requiredFiles/clksys_driver.c ****  *      The driver is not intended for size and/or speed critical code, since
   9:requiredFiles/clksys_driver.c ****  *      most functions are just a few lines of code, and the function call
  10:requiredFiles/clksys_driver.c ****  *      overhead would decrease code performance. The driver is intended for
  11:requiredFiles/clksys_driver.c ****  *      rapid prototyping and documentation purposes for getting started with
  12:requiredFiles/clksys_driver.c ****  *      the XMEGA Clock System.
  13:requiredFiles/clksys_driver.c ****  *
  14:requiredFiles/clksys_driver.c ****  *      For size and/or speed critical code, it is recommended to copy the
  15:requiredFiles/clksys_driver.c ****  *      function contents directly into your application instead of making
  16:requiredFiles/clksys_driver.c ****  *      a function call.
  17:requiredFiles/clksys_driver.c ****  *
  18:requiredFiles/clksys_driver.c ****  *      Several functions use the following construct:
  19:requiredFiles/clksys_driver.c ****  *          "some_register = ... | (some_parameter ? SOME_BIT_bm : 0) | ..."
  20:requiredFiles/clksys_driver.c ****  *      Although the use of the ternary operator ( if ? then : else ) is
  21:requiredFiles/clksys_driver.c ****  *      discouraged, in some occasions the operator makes it possible to
  22:requiredFiles/clksys_driver.c ****  *      write pretty clean and neat code. In this driver, the construct is
  23:requiredFiles/clksys_driver.c ****  *      used to set or not set a configuration bit based on a boolean input
  24:requiredFiles/clksys_driver.c ****  *      parameter, such as the "some_parameter" in the example above.
  25:requiredFiles/clksys_driver.c ****  *
  26:requiredFiles/clksys_driver.c ****  * \par Application note:
  27:requiredFiles/clksys_driver.c ****  *      AVR1003: Using the XMEGA Clock System
  28:requiredFiles/clksys_driver.c ****  *
  29:requiredFiles/clksys_driver.c ****  * \par Documentation
GAS LISTING /tmp/cccYkJc5.s 			page 9


  30:requiredFiles/clksys_driver.c ****  *      For comprehensive code documentation, supported compilers, compiler
  31:requiredFiles/clksys_driver.c ****  *      settings and supported devices see readme.html
  32:requiredFiles/clksys_driver.c ****  *
  33:requiredFiles/clksys_driver.c ****  * \author
  34:requiredFiles/clksys_driver.c ****  *      Atmel Corporation: http://www.atmel.com \n
  35:requiredFiles/clksys_driver.c ****  *      Support email: avr@atmel.com
  36:requiredFiles/clksys_driver.c ****  *
  37:requiredFiles/clksys_driver.c ****  * $Revision: 2771 $
  38:requiredFiles/clksys_driver.c ****  * $Date: 2009-09-11 11:54:26 +0200 (fr, 11 sep 2009) $  \n
  39:requiredFiles/clksys_driver.c ****  *
  40:requiredFiles/clksys_driver.c ****  * Copyright (c) 2008, Atmel Corporation All rights reserved.
  41:requiredFiles/clksys_driver.c ****  *
  42:requiredFiles/clksys_driver.c ****  * Redistribution and use in source and binary forms, with or without
  43:requiredFiles/clksys_driver.c ****  * modification, are permitted provided that the following conditions are met:
  44:requiredFiles/clksys_driver.c ****  *
  45:requiredFiles/clksys_driver.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  46:requiredFiles/clksys_driver.c ****  * this list of conditions and the following disclaimer.
  47:requiredFiles/clksys_driver.c ****  *
  48:requiredFiles/clksys_driver.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  49:requiredFiles/clksys_driver.c ****  * this list of conditions and the following disclaimer in the documentation
  50:requiredFiles/clksys_driver.c ****  * and/or other materials provided with the distribution.
  51:requiredFiles/clksys_driver.c ****  *
  52:requiredFiles/clksys_driver.c ****  * 3. The name of ATMEL may not be used to endorse or promote products derived
  53:requiredFiles/clksys_driver.c ****  * from this software without specific prior written permission.
  54:requiredFiles/clksys_driver.c ****  *
  55:requiredFiles/clksys_driver.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  56:requiredFiles/clksys_driver.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  57:requiredFiles/clksys_driver.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY AND
  58:requiredFiles/clksys_driver.c ****  * SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT,
  59:requiredFiles/clksys_driver.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  60:requiredFiles/clksys_driver.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  61:requiredFiles/clksys_driver.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  62:requiredFiles/clksys_driver.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  63:requiredFiles/clksys_driver.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  64:requiredFiles/clksys_driver.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  65:requiredFiles/clksys_driver.c ****  *****************************************************************************/
  66:requiredFiles/clksys_driver.c **** #include "clksys_driver.h"
  67:requiredFiles/clksys_driver.c **** 
  68:requiredFiles/clksys_driver.c **** /*! \brief CCP write helper function written in assembly.
  69:requiredFiles/clksys_driver.c ****  *
  70:requiredFiles/clksys_driver.c ****  *  This function is written in assembly because of the timecritial
  71:requiredFiles/clksys_driver.c ****  *  operation of writing to the registers.
  72:requiredFiles/clksys_driver.c ****  *
  73:requiredFiles/clksys_driver.c ****  *  \param address A pointer to the address to write to.
  74:requiredFiles/clksys_driver.c ****  *  \param value   The value to put in to the register.
  75:requiredFiles/clksys_driver.c ****  */
  76:requiredFiles/clksys_driver.c **** void CCPWrite( volatile uint8_t * address, uint8_t value )
  77:requiredFiles/clksys_driver.c **** {
 427               		.stabn	68,0,78,.LM0-.LFBB1
 428               	.LM0:
 429               	.LFBB1:
 430 0000 0F93      		push r16
 431 0002 DF93      		push r29
 432 0004 CF93      		push r28
 433 0006 0F92      		push __tmp_reg__
 434 0008 CDB7      		in r28,__SP_L__
 435 000a DEB7      		in r29,__SP_H__
GAS LISTING /tmp/cccYkJc5.s 			page 10


 436               	/* prologue: function */
 437               	/* frame size = 1 */
  78:requiredFiles/clksys_driver.c **** #ifdef __ICCAVR__
  79:requiredFiles/clksys_driver.c **** 
  80:requiredFiles/clksys_driver.c **** 	// Store global interrupt setting in scratch register and disable interrupts.
  81:requiredFiles/clksys_driver.c ****         asm("in  R1, 0x3F \n"
  82:requiredFiles/clksys_driver.c **** 	    "cli"
  83:requiredFiles/clksys_driver.c **** 	    );
  84:requiredFiles/clksys_driver.c **** 
  85:requiredFiles/clksys_driver.c **** 	// Move destination address pointer to Z pointer registers.
  86:requiredFiles/clksys_driver.c **** 	asm("movw r30, r16");
  87:requiredFiles/clksys_driver.c **** #ifdef RAMPZ
  88:requiredFiles/clksys_driver.c **** 	asm("ldi  R16, 0 \n"
  89:requiredFiles/clksys_driver.c ****             "out  0x3B, R16"
  90:requiredFiles/clksys_driver.c **** 	    );
  91:requiredFiles/clksys_driver.c **** 
  92:requiredFiles/clksys_driver.c **** #endif
  93:requiredFiles/clksys_driver.c **** 	asm("ldi  r16,  0xD8 \n"
  94:requiredFiles/clksys_driver.c **** 	    "out  0x34, r16  \n"
  95:requiredFiles/clksys_driver.c **** #if (__MEMORY_MODEL__ == 1)
  96:requiredFiles/clksys_driver.c **** 	    "st     Z,  r17  \n");
  97:requiredFiles/clksys_driver.c **** #elif (__MEMORY_MODEL__ == 2)
  98:requiredFiles/clksys_driver.c **** 	    "st     Z,  r18  \n");
  99:requiredFiles/clksys_driver.c **** #else /* (__MEMORY_MODEL__ == 3) || (__MEMORY_MODEL__ == 5) */
 100:requiredFiles/clksys_driver.c **** 	    "st     Z,  r19  \n");
 101:requiredFiles/clksys_driver.c **** #endif /* __MEMORY_MODEL__ */
 102:requiredFiles/clksys_driver.c **** 
 103:requiredFiles/clksys_driver.c **** 	// Restore global interrupt setting from scratch register.
 104:requiredFiles/clksys_driver.c ****         asm("out  0x3F, R1");
 105:requiredFiles/clksys_driver.c **** 
 106:requiredFiles/clksys_driver.c **** #elif defined __GNUC__
 107:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 438               		.stabn	68,0,108,.LM1-.LFBB1
 439               	.LM1:
 440 000c 2FB7      		in r18,__SREG__
 441 000e 2983      		std Y+1,r18
 442               	/* #APP */
 443               	 ;  108 "requiredFiles/clksys_driver.c" 1
 444 0010 F894      		cli
 445               	 ;  0 "" 2
 108:requiredFiles/clksys_driver.c **** 	volatile uint8_t * tmpAddr = address;
 109:requiredFiles/clksys_driver.c **** #ifdef RAMPZ
 110:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 446               		.stabn	68,0,111,.LM2-.LFBB1
 447               	.LM2:
 448               	/* #NOAPP */
 449 0012 1BBE      		out 59-0,__zero_reg__
 111:requiredFiles/clksys_driver.c **** #endif
 112:requiredFiles/clksys_driver.c **** 	asm volatile(
 450               		.stabn	68,0,113,.LM3-.LFBB1
 451               	.LM3:
 452               	/* #APP */
 453               	 ;  113 "requiredFiles/clksys_driver.c" 1
 454 0014 FC01      		movw r30,  r24
 455 0016 08ED      		ldi  r16,  216
 456 0018 04BF      		out   52, r16
 457 001a 6083      		st     Z,  r22
GAS LISTING /tmp/cccYkJc5.s 			page 11


 458               		
 459               	 ;  0 "" 2
 113:requiredFiles/clksys_driver.c **** 		"movw r30,  %0"	      "\n\t"
 114:requiredFiles/clksys_driver.c **** 		"ldi  r16,  %2"	      "\n\t"
 115:requiredFiles/clksys_driver.c **** 		"out   %3, r16"	      "\n\t"
 116:requiredFiles/clksys_driver.c **** 		"st     Z,  %1"       "\n\t"
 117:requiredFiles/clksys_driver.c **** 		:
 118:requiredFiles/clksys_driver.c **** 		: "r" (tmpAddr), "r" (value), "M" (CCP_IOREG_gc), "i" (&CCP)
 119:requiredFiles/clksys_driver.c **** 		: "r16", "r30", "r31"
 120:requiredFiles/clksys_driver.c **** 		);
 121:requiredFiles/clksys_driver.c **** 
 122:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 460               		.stabn	68,0,123,.LM4-.LFBB1
 461               	.LM4:
 462               	/* #NOAPP */
 463 001c 8981      		ldd r24,Y+1
 464 001e 8FBF      		out __SREG__,r24
 465               	/* epilogue start */
 123:requiredFiles/clksys_driver.c **** #endif
 124:requiredFiles/clksys_driver.c **** }
 466               		.stabn	68,0,125,.LM5-.LFBB1
 467               	.LM5:
 468 0020 0F90      		pop __tmp_reg__
 469 0022 CF91      		pop r28
 470 0024 DF91      		pop r29
 471 0026 0F91      		pop r16
 472 0028 0895      		ret
 473               		.size	CCPWrite, .-CCPWrite
 474               		.stabs	"saved_sreg:(5,2)",128,0,108,1
 475               		.stabn	192,0,0,.LFBB1-.LFBB1
 476               		.stabn	224,0,0,.Lscope1-.LFBB1
 477               	.Lscope1:
 478               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 479               		.stabd	78,0,0
 480               		.stabs	"CLKSYS_XOSC_Config:F(0,15)",36,0,144,CLKSYS_XOSC_Config
 481               		.stabs	"freqRange:P(5,31)",64,0,141,24
 482               		.stabs	"lowPower32kHz:P(0,17)=@s8;-16;",64,0,142,22
 483               		.stabs	"xoscModeSelection:P(5,33)",64,0,143,20
 484               	.global	CLKSYS_XOSC_Config
 485               		.type	CLKSYS_XOSC_Config, @function
 486               	CLKSYS_XOSC_Config:
 487               		.stabd	46,0,0
 125:requiredFiles/clksys_driver.c **** 
 126:requiredFiles/clksys_driver.c **** /*! \brief This function configures the external oscillator.
 127:requiredFiles/clksys_driver.c ****  *
 128:requiredFiles/clksys_driver.c ****  *  \note Note that the oscillator cannot be used as a main system clock
 129:requiredFiles/clksys_driver.c ****  *        source without being enabled and stable first. Check the ready flag
 130:requiredFiles/clksys_driver.c ****  *        before using the clock. The macro CLKSYS_IsReady( _oscSel )
 131:requiredFiles/clksys_driver.c ****  *        can be used to check this.
 132:requiredFiles/clksys_driver.c ****  *
 133:requiredFiles/clksys_driver.c ****  *  \param  freqRange          Frequency range for high-frequency crystal, does
 134:requiredFiles/clksys_driver.c ****  *                             not apply for external clock or 32kHz crystals.
 135:requiredFiles/clksys_driver.c ****  *  \param  lowPower32kHz      True of high-quality watch crystals are used and
 136:requiredFiles/clksys_driver.c ****  *                             low-power oscillator is desired.
 137:requiredFiles/clksys_driver.c ****  *  \param  xoscModeSelection  Combined selection of oscillator type (or
 138:requiredFiles/clksys_driver.c ****  *                             external clock) and startup times.
 139:requiredFiles/clksys_driver.c ****  */
GAS LISTING /tmp/cccYkJc5.s 			page 12


 140:requiredFiles/clksys_driver.c **** void CLKSYS_XOSC_Config( OSC_FRQRANGE_t freqRange,
 141:requiredFiles/clksys_driver.c ****                          bool lowPower32kHz,
 142:requiredFiles/clksys_driver.c ****                          OSC_XOSCSEL_t xoscModeSelection )
 143:requiredFiles/clksys_driver.c **** {
 488               		.stabn	68,0,144,.LM6-.LFBB2
 489               	.LM6:
 490               	.LFBB2:
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 144:requiredFiles/clksys_driver.c **** 	OSC.XOSCCTRL = (uint8_t) freqRange |
 493               		.stabn	68,0,145,.LM7-.LFBB2
 494               	.LM7:
 495 002a 6623      		tst r22
 496 002c 01F4      		brne .L4
 497 002e 90E0      		ldi r25,lo8(0)
 498 0030 00C0      		rjmp .L5
 499               	.L4:
 500 0032 90E2      		ldi r25,lo8(32)
 501               	.L5:
 502 0034 482B      		or r20,r24
 503 0036 942B      		or r25,r20
 504 0038 E0E5      		ldi r30,lo8(80)
 505 003a F0E0      		ldi r31,hi8(80)
 506 003c 9283      		std Z+2,r25
 507               	/* epilogue start */
 145:requiredFiles/clksys_driver.c **** 	               ( lowPower32kHz ? OSC_X32KLPM_bm : 0 ) |
 146:requiredFiles/clksys_driver.c **** 	               xoscModeSelection;
 147:requiredFiles/clksys_driver.c **** }
 508               		.stabn	68,0,148,.LM8-.LFBB2
 509               	.LM8:
 510 003e 0895      		ret
 511               		.size	CLKSYS_XOSC_Config, .-CLKSYS_XOSC_Config
 512               	.Lscope2:
 513               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 514               		.stabd	78,0,0
 515               		.stabs	"CLKSYS_PLL_Config:F(0,15)",36,0,168,CLKSYS_PLL_Config
 516               		.stabs	"clockSource:P(5,35)",64,0,167,24
 517               		.stabs	"factor:P(4,2)",64,0,167,22
 518               	.global	CLKSYS_PLL_Config
 519               		.type	CLKSYS_PLL_Config, @function
 520               	CLKSYS_PLL_Config:
 521               		.stabd	46,0,0
 148:requiredFiles/clksys_driver.c **** 
 149:requiredFiles/clksys_driver.c **** 
 150:requiredFiles/clksys_driver.c **** /*! \brief This function configures the internal high-frequency PLL.
 151:requiredFiles/clksys_driver.c ****  *
 152:requiredFiles/clksys_driver.c ****  *  Configuration of the internal high-frequency PLL to the correct
 153:requiredFiles/clksys_driver.c ****  *  values. It is used to define the input of the PLL and the factor of
 154:requiredFiles/clksys_driver.c ****  *  multiplication of the input clock source.
 155:requiredFiles/clksys_driver.c ****  *
 156:requiredFiles/clksys_driver.c ****  *  \note Note that the oscillator cannot be used as a main system clock
 157:requiredFiles/clksys_driver.c ****  *        source without being enabled and stable first. Check the ready flag
 158:requiredFiles/clksys_driver.c ****  *        before using the clock. The macro CLKSYS_IsReady( _oscSel )
 159:requiredFiles/clksys_driver.c ****  *        can be used to check this.
 160:requiredFiles/clksys_driver.c ****  *
 161:requiredFiles/clksys_driver.c ****  *  \param  clockSource Reference clock source for the PLL,
 162:requiredFiles/clksys_driver.c ****  *                      must be above 0.4MHz.
GAS LISTING /tmp/cccYkJc5.s 			page 13


 163:requiredFiles/clksys_driver.c ****  *  \param  factor      PLL multiplication factor, must be
 164:requiredFiles/clksys_driver.c ****  *                      from 1 to 31, inclusive.
 165:requiredFiles/clksys_driver.c ****  */
 166:requiredFiles/clksys_driver.c **** void CLKSYS_PLL_Config( OSC_PLLSRC_t clockSource, uint8_t factor )
 167:requiredFiles/clksys_driver.c **** {
 522               		.stabn	68,0,168,.LM9-.LFBB3
 523               	.LM9:
 524               	.LFBB3:
 525               	/* prologue: function */
 526               	/* frame size = 0 */
 168:requiredFiles/clksys_driver.c **** 	factor &= OSC_PLLFAC_gm;
 169:requiredFiles/clksys_driver.c **** 	OSC.PLLCTRL = (uint8_t) clockSource | ( factor << OSC_PLLFAC_gp );
 527               		.stabn	68,0,170,.LM10-.LFBB3
 528               	.LM10:
 529 0040 6F71      		andi r22,lo8(31)
 530 0042 682B      		or r22,r24
 531 0044 E0E5      		ldi r30,lo8(80)
 532 0046 F0E0      		ldi r31,hi8(80)
 533 0048 6583      		std Z+5,r22
 534               	/* epilogue start */
 170:requiredFiles/clksys_driver.c **** }
 535               		.stabn	68,0,171,.LM11-.LFBB3
 536               	.LM11:
 537 004a 0895      		ret
 538               		.size	CLKSYS_PLL_Config, .-CLKSYS_PLL_Config
 539               	.Lscope3:
 540               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 541               		.stabd	78,0,0
 542               		.stabs	"CLKSYS_Disable:F(4,2)",36,0,188,CLKSYS_Disable
 543               		.stabs	"oscSel:P(4,2)",64,0,187,24
 544               	.global	CLKSYS_Disable
 545               		.type	CLKSYS_Disable, @function
 546               	CLKSYS_Disable:
 547               		.stabd	46,0,0
 171:requiredFiles/clksys_driver.c **** 
 172:requiredFiles/clksys_driver.c **** 
 173:requiredFiles/clksys_driver.c **** /*! \brief This function disables the selected oscillator.
 174:requiredFiles/clksys_driver.c ****  *
 175:requiredFiles/clksys_driver.c ****  *  This function will disable the selected oscillator if possible.
 176:requiredFiles/clksys_driver.c ****  *  If it is currently used as a main system clock source, hardware will
 177:requiredFiles/clksys_driver.c ****  *  disregard the disable attempt, and this function will return zero.
 178:requiredFiles/clksys_driver.c ****  *  If it fails, change to another main system clock source and try again.
 179:requiredFiles/clksys_driver.c ****  *
 180:requiredFiles/clksys_driver.c ****  *  \param oscSel  Bitmask of selected clock. Can be one of the following
 181:requiredFiles/clksys_driver.c ****  *                 OSC_RC2MEN_bm, OSC_RC32MEN_bm, OSC_RC32KEN_bm,
 182:requiredFiles/clksys_driver.c ****  *                 OSC_XOSCEN_bm, OSC_PLLEN_bm.
 183:requiredFiles/clksys_driver.c ****  *
 184:requiredFiles/clksys_driver.c ****  *  \return  Non-zero if oscillator was disabled successfully.
 185:requiredFiles/clksys_driver.c ****  */
 186:requiredFiles/clksys_driver.c **** uint8_t CLKSYS_Disable( uint8_t oscSel )
 187:requiredFiles/clksys_driver.c **** {
 548               		.stabn	68,0,188,.LM12-.LFBB4
 549               	.LM12:
 550               	.LFBB4:
 551               	/* prologue: function */
 552               	/* frame size = 0 */
 188:requiredFiles/clksys_driver.c **** 	OSC.CTRL &= ~oscSel;
GAS LISTING /tmp/cccYkJc5.s 			page 14


 553               		.stabn	68,0,189,.LM13-.LFBB4
 554               	.LM13:
 555 004c E0E5      		ldi r30,lo8(80)
 556 004e F0E0      		ldi r31,hi8(80)
 557 0050 2081      		ld r18,Z
 558 0052 982F      		mov r25,r24
 559 0054 9095      		com r25
 560 0056 9223      		and r25,r18
 561 0058 9083      		st Z,r25
 189:requiredFiles/clksys_driver.c **** 	uint8_t clkEnabled = OSC.CTRL & oscSel;
 562               		.stabn	68,0,190,.LM14-.LFBB4
 563               	.LM14:
 564 005a 9081      		ld r25,Z
 190:requiredFiles/clksys_driver.c **** 	return clkEnabled;
 191:requiredFiles/clksys_driver.c **** }
 565               		.stabn	68,0,192,.LM15-.LFBB4
 566               	.LM15:
 567 005c 8923      		and r24,r25
 568               	/* epilogue start */
 569 005e 0895      		ret
 570               		.size	CLKSYS_Disable, .-CLKSYS_Disable
 571               	.Lscope4:
 572               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 573               		.stabd	78,0,0
 574               		.stabs	"CLKSYS_Prescalers_Config:F(0,15)",36,0,208,CLKSYS_Prescalers_Config
 575               		.stabs	"PSAfactor:P(5,19)",64,0,206,24
 576               		.stabs	"PSBCfactor:P(5,21)",64,0,207,22
 577               	.global	CLKSYS_Prescalers_Config
 578               		.type	CLKSYS_Prescalers_Config, @function
 579               	CLKSYS_Prescalers_Config:
 580               		.stabd	46,0,0
 192:requiredFiles/clksys_driver.c **** 
 193:requiredFiles/clksys_driver.c **** 
 194:requiredFiles/clksys_driver.c **** /*! \brief This function changes the prescaler configuration.
 195:requiredFiles/clksys_driver.c ****  *
 196:requiredFiles/clksys_driver.c ****  *  Change the configuration of the three system clock
 197:requiredFiles/clksys_driver.c ****  *  prescaler is one single operation. The user must make sure that
 198:requiredFiles/clksys_driver.c ****  *  the main CPU clock does not exceed recommended limits.
 199:requiredFiles/clksys_driver.c ****  *
 200:requiredFiles/clksys_driver.c ****  *  \param  PSAfactor   Prescaler A division factor, OFF or 2 to 512 in
 201:requiredFiles/clksys_driver.c ****  *                      powers of two.
 202:requiredFiles/clksys_driver.c ****  *  \param  PSBCfactor  Prescaler B and C division factor, in the combination
 203:requiredFiles/clksys_driver.c ****  *                      of (1,1), (1,2), (4,1) or (2,2).
 204:requiredFiles/clksys_driver.c ****  */
 205:requiredFiles/clksys_driver.c **** void CLKSYS_Prescalers_Config( CLK_PSADIV_t PSAfactor,
 206:requiredFiles/clksys_driver.c ****                                CLK_PSBCDIV_t PSBCfactor )
 207:requiredFiles/clksys_driver.c **** {
 581               		.stabn	68,0,208,.LM16-.LFBB5
 582               	.LM16:
 583               	.LFBB5:
 584 0060 0F93      		push r16
 585 0062 DF93      		push r29
 586 0064 CF93      		push r28
 587 0066 0F92      		push __tmp_reg__
 588 0068 CDB7      		in r28,__SP_L__
 589 006a DEB7      		in r29,__SP_H__
 590               	/* prologue: function */
GAS LISTING /tmp/cccYkJc5.s 			page 15


 591               	/* frame size = 1 */
 592               	.LBB136:
 593               	.LBB137:
 108:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 594               		.stabn	68,0,108,.LM17-.LFBB5
 595               	.LM17:
 596 006c 9FB7      		in r25,__SREG__
 597 006e 9983      		std Y+1,r25
 598               	/* #APP */
 599               	 ;  108 "requiredFiles/clksys_driver.c" 1
 600 0070 F894      		cli
 601               	 ;  0 "" 2
 111:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 602               		.stabn	68,0,111,.LM18-.LFBB5
 603               	.LM18:
 604               	/* #NOAPP */
 605 0072 1BBE      		out 59-0,__zero_reg__
 113:requiredFiles/clksys_driver.c **** 	asm volatile(
 606               		.stabn	68,0,113,.LM19-.LFBB5
 607               	.LM19:
 608 0074 682B      		or r22,r24
 609 0076 81E4      		ldi r24,lo8(65)
 610 0078 90E0      		ldi r25,hi8(65)
 611               	/* #APP */
 612               	 ;  113 "requiredFiles/clksys_driver.c" 1
 613 007a FC01      		movw r30,  r24
 614 007c 08ED      		ldi  r16,  216
 615 007e 04BF      		out   52, r16
 616 0080 6083      		st     Z,  r22
 617               		
 618               	 ;  0 "" 2
 123:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 619               		.stabn	68,0,123,.LM20-.LFBB5
 620               	.LM20:
 621               	/* #NOAPP */
 622 0082 8981      		ldd r24,Y+1
 623 0084 8FBF      		out __SREG__,r24
 624               	/* epilogue start */
 625               	.LBE137:
 626               	.LBE136:
 208:requiredFiles/clksys_driver.c **** 	uint8_t PSconfig = (uint8_t) PSAfactor | PSBCfactor;
 209:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.PSCTRL, PSconfig );
 210:requiredFiles/clksys_driver.c **** }
 627               		.stabn	68,0,211,.LM21-.LFBB5
 628               	.LM21:
 629 0086 0F90      		pop __tmp_reg__
 630 0088 CF91      		pop r28
 631 008a DF91      		pop r29
 632 008c 0F91      		pop r16
 633 008e 0895      		ret
 634               		.size	CLKSYS_Prescalers_Config, .-CLKSYS_Prescalers_Config
 635               		.stabs	"saved_sreg:(5,2)",128,0,108,1
 636               		.stabn	192,0,0,.LBB137-.LFBB5
 637               		.stabn	224,0,0,.LBE137-.LFBB5
 638               	.Lscope5:
 639               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 640               		.stabd	78,0,0
GAS LISTING /tmp/cccYkJc5.s 			page 16


 641               		.stabs	"CLKSYS_Main_ClockSource_Select:F(4,2)",36,0,226,CLKSYS_Main_ClockSource_Select
 642               		.stabs	"clockSource:P(5,17)",64,0,225,24
 643               	.global	CLKSYS_Main_ClockSource_Select
 644               		.type	CLKSYS_Main_ClockSource_Select, @function
 645               	CLKSYS_Main_ClockSource_Select:
 646               		.stabd	46,0,0
 211:requiredFiles/clksys_driver.c **** 
 212:requiredFiles/clksys_driver.c **** 
 213:requiredFiles/clksys_driver.c **** /*! \brief This function selects the main system clock source.
 214:requiredFiles/clksys_driver.c ****  *
 215:requiredFiles/clksys_driver.c ****  *  Hardware will disregard any attempts to select a clock source that is not
 216:requiredFiles/clksys_driver.c ****  *  enabled or not stable. If the change fails, make sure the source is ready
 217:requiredFiles/clksys_driver.c ****  *  and running and try again.
 218:requiredFiles/clksys_driver.c ****  *
 219:requiredFiles/clksys_driver.c ****  *  \param  clockSource  Clock source to use as input for the system clock
 220:requiredFiles/clksys_driver.c ****  *                       prescaler block.
 221:requiredFiles/clksys_driver.c ****  *
 222:requiredFiles/clksys_driver.c ****  *  \return  Non-zero if change was successful.
 223:requiredFiles/clksys_driver.c ****  */
 224:requiredFiles/clksys_driver.c **** uint8_t CLKSYS_Main_ClockSource_Select( CLK_SCLKSEL_t clockSource )
 225:requiredFiles/clksys_driver.c **** {
 647               		.stabn	68,0,226,.LM22-.LFBB6
 648               	.LM22:
 649               	.LFBB6:
 650 0090 0F93      		push r16
 651 0092 DF93      		push r29
 652 0094 CF93      		push r28
 653 0096 0F92      		push __tmp_reg__
 654 0098 CDB7      		in r28,__SP_L__
 655 009a DEB7      		in r29,__SP_H__
 656               	/* prologue: function */
 657               	/* frame size = 1 */
 226:requiredFiles/clksys_driver.c **** 	uint8_t clkCtrl = ( CLK.CTRL & ~CLK_SCLKSEL_gm ) | clockSource;
 658               		.stabn	68,0,227,.LM23-.LFBB6
 659               	.LM23:
 660 009c 2091 4000 		lds r18,64
 661               	.LBB138:
 662               	.LBB139:
 108:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 663               		.stabn	68,0,108,.LM24-.LFBB6
 664               	.LM24:
 665 00a0 9FB7      		in r25,__SREG__
 666 00a2 9983      		std Y+1,r25
 667               	/* #APP */
 668               	 ;  108 "requiredFiles/clksys_driver.c" 1
 669 00a4 F894      		cli
 670               	 ;  0 "" 2
 111:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 671               		.stabn	68,0,111,.LM25-.LFBB6
 672               	.LM25:
 673               	/* #NOAPP */
 674 00a6 1BBE      		out 59-0,__zero_reg__
 113:requiredFiles/clksys_driver.c **** 	asm volatile(
 675               		.stabn	68,0,113,.LM26-.LFBB6
 676               	.LM26:
 677 00a8 A0E4      		ldi r26,lo8(64)
 678 00aa B0E0      		ldi r27,hi8(64)
GAS LISTING /tmp/cccYkJc5.s 			page 17


 679 00ac 287F      		andi r18,lo8(-8)
 680 00ae 282B      		or r18,r24
 681               	/* #APP */
 682               	 ;  113 "requiredFiles/clksys_driver.c" 1
 683 00b0 FD01      		movw r30,  r26
 684 00b2 08ED      		ldi  r16,  216
 685 00b4 04BF      		out   52, r16
 686 00b6 2083      		st     Z,  r18
 687               		
 688               	 ;  0 "" 2
 123:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 689               		.stabn	68,0,123,.LM27-.LFBB6
 690               	.LM27:
 691               	/* #NOAPP */
 692 00b8 9981      		ldd r25,Y+1
 693 00ba 9FBF      		out __SREG__,r25
 694               	.LBE139:
 695               	.LBE138:
 227:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.CTRL, clkCtrl );
 228:requiredFiles/clksys_driver.c **** 	clkCtrl = ( CLK.CTRL & clockSource );
 696               		.stabn	68,0,229,.LM28-.LFBB6
 697               	.LM28:
 698 00bc 9C91      		ld r25,X
 229:requiredFiles/clksys_driver.c **** 	return clkCtrl;
 230:requiredFiles/clksys_driver.c **** }
 699               		.stabn	68,0,231,.LM29-.LFBB6
 700               	.LM29:
 701 00be 8923      		and r24,r25
 702               	/* epilogue start */
 703 00c0 0F90      		pop __tmp_reg__
 704 00c2 CF91      		pop r28
 705 00c4 DF91      		pop r29
 706 00c6 0F91      		pop r16
 707 00c8 0895      		ret
 708               		.size	CLKSYS_Main_ClockSource_Select, .-CLKSYS_Main_ClockSource_Select
 709               		.stabs	"saved_sreg:(5,2)",128,0,108,1
 710               		.stabn	192,0,0,.LBB139-.LFBB6
 711               		.stabn	224,0,0,.LBE139-.LFBB6
 712               	.Lscope6:
 713               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 714               		.stabd	78,0,0
 715               		.stabs	"CLKSYS_RTC_ClockSource_Enable:F(0,15)",36,0,242,CLKSYS_RTC_ClockSource_Enable
 716               		.stabs	"clockSource:P(5,23)",64,0,241,24
 717               	.global	CLKSYS_RTC_ClockSource_Enable
 718               		.type	CLKSYS_RTC_ClockSource_Enable, @function
 719               	CLKSYS_RTC_ClockSource_Enable:
 720               		.stabd	46,0,0
 231:requiredFiles/clksys_driver.c **** 
 232:requiredFiles/clksys_driver.c **** 
 233:requiredFiles/clksys_driver.c **** /*! \brief This function selects a Real-Time Counter clock source.
 234:requiredFiles/clksys_driver.c ****  *
 235:requiredFiles/clksys_driver.c ****  *  Selects the clock source for use by the Real-Time Counter (RTC)
 236:requiredFiles/clksys_driver.c ****  *  and enables clock signal routing to the RTC module.
 237:requiredFiles/clksys_driver.c ****  *
 238:requiredFiles/clksys_driver.c ****  *  \param  clockSource  Clock source to use for the RTC.
 239:requiredFiles/clksys_driver.c ****  */
 240:requiredFiles/clksys_driver.c **** void CLKSYS_RTC_ClockSource_Enable( CLK_RTCSRC_t clockSource )
GAS LISTING /tmp/cccYkJc5.s 			page 18


 241:requiredFiles/clksys_driver.c **** {
 721               		.stabn	68,0,242,.LM30-.LFBB7
 722               	.LM30:
 723               	.LFBB7:
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 242:requiredFiles/clksys_driver.c **** 	CLK.RTCCTRL = ( CLK.RTCCTRL & ~CLK_RTCSRC_gm ) |
 726               		.stabn	68,0,243,.LM31-.LFBB7
 727               	.LM31:
 728 00ca E0E4      		ldi r30,lo8(64)
 729 00cc F0E0      		ldi r31,hi8(64)
 730 00ce 9381      		ldd r25,Z+3
 731 00d0 917F      		andi r25,lo8(-15)
 732 00d2 9160      		ori r25,lo8(1)
 733 00d4 982B      		or r25,r24
 734 00d6 9383      		std Z+3,r25
 735               	/* epilogue start */
 243:requiredFiles/clksys_driver.c **** 	              clockSource |
 244:requiredFiles/clksys_driver.c **** 	              CLK_RTCEN_bm;
 245:requiredFiles/clksys_driver.c **** }
 736               		.stabn	68,0,246,.LM32-.LFBB7
 737               	.LM32:
 738 00d8 0895      		ret
 739               		.size	CLKSYS_RTC_ClockSource_Enable, .-CLKSYS_RTC_ClockSource_Enable
 740               	.Lscope7:
 741               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 742               		.stabd	78,0,0
 743               		.stabs	"CLKSYS_AutoCalibration_Enable:F(0,15)",36,0,261,CLKSYS_AutoCalibration_Enable
 744               		.stabs	"clkSource:P(4,2)",64,0,260,18
 745               		.stabs	"extReference:P(0,17)",64,0,260,22
 746               	.global	CLKSYS_AutoCalibration_Enable
 747               		.type	CLKSYS_AutoCalibration_Enable, @function
 748               	CLKSYS_AutoCalibration_Enable:
 749               		.stabd	46,0,0
 246:requiredFiles/clksys_driver.c **** 
 247:requiredFiles/clksys_driver.c **** 
 248:requiredFiles/clksys_driver.c **** /*! \brief This function enables automatic calibration of the selected internal
 249:requiredFiles/clksys_driver.c ****  *         oscillator.
 250:requiredFiles/clksys_driver.c ****  *
 251:requiredFiles/clksys_driver.c ****  *  Either the internal 32kHz RC oscillator or an external 32kHz
 252:requiredFiles/clksys_driver.c ****  *  crystal can be used as a calibration reference. The user must make sure
 253:requiredFiles/clksys_driver.c ****  *  that the selected reference is ready and running.
 254:requiredFiles/clksys_driver.c ****  *
 255:requiredFiles/clksys_driver.c ****  *  \param  clkSource    Clock source to calibrate, either OSC_RC2MCREF_bm or
 256:requiredFiles/clksys_driver.c ****  *                       OSC_RC32MCREF_bm.
 257:requiredFiles/clksys_driver.c ****  *  \param  extReference True if external crystal should be used as reference.
 258:requiredFiles/clksys_driver.c ****  */
 259:requiredFiles/clksys_driver.c **** void CLKSYS_AutoCalibration_Enable( uint8_t clkSource, bool extReference )
 260:requiredFiles/clksys_driver.c **** {
 750               		.stabn	68,0,261,.LM33-.LFBB8
 751               	.LM33:
 752               	.LFBB8:
 753               	/* prologue: function */
 754               	/* frame size = 0 */
 755 00da 282F      		mov r18,r24
 261:requiredFiles/clksys_driver.c **** 	OSC.DFLLCTRL = ( OSC.DFLLCTRL & ~clkSource ) |
 756               		.stabn	68,0,262,.LM34-.LFBB8
GAS LISTING /tmp/cccYkJc5.s 			page 19


 757               	.LM34:
 758 00dc 3091 5600 		lds r19,86
 759 00e0 6623      		tst r22
 760 00e2 01F0      		breq .L18
 761 00e4 982F      		mov r25,r24
 762 00e6 00C0      		rjmp .L19
 763               	.L18:
 764 00e8 90E0      		ldi r25,lo8(0)
 765               	.L19:
 766 00ea 822F      		mov r24,r18
 767 00ec 8095      		com r24
 768 00ee 8323      		and r24,r19
 769 00f0 982B      		or r25,r24
 770 00f2 E0E5      		ldi r30,lo8(80)
 771 00f4 F0E0      		ldi r31,hi8(80)
 772 00f6 9683      		std Z+6,r25
 262:requiredFiles/clksys_driver.c **** 	               ( extReference ? clkSource : 0 );
 263:requiredFiles/clksys_driver.c **** 	if (clkSource == OSC_RC2MCREF_bm) {
 773               		.stabn	68,0,264,.LM35-.LFBB8
 774               	.LM35:
 775 00f8 2130      		cpi r18,lo8(1)
 776 00fa 01F4      		brne .L20
 264:requiredFiles/clksys_driver.c **** 		DFLLRC2M.CTRL |= DFLL_ENABLE_bm;
 777               		.stabn	68,0,265,.LM36-.LFBB8
 778               	.LM36:
 779 00fc 8091 6800 		lds r24,104
 780 0100 8160      		ori r24,lo8(1)
 781 0102 8093 6800 		sts 104,r24
 782 0106 0895      		ret
 783               	.L20:
 265:requiredFiles/clksys_driver.c **** 	} else if (clkSource == OSC_RC32MCREF_bm) {
 784               		.stabn	68,0,266,.LM37-.LFBB8
 785               	.LM37:
 786 0108 2230      		cpi r18,lo8(2)
 787 010a 01F4      		brne .L22
 266:requiredFiles/clksys_driver.c **** 		DFLLRC32M.CTRL |= DFLL_ENABLE_bm;
 788               		.stabn	68,0,267,.LM38-.LFBB8
 789               	.LM38:
 790 010c 8091 6000 		lds r24,96
 791 0110 8160      		ori r24,lo8(1)
 792 0112 8093 6000 		sts 96,r24
 793               	.L22:
 794 0116 0895      		ret
 795               		.size	CLKSYS_AutoCalibration_Enable, .-CLKSYS_AutoCalibration_Enable
 796               	.Lscope8:
 797               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 798               		.stabd	78,0,0
 799               		.stabs	"CLKSYS_XOSC_FailureDetection_Enable:F(0,15)",36,0,281,CLKSYS_XOSC_FailureDetection_Enable
 800               	.global	CLKSYS_XOSC_FailureDetection_Enable
 801               		.type	CLKSYS_XOSC_FailureDetection_Enable, @function
 802               	CLKSYS_XOSC_FailureDetection_Enable:
 803               		.stabd	46,0,0
 267:requiredFiles/clksys_driver.c **** 	}
 268:requiredFiles/clksys_driver.c **** }
 269:requiredFiles/clksys_driver.c **** 
 270:requiredFiles/clksys_driver.c **** 
 271:requiredFiles/clksys_driver.c **** /*! \brief This function enables the External Oscillator Failure Detection
GAS LISTING /tmp/cccYkJc5.s 			page 20


 272:requiredFiles/clksys_driver.c ****  *         (XOSCFD) feature.
 273:requiredFiles/clksys_driver.c ****  *
 274:requiredFiles/clksys_driver.c ****  *  The feature will stay enabled until next reset. Note that the
 275:requiredFiles/clksys_driver.c ****  *  XOSCFD _will_ issue the XOSCF Non-maskable Interrupt (NMI) regardless of
 276:requiredFiles/clksys_driver.c ****  *  any interrupt priorities and settings. Therefore, make sure that a handler
 277:requiredFiles/clksys_driver.c ****  *  is implemented for the XOSCF NMI when you enable it.
 278:requiredFiles/clksys_driver.c ****  */
 279:requiredFiles/clksys_driver.c **** void CLKSYS_XOSC_FailureDetection_Enable( void )
 280:requiredFiles/clksys_driver.c **** {
 804               		.stabn	68,0,281,.LM39-.LFBB9
 805               	.LM39:
 806               	.LFBB9:
 807 0118 0F93      		push r16
 808 011a DF93      		push r29
 809 011c CF93      		push r28
 810 011e 0F92      		push __tmp_reg__
 811 0120 CDB7      		in r28,__SP_L__
 812 0122 DEB7      		in r29,__SP_H__
 813               	/* prologue: function */
 814               	/* frame size = 1 */
 815               	.LBB140:
 816               	.LBB141:
 108:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 817               		.stabn	68,0,108,.LM40-.LFBB9
 818               	.LM40:
 819 0124 8FB7      		in r24,__SREG__
 820 0126 8983      		std Y+1,r24
 821               	/* #APP */
 822               	 ;  108 "requiredFiles/clksys_driver.c" 1
 823 0128 F894      		cli
 824               	 ;  0 "" 2
 111:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 825               		.stabn	68,0,111,.LM41-.LFBB9
 826               	.LM41:
 827               	/* #NOAPP */
 828 012a 1BBE      		out 59-0,__zero_reg__
 113:requiredFiles/clksys_driver.c **** 	asm volatile(
 829               		.stabn	68,0,113,.LM42-.LFBB9
 830               	.LM42:
 831 012c 23E0      		ldi r18,lo8(3)
 832 012e 83E5      		ldi r24,lo8(83)
 833 0130 90E0      		ldi r25,hi8(83)
 834               	/* #APP */
 835               	 ;  113 "requiredFiles/clksys_driver.c" 1
 836 0132 FC01      		movw r30,  r24
 837 0134 08ED      		ldi  r16,  216
 838 0136 04BF      		out   52, r16
 839 0138 2083      		st     Z,  r18
 840               		
 841               	 ;  0 "" 2
 123:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 842               		.stabn	68,0,123,.LM43-.LFBB9
 843               	.LM43:
 844               	/* #NOAPP */
 845 013a 8981      		ldd r24,Y+1
 846 013c 8FBF      		out __SREG__,r24
 847               	/* epilogue start */
GAS LISTING /tmp/cccYkJc5.s 			page 21


 848               	.LBE141:
 849               	.LBE140:
 281:requiredFiles/clksys_driver.c **** 	CCPWrite( &OSC.XOSCFAIL, ( OSC_XOSCFDIF_bm | OSC_XOSCFDEN_bm ) );
 282:requiredFiles/clksys_driver.c **** }
 850               		.stabn	68,0,283,.LM44-.LFBB9
 851               	.LM44:
 852 013e 0F90      		pop __tmp_reg__
 853 0140 CF91      		pop r28
 854 0142 DF91      		pop r29
 855 0144 0F91      		pop r16
 856 0146 0895      		ret
 857               		.size	CLKSYS_XOSC_FailureDetection_Enable, .-CLKSYS_XOSC_FailureDetection_Enable
 858               	.Lscope9:
 859               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 860               		.stabd	78,0,0
 861               		.stabs	"CLKSYS_Configuration_Lock:F(0,15)",36,0,293,CLKSYS_Configuration_Lock
 862               	.global	CLKSYS_Configuration_Lock
 863               		.type	CLKSYS_Configuration_Lock, @function
 864               	CLKSYS_Configuration_Lock:
 865               		.stabd	46,0,0
 283:requiredFiles/clksys_driver.c **** 
 284:requiredFiles/clksys_driver.c **** 
 285:requiredFiles/clksys_driver.c **** /*! \brief This function lock the entire clock system configuration.
 286:requiredFiles/clksys_driver.c ****  *
 287:requiredFiles/clksys_driver.c ****  *  This will lock the configuration until the next reset, or until the
 288:requiredFiles/clksys_driver.c ****  *  External Oscillator Failure Detections (XOSCFD) feature detects a failure
 289:requiredFiles/clksys_driver.c ****  *  and switches to internal 2MHz RC oscillator.
 290:requiredFiles/clksys_driver.c ****  */
 291:requiredFiles/clksys_driver.c **** void CLKSYS_Configuration_Lock( void )
 292:requiredFiles/clksys_driver.c **** {
 866               		.stabn	68,0,293,.LM45-.LFBB10
 867               	.LM45:
 868               	.LFBB10:
 869 0148 0F93      		push r16
 870 014a DF93      		push r29
 871 014c CF93      		push r28
 872 014e 0F92      		push __tmp_reg__
 873 0150 CDB7      		in r28,__SP_L__
 874 0152 DEB7      		in r29,__SP_H__
 875               	/* prologue: function */
 876               	/* frame size = 1 */
 877               	.LBB142:
 878               	.LBB143:
 108:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 879               		.stabn	68,0,108,.LM46-.LFBB10
 880               	.LM46:
 881 0154 8FB7      		in r24,__SREG__
 882 0156 8983      		std Y+1,r24
 883               	/* #APP */
 884               	 ;  108 "requiredFiles/clksys_driver.c" 1
 885 0158 F894      		cli
 886               	 ;  0 "" 2
 111:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 887               		.stabn	68,0,111,.LM47-.LFBB10
 888               	.LM47:
 889               	/* #NOAPP */
 890 015a 1BBE      		out 59-0,__zero_reg__
GAS LISTING /tmp/cccYkJc5.s 			page 22


 113:requiredFiles/clksys_driver.c **** 	asm volatile(
 891               		.stabn	68,0,113,.LM48-.LFBB10
 892               	.LM48:
 893 015c 21E0      		ldi r18,lo8(1)
 894 015e 82E4      		ldi r24,lo8(66)
 895 0160 90E0      		ldi r25,hi8(66)
 896               	/* #APP */
 897               	 ;  113 "requiredFiles/clksys_driver.c" 1
 898 0162 FC01      		movw r30,  r24
 899 0164 08ED      		ldi  r16,  216
 900 0166 04BF      		out   52, r16
 901 0168 2083      		st     Z,  r18
 902               		
 903               	 ;  0 "" 2
 123:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 904               		.stabn	68,0,123,.LM49-.LFBB10
 905               	.LM49:
 906               	/* #NOAPP */
 907 016a 8981      		ldd r24,Y+1
 908 016c 8FBF      		out __SREG__,r24
 909               	/* epilogue start */
 910               	.LBE143:
 911               	.LBE142:
 293:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.LOCK, CLK_LOCK_bm );
 294:requiredFiles/clksys_driver.c **** }
 912               		.stabn	68,0,295,.LM50-.LFBB10
 913               	.LM50:
 914 016e 0F90      		pop __tmp_reg__
 915 0170 CF91      		pop r28
 916 0172 DF91      		pop r29
 917 0174 0F91      		pop r16
 918 0176 0895      		ret
 919               		.size	CLKSYS_Configuration_Lock, .-CLKSYS_Configuration_Lock
 920               	.Lscope10:
 921               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 922               		.stabd	78,0,0
 923               		.stabs	"delay_ms:F(0,15)",36,0,30,delay_ms
 924               		.stabs	"ms:P(0,1)",64,0,29,24
 925               	.global	delay_ms
 926               		.type	delay_ms, @function
 927               	delay_ms:
 928               		.stabd	46,0,0
 929               		.stabs	"main.c",132,0,0,.Ltext2
 930               	.Ltext2:
   0:main.c        **** /* Blinky: an atxmega16a4 example
   1:main.c        ****  * Daniel J. Gonzalez July 2012
   2:main.c        ****  * dgonz@mit.edu
   3:main.c        ****  * yameb.blogspot.com
   4:main.c        ****  * 
   5:main.c        ****  * MCU: atxmega16a4u
   6:main.c        ****  * Board: TinyArmTroller REV2
   7:main.c        ****  * Setup: Button between C3 and GND, Resistor and LED between E0 and GND
   8:main.c        ****  * 
   9:main.c        ****  * The purpose of this program has been to learn how to do the following:
  10:main.c        ****  * -Set the CPU Speed to 32MHz
  11:main.c        ****  * -Implement robust delay
  12:main.c        ****  * -Implement outputs and set outputs to HIGH and LOW
GAS LISTING /tmp/cccYkJc5.s 			page 23


  13:main.c        ****  * -Implement inputs and detect of an input pin is driven LOW
  14:main.c        ****  * 
  15:main.c        ****  * Specifically, this program blinks an LED on port E0 in a certain pattern 
  16:main.c        ****  * if a button between port C3 and GND is pressed. 
  17:main.c        ****  */
  18:main.c        **** 
  19:main.c        **** #define F_CPU 	32000000UL //32 MHz Internal Oscillator
  20:main.c        **** 
  21:main.c        **** #include <avr/io.h>
  22:main.c        **** #include <util/delay.h>
  23:main.c        **** #include "requiredFiles/avr_compiler.h"
  24:main.c        **** #include "requiredFiles/clksys_driver.h"
  25:main.c        **** #include "requiredFiles/clksys_driver.c"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** void delay_ms(int ms) //My own Delay function, because the built-in _delay_ms() can delay for only 
  29:main.c        **** { 
 931               		.stabn	68,0,30,.LM51-.LFBB11
 932               	.LM51:
 933               	.LFBB11:
 934               	/* prologue: function */
 935               	/* frame size = 0 */
 936               	.LBB144:
 937               	.LBB145:
 938               	.LBB146:
 939               	.LBB147:
 940               	.LBB148:
 941               	.LBB149:
 942               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 943               	.Ltext3:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
GAS LISTING /tmp/cccYkJc5.s 			page 24


  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \file */
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \code
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \endcode
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #endif
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     register.
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     can be achieved.
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
GAS LISTING /tmp/cccYkJc5.s 			page 25


  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	);
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** }
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     counter register pair.
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****  */
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 944               		.stabn	68,0,105,.LM52-.LFBB11
 945               	.LM52:
 946 0178 20E4      		ldi r18,lo8(8000)
 947 017a 3FE1      		ldi r19,hi8(8000)
 948 017c 00C0      		rjmp .L28
 949               	.L29:
 950 017e F901      		movw r30,r18
 951               	/* #APP */
 952               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 953 0180 3197      		1: sbiw r30,1
 954 0182 01F4      		brne 1b
 955               	 ;  0 "" 2
 956               	/* #NOAPP */
 957               	.L28:
 958               	.LBE149:
 959               	.LBE148:
 960               	.LBE147:
 961               	.LBE146:
 962               	.LBE145:
 963               	.LBE144:
 964               		.stabs	"main.c",132,0,0,.Ltext4
 965               	.Ltext4:
  30:main.c        ****     while (ms--) 
 966               		.stabn	68,0,31,.LM53-.LFBB11
 967               	.LM53:
 968 0184 0197      		sbiw r24,1
 969 0186 4FEF      		ldi r20,hi8(-1)
 970 0188 8F3F      		cpi r24,lo8(-1)
 971 018a 9407      		cpc r25,r20
 972 018c 01F4      		brne .L29
 973               	/* epilogue start */
  31:main.c        ****         _delay_us(1000);  
  32:main.c        **** } 
 974               		.stabn	68,0,33,.LM54-.LFBB11
 975               	.LM54:
 976 018e 0895      		ret
GAS LISTING /tmp/cccYkJc5.s 			page 26


 977               		.size	delay_ms, .-delay_ms
 978               	.Lscope11:
 979               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 980               		.stabd	78,0,0
 981               		.stabs	"Config32MHzClock:F(0,15)",36,0,36,Config32MHzClock
 982               	.global	Config32MHzClock
 983               		.type	Config32MHzClock, @function
 984               	Config32MHzClock:
 985               		.stabd	46,0,0
  33:main.c        **** 
  34:main.c        **** void Config32MHzClock(void) //Set Clock Speed to 32MHz (XMega Only)
  35:main.c        **** { 
 986               		.stabn	68,0,36,.LM55-.LFBB12
 987               	.LM55:
 988               	.LFBB12:
 989               	/* prologue: function */
 990               	/* frame size = 0 */
  36:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 991               		.stabn	68,0,37,.LM56-.LFBB12
 992               	.LM56:
 993 0190 88ED      		ldi r24,lo8(-40)
 994 0192 84BF      		out 52-0,r24
  37:main.c        **** // initialize clock source to be 32MHz internal oscillator (no PLL) 
  38:main.c        **** OSC.CTRL = OSC_RC32MEN_bm; // enable internal 32MHz oscillator 
 995               		.stabn	68,0,39,.LM57-.LFBB12
 996               	.LM57:
 997 0194 82E0      		ldi r24,lo8(2)
 998 0196 8093 5000 		sts 80,r24
 999               	.L32:
  39:main.c        **** while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator ready 
 1000               		.stabn	68,0,40,.LM58-.LFBB12
 1001               	.LM58:
 1002 019a 8091 5100 		lds r24,81
 1003 019e 81FF      		sbrs r24,1
 1004 01a0 00C0      		rjmp .L32
  40:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 1005               		.stabn	68,0,41,.LM59-.LFBB12
 1006               	.LM59:
 1007 01a2 88ED      		ldi r24,lo8(-40)
 1008 01a4 84BF      		out 52-0,r24
  41:main.c        **** CLK.CTRL = 0x01; //select sysclock 32MHz osc 
 1009               		.stabn	68,0,42,.LM60-.LFBB12
 1010               	.LM60:
 1011 01a6 81E0      		ldi r24,lo8(1)
 1012 01a8 8093 4000 		sts 64,r24
 1013               	/* epilogue start */
  42:main.c        **** }
 1014               		.stabn	68,0,43,.LM61-.LFBB12
 1015               	.LM61:
 1016 01ac 0895      		ret
 1017               		.size	Config32MHzClock, .-Config32MHzClock
 1018               	.Lscope12:
 1019               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 1020               		.stabd	78,0,0
 1021               		.stabs	"blink:F(0,15)",36,0,45,blink
 1022               		.stabs	"myVal:P(0,1)",64,0,45,20
 1023               	.global	blink
GAS LISTING /tmp/cccYkJc5.s 			page 27


 1024               		.type	blink, @function
 1025               	blink:
 1026               		.stabd	46,0,0
  43:main.c        **** 
  44:main.c        **** void blink(int myVal){
 1027               		.stabn	68,0,45,.LM62-.LFBB13
 1028               	.LM62:
 1029               	.LFBB13:
 1030               	/* prologue: function */
 1031               	/* frame size = 0 */
 1032 01ae AC01      		movw r20,r24
  45:main.c        **** 		PORTE.OUTSET = _BV(0);
 1033               		.stabn	68,0,46,.LM63-.LFBB13
 1034               	.LM63:
 1035 01b0 81E0      		ldi r24,lo8(1)
 1036 01b2 E0E8      		ldi r30,lo8(1664)
 1037 01b4 F6E0      		ldi r31,hi8(1664)
 1038 01b6 8583      		std Z+5,r24
 1039 01b8 9A01      		movw r18,r20
 1040               	.LBB150:
 1041               	.LBB151:
 1042               	.LBB152:
 1043               	.LBB153:
 1044               	.LBB154:
 1045               	.LBB155:
 1046               	.LBB156:
 1047               	.LBB157:
 1048               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext5
 1049               	.Ltext5:
 1050               		.stabn	68,0,105,.LM64-.LFBB13
 1051               	.LM64:
 1052 01ba 80E4      		ldi r24,lo8(8000)
 1053 01bc 9FE1      		ldi r25,hi8(8000)
 1054 01be 00C0      		rjmp .L36
 1055               	.L37:
 1056 01c0 FC01      		movw r30,r24
 1057               	/* #APP */
 1058               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1059 01c2 3197      		1: sbiw r30,1
 1060 01c4 01F4      		brne 1b
 1061               	 ;  0 "" 2
 1062               	/* #NOAPP */
 1063               	.L36:
 1064               	.LBE157:
 1065               	.LBE156:
 1066               	.LBE155:
 1067               	.LBE154:
 1068               	.LBE153:
 1069               	.LBE152:
 1070               		.stabs	"main.c",132,0,0,.Ltext6
 1071               	.Ltext6:
  31:main.c        ****     while (ms--) 
 1072               		.stabn	68,0,31,.LM65-.LFBB13
 1073               	.LM65:
 1074 01c6 2150      		subi r18,lo8(-(-1))
 1075 01c8 3040      		sbci r19,hi8(-(-1))
 1076 01ca 6FEF      		ldi r22,hi8(-1)
GAS LISTING /tmp/cccYkJc5.s 			page 28


 1077 01cc 2F3F      		cpi r18,lo8(-1)
 1078 01ce 3607      		cpc r19,r22
 1079 01d0 01F4      		brne .L37
 1080               	.LBE151:
 1081               	.LBE150:
  46:main.c        ****         delay_ms(myVal);
  47:main.c        ****         PORTE.OUTCLR = _BV(0);
 1082               		.stabn	68,0,48,.LM66-.LFBB13
 1083               	.LM66:
 1084 01d2 81E0      		ldi r24,lo8(1)
 1085 01d4 E0E8      		ldi r30,lo8(1664)
 1086 01d6 F6E0      		ldi r31,hi8(1664)
 1087 01d8 8683      		std Z+6,r24
 1088               	.LBB158:
 1089               	.LBB159:
 1090               	.LBB160:
 1091               	.LBB161:
 1092               	.LBB162:
 1093               	.LBB163:
 1094               	.LBB164:
 1095               	.LBB165:
 1096               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext7
 1097               	.Ltext7:
 1098               		.stabn	68,0,105,.LM67-.LFBB13
 1099               	.LM67:
 1100 01da 80E4      		ldi r24,lo8(8000)
 1101 01dc 9FE1      		ldi r25,hi8(8000)
 1102 01de 00C0      		rjmp .L38
 1103               	.L39:
 1104 01e0 FC01      		movw r30,r24
 1105               	/* #APP */
 1106               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1107 01e2 3197      		1: sbiw r30,1
 1108 01e4 01F4      		brne 1b
 1109               	 ;  0 "" 2
 1110               	/* #NOAPP */
 1111               	.L38:
 1112               	.LBE165:
 1113               	.LBE164:
 1114               	.LBE163:
 1115               	.LBE162:
 1116               	.LBE161:
 1117               	.LBE160:
 1118               		.stabs	"main.c",132,0,0,.Ltext8
 1119               	.Ltext8:
  31:main.c        ****     while (ms--) 
 1120               		.stabn	68,0,31,.LM68-.LFBB13
 1121               	.LM68:
 1122 01e6 4150      		subi r20,lo8(-(-1))
 1123 01e8 5040      		sbci r21,hi8(-(-1))
 1124 01ea 2FEF      		ldi r18,hi8(-1)
 1125 01ec 4F3F      		cpi r20,lo8(-1)
 1126 01ee 5207      		cpc r21,r18
 1127 01f0 01F4      		brne .L39
 1128               	/* epilogue start */
 1129               	.LBE159:
 1130               	.LBE158:
GAS LISTING /tmp/cccYkJc5.s 			page 29


  48:main.c        ****         delay_ms(myVal);
  49:main.c        **** }
 1131               		.stabn	68,0,50,.LM69-.LFBB13
 1132               	.LM69:
 1133 01f2 0895      		ret
 1134               		.size	blink, .-blink
 1135               	.Lscope13:
 1136               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 1137               		.stabd	78,0,0
 1138               		.stabs	"blinkQuick:F(0,15)",36,0,52,blinkQuick
 1139               	.global	blinkQuick
 1140               		.type	blinkQuick, @function
 1141               	blinkQuick:
 1142               		.stabd	46,0,0
  50:main.c        **** 
  51:main.c        **** void blinkQuick(void){
 1143               		.stabn	68,0,52,.LM70-.LFBB14
 1144               	.LM70:
 1145               	.LFBB14:
 1146               	/* prologue: function */
 1147               	/* frame size = 0 */
 1148               	.LBB166:
 1149               	.LBB167:
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 1150               		.stabn	68,0,46,.LM71-.LFBB14
 1151               	.LM71:
 1152 01f4 81E0      		ldi r24,lo8(1)
 1153 01f6 E0E8      		ldi r30,lo8(1664)
 1154 01f8 F6E0      		ldi r31,hi8(1664)
 1155 01fa 8583      		std Z+5,r24
 1156 01fc 24EF      		ldi r18,lo8(500)
 1157 01fe 31E0      		ldi r19,hi8(500)
 1158               	.LBB168:
 1159               	.LBB169:
 1160               	.LBB170:
 1161               	.LBB171:
 1162               	.LBB172:
 1163               	.LBB173:
 1164               	.LBB174:
 1165               	.LBB175:
 1166               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext9
 1167               	.Ltext9:
 1168               		.stabn	68,0,105,.LM72-.LFBB14
 1169               	.LM72:
 1170 0200 40E4      		ldi r20,lo8(8000)
 1171 0202 5FE1      		ldi r21,hi8(8000)
 1172 0204 00C0      		rjmp .L42
 1173               	.L43:
 1174 0206 CA01      		movw r24,r20
 1175               	/* #APP */
 1176               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1177 0208 0197      		1: sbiw r24,1
 1178 020a 01F4      		brne 1b
 1179               	 ;  0 "" 2
 1180               	/* #NOAPP */
 1181               	.L42:
 1182               	.LBE175:
GAS LISTING /tmp/cccYkJc5.s 			page 30


 1183               	.LBE174:
 1184               	.LBE173:
 1185               	.LBE172:
 1186               	.LBE171:
 1187               	.LBE170:
 1188               		.stabs	"main.c",132,0,0,.Ltext10
 1189               	.Ltext10:
  31:main.c        ****     while (ms--) 
 1190               		.stabn	68,0,31,.LM73-.LFBB14
 1191               	.LM73:
 1192 020c 2150      		subi r18,lo8(-(-1))
 1193 020e 3040      		sbci r19,hi8(-(-1))
 1194 0210 8FEF      		ldi r24,hi8(-1)
 1195 0212 2F3F      		cpi r18,lo8(-1)
 1196 0214 3807      		cpc r19,r24
 1197 0216 01F4      		brne .L43
 1198               	.LBE169:
 1199               	.LBE168:
  48:main.c        ****         PORTE.OUTCLR = _BV(0);
 1200               		.stabn	68,0,48,.LM74-.LFBB14
 1201               	.LM74:
 1202 0218 81E0      		ldi r24,lo8(1)
 1203 021a E0E8      		ldi r30,lo8(1664)
 1204 021c F6E0      		ldi r31,hi8(1664)
 1205 021e 8683      		std Z+6,r24
 1206 0220 24EF      		ldi r18,lo8(500)
 1207 0222 31E0      		ldi r19,hi8(500)
 1208               	.LBB176:
 1209               	.LBB177:
 1210               	.LBB178:
 1211               	.LBB179:
 1212               	.LBB180:
 1213               	.LBB181:
 1214               	.LBB182:
 1215               	.LBB183:
 1216               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext11
 1217               	.Ltext11:
 1218               		.stabn	68,0,105,.LM75-.LFBB14
 1219               	.LM75:
 1220 0224 40E4      		ldi r20,lo8(8000)
 1221 0226 5FE1      		ldi r21,hi8(8000)
 1222 0228 00C0      		rjmp .L44
 1223               	.L45:
 1224 022a CA01      		movw r24,r20
 1225               	/* #APP */
 1226               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1227 022c 0197      		1: sbiw r24,1
 1228 022e 01F4      		brne 1b
 1229               	 ;  0 "" 2
 1230               	/* #NOAPP */
 1231               	.L44:
 1232               	.LBE183:
 1233               	.LBE182:
 1234               	.LBE181:
 1235               	.LBE180:
 1236               	.LBE179:
 1237               	.LBE178:
GAS LISTING /tmp/cccYkJc5.s 			page 31


 1238               		.stabs	"main.c",132,0,0,.Ltext12
 1239               	.Ltext12:
  31:main.c        ****     while (ms--) 
 1240               		.stabn	68,0,31,.LM76-.LFBB14
 1241               	.LM76:
 1242 0230 2150      		subi r18,lo8(-(-1))
 1243 0232 3040      		sbci r19,hi8(-(-1))
 1244 0234 8FEF      		ldi r24,hi8(-1)
 1245 0236 2F3F      		cpi r18,lo8(-1)
 1246 0238 3807      		cpc r19,r24
 1247 023a 01F4      		brne .L45
 1248               	/* epilogue start */
 1249               	.LBE177:
 1250               	.LBE176:
 1251               	.LBE167:
 1252               	.LBE166:
  52:main.c        **** 	blink(500);
  53:main.c        **** }
 1253               		.stabn	68,0,54,.LM77-.LFBB14
 1254               	.LM77:
 1255 023c 0895      		ret
 1256               		.size	blinkQuick, .-blinkQuick
 1257               	.Lscope14:
 1258               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 1259               		.stabd	78,0,0
 1260               		.stabs	"blinkTen:F(0,15)",36,0,56,blinkTen
 1261               	.global	blinkTen
 1262               		.type	blinkTen, @function
 1263               	blinkTen:
 1264               		.stabd	46,0,0
  54:main.c        **** 
  55:main.c        **** void blinkTen(void){
 1265               		.stabn	68,0,56,.LM78-.LFBB15
 1266               	.LM78:
 1267               	.LFBB15:
 1268               	/* prologue: function */
 1269               	/* frame size = 0 */
 1270               		.stabn	68,0,56,.LM79-.LFBB15
 1271               	.LM79:
 1272 023e 20E0      		ldi r18,lo8(0)
 1273 0240 30E0      		ldi r19,hi8(0)
 1274               	.LBB184:
 1275               	.LBB185:
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 1276               		.stabn	68,0,46,.LM80-.LFBB15
 1277               	.LM80:
 1278 0242 A0E8      		ldi r26,lo8(1664)
 1279 0244 B6E0      		ldi r27,hi8(1664)
 1280 0246 61E0      		ldi r22,lo8(1)
 1281               	.LBB186:
 1282               	.LBB187:
 1283               	.LBB188:
 1284               	.LBB189:
 1285               	.LBB190:
 1286               	.LBB191:
 1287               	.LBB192:
 1288               	.LBB193:
GAS LISTING /tmp/cccYkJc5.s 			page 32


 1289               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext13
 1290               	.Ltext13:
 1291               		.stabn	68,0,105,.LM81-.LFBB15
 1292               	.LM81:
 1293 0248 40E4      		ldi r20,lo8(8000)
 1294 024a 5FE1      		ldi r21,hi8(8000)
 1295               	.L52:
 1296               	.LBE193:
 1297               	.LBE192:
 1298               	.LBE191:
 1299               	.LBE190:
 1300               	.LBE189:
 1301               	.LBE188:
 1302               	.LBE187:
 1303               	.LBE186:
 1304               		.stabs	"main.c",132,0,0,.Ltext14
 1305               	.Ltext14:
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 1306               		.stabn	68,0,46,.LM82-.LFBB15
 1307               	.LM82:
 1308 024c 1596      		adiw r26,5
 1309 024e 6C93      		st X,r22
 1310 0250 1597      		sbiw r26,5
 1311 0252 82E3      		ldi r24,lo8(50)
 1312 0254 90E0      		ldi r25,hi8(50)
 1313 0256 00C0      		rjmp .L48
 1314               	.L49:
 1315               	.LBB201:
 1316               	.LBB200:
 1317               	.LBB199:
 1318               	.LBB198:
 1319               	.LBB197:
 1320               	.LBB196:
 1321               	.LBB195:
 1322               	.LBB194:
 1323               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext15
 1324               	.Ltext15:
 1325               		.stabn	68,0,105,.LM83-.LFBB15
 1326               	.LM83:
 1327 0258 FA01      		movw r30,r20
 1328               	/* #APP */
 1329               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1330 025a 3197      		1: sbiw r30,1
 1331 025c 01F4      		brne 1b
 1332               	 ;  0 "" 2
 1333               	/* #NOAPP */
 1334               	.L48:
 1335               	.LBE194:
 1336               	.LBE195:
 1337               	.LBE196:
 1338               	.LBE197:
 1339               	.LBE198:
 1340               	.LBE199:
 1341               		.stabs	"main.c",132,0,0,.Ltext16
 1342               	.Ltext16:
  31:main.c        ****     while (ms--) 
 1343               		.stabn	68,0,31,.LM84-.LFBB15
GAS LISTING /tmp/cccYkJc5.s 			page 33


 1344               	.LM84:
 1345 025e 0197      		sbiw r24,1
 1346 0260 7FEF      		ldi r23,hi8(-1)
 1347 0262 8F3F      		cpi r24,lo8(-1)
 1348 0264 9707      		cpc r25,r23
 1349 0266 01F4      		brne .L49
 1350               	.LBE200:
 1351               	.LBE201:
  48:main.c        ****         PORTE.OUTCLR = _BV(0);
 1352               		.stabn	68,0,48,.LM85-.LFBB15
 1353               	.LM85:
 1354 0268 1696      		adiw r26,6
 1355 026a 6C93      		st X,r22
 1356 026c 1697      		sbiw r26,6
 1357 026e 82E3      		ldi r24,lo8(50)
 1358 0270 90E0      		ldi r25,hi8(50)
 1359 0272 00C0      		rjmp .L50
 1360               	.L51:
 1361               	.LBB202:
 1362               	.LBB203:
 1363               	.LBB204:
 1364               	.LBB205:
 1365               	.LBB206:
 1366               	.LBB207:
 1367               	.LBB208:
 1368               	.LBB209:
 1369               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext17
 1370               	.Ltext17:
 1371               		.stabn	68,0,105,.LM86-.LFBB15
 1372               	.LM86:
 1373 0274 FA01      		movw r30,r20
 1374               	/* #APP */
 1375               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1376 0276 3197      		1: sbiw r30,1
 1377 0278 01F4      		brne 1b
 1378               	 ;  0 "" 2
 1379               	/* #NOAPP */
 1380               	.L50:
 1381               	.LBE209:
 1382               	.LBE208:
 1383               	.LBE207:
 1384               	.LBE206:
 1385               	.LBE205:
 1386               	.LBE204:
 1387               		.stabs	"main.c",132,0,0,.Ltext18
 1388               	.Ltext18:
  31:main.c        ****     while (ms--) 
 1389               		.stabn	68,0,31,.LM87-.LFBB15
 1390               	.LM87:
 1391 027a 0197      		sbiw r24,1
 1392 027c 7FEF      		ldi r23,hi8(-1)
 1393 027e 8F3F      		cpi r24,lo8(-1)
 1394 0280 9707      		cpc r25,r23
 1395 0282 01F4      		brne .L51
 1396               	.LBE203:
 1397               	.LBE202:
 1398               	.LBE185:
GAS LISTING /tmp/cccYkJc5.s 			page 34


 1399               	.LBE184:
  56:main.c        **** 	int i;
  57:main.c        **** 	for (i=0;i<10;i++){
 1400               		.stabn	68,0,58,.LM88-.LFBB15
 1401               	.LM88:
 1402 0284 2F5F      		subi r18,lo8(-(1))
 1403 0286 3F4F      		sbci r19,hi8(-(1))
 1404 0288 2A30      		cpi r18,10
 1405 028a 3105      		cpc r19,__zero_reg__
 1406 028c 01F4      		brne .L52
 1407               	/* epilogue start */
  58:main.c        **** 		blink(50);
  59:main.c        **** 	}
  60:main.c        **** }
 1408               		.stabn	68,0,61,.LM89-.LFBB15
 1409               	.LM89:
 1410 028e 0895      		ret
 1411               		.size	blinkTen, .-blinkTen
 1412               		.stabs	"i:r(0,1)",64,0,57,18
 1413               		.stabn	192,0,0,.LFBB15-.LFBB15
 1414               		.stabs	"myVal:r(0,1)",64,0,59,24
 1415               		.stabn	192,0,0,.LBB184-.LFBB15
 1416               		.stabn	224,0,0,.LBE184-.LFBB15
 1417               		.stabn	224,0,0,.Lscope15-.LFBB15
 1418               	.Lscope15:
 1419               		.stabs	"",36,0,0,.Lscope15-.LFBB15
 1420               		.stabd	78,0,0
 1421               		.stabs	"mainLoop:F(0,15)",36,0,63,mainLoop
 1422               	.global	mainLoop
 1423               		.type	mainLoop, @function
 1424               	mainLoop:
 1425               		.stabd	46,0,0
  61:main.c        **** 
  62:main.c        **** void mainLoop(void){
 1426               		.stabn	68,0,63,.LM90-.LFBB16
 1427               	.LM90:
 1428               	.LFBB16:
 1429 0290 FF92      		push r15
 1430 0292 0F93      		push r16
 1431 0294 1F93      		push r17
 1432 0296 CF93      		push r28
 1433 0298 DF93      		push r29
 1434               	/* prologue: function */
 1435               	/* frame size = 0 */
 1436               	.LBB210:
 1437               	.LBB211:
 1438               	.LBB212:
 1439               	.LBB213:
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 1440               		.stabn	68,0,46,.LM91-.LFBB16
 1441               	.LM91:
 1442 029a 00E8      		ldi r16,lo8(1664)
 1443 029c 16E0      		ldi r17,hi8(1664)
 1444 029e FF24      		clr r15
 1445 02a0 F394      		inc r15
 1446               	.LBB214:
 1447               	.LBB215:
GAS LISTING /tmp/cccYkJc5.s 			page 35


 1448               	.LBB216:
 1449               	.LBB217:
 1450               	.LBB218:
 1451               	.LBB219:
 1452               	.LBB220:
 1453               	.LBB221:
 1454               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext19
 1455               	.Ltext19:
 1456               		.stabn	68,0,105,.LM92-.LFBB16
 1457               	.LM92:
 1458 02a2 C0E4      		ldi r28,lo8(8000)
 1459 02a4 DFE1      		ldi r29,hi8(8000)
 1460               	.L64:
 1461               	.LBE221:
 1462               	.LBE220:
 1463               	.LBE219:
 1464               	.LBE218:
 1465               	.LBE217:
 1466               	.LBE216:
 1467               	.LBE215:
 1468               	.LBE214:
 1469               	.LBE213:
 1470               	.LBE212:
 1471               	.LBE211:
 1472               	.LBE210:
 1473               		.stabs	"main.c",132,0,0,.Ltext20
 1474               	.Ltext20:
  63:main.c        **** 		while(1){
  64:main.c        **** 			if(!(PORTC.IN & _BV(3))){ //if pin C3 goes LOW
 1475               		.stabn	68,0,65,.LM93-.LFBB16
 1476               	.LM93:
 1477 02a6 8091 4806 		lds r24,1608
 1478 02aa 83FD      		sbrc r24,3
 1479 02ac 00C0      		rjmp .L64
 1480               	.LBB241:
 1481               	.LBB240:
 1482               	.LBB239:
 1483               	.LBB238:
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 1484               		.stabn	68,0,46,.LM94-.LFBB16
 1485               	.LM94:
 1486 02ae F801      		movw r30,r16
 1487 02b0 F582      		std Z+5,r15
 1488 02b2 84EF      		ldi r24,lo8(500)
 1489 02b4 91E0      		ldi r25,hi8(500)
 1490 02b6 00C0      		rjmp .L57
 1491               	.L58:
 1492               	.LBB229:
 1493               	.LBB228:
 1494               	.LBB227:
 1495               	.LBB226:
 1496               	.LBB225:
 1497               	.LBB224:
 1498               	.LBB223:
 1499               	.LBB222:
 1500               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext21
 1501               	.Ltext21:
GAS LISTING /tmp/cccYkJc5.s 			page 36


 1502               		.stabn	68,0,105,.LM95-.LFBB16
 1503               	.LM95:
 1504 02b8 FE01      		movw r30,r28
 1505               	/* #APP */
 1506               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1507 02ba 3197      		1: sbiw r30,1
 1508 02bc 01F4      		brne 1b
 1509               	 ;  0 "" 2
 1510               	/* #NOAPP */
 1511               	.L57:
 1512               	.LBE222:
 1513               	.LBE223:
 1514               	.LBE224:
 1515               	.LBE225:
 1516               	.LBE226:
 1517               	.LBE227:
 1518               		.stabs	"main.c",132,0,0,.Ltext22
 1519               	.Ltext22:
  31:main.c        ****     while (ms--) 
 1520               		.stabn	68,0,31,.LM96-.LFBB16
 1521               	.LM96:
 1522 02be 0197      		sbiw r24,1
 1523 02c0 FFEF      		ldi r31,hi8(-1)
 1524 02c2 8F3F      		cpi r24,lo8(-1)
 1525 02c4 9F07      		cpc r25,r31
 1526 02c6 01F4      		brne .L58
 1527               	.LBE228:
 1528               	.LBE229:
  48:main.c        ****         PORTE.OUTCLR = _BV(0);
 1529               		.stabn	68,0,48,.LM97-.LFBB16
 1530               	.LM97:
 1531 02c8 F801      		movw r30,r16
 1532 02ca F682      		std Z+6,r15
 1533 02cc 84EF      		ldi r24,lo8(500)
 1534 02ce 91E0      		ldi r25,hi8(500)
 1535 02d0 00C0      		rjmp .L59
 1536               	.L60:
 1537               	.LBB230:
 1538               	.LBB231:
 1539               	.LBB232:
 1540               	.LBB233:
 1541               	.LBB234:
 1542               	.LBB235:
 1543               	.LBB236:
 1544               	.LBB237:
 1545               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext23
 1546               	.Ltext23:
 1547               		.stabn	68,0,105,.LM98-.LFBB16
 1548               	.LM98:
 1549 02d2 FE01      		movw r30,r28
 1550               	/* #APP */
 1551               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1552 02d4 3197      		1: sbiw r30,1
 1553 02d6 01F4      		brne 1b
 1554               	 ;  0 "" 2
 1555               	/* #NOAPP */
 1556               	.L59:
GAS LISTING /tmp/cccYkJc5.s 			page 37


 1557               	.LBE237:
 1558               	.LBE236:
 1559               	.LBE235:
 1560               	.LBE234:
 1561               	.LBE233:
 1562               	.LBE232:
 1563               		.stabs	"main.c",132,0,0,.Ltext24
 1564               	.Ltext24:
  31:main.c        ****     while (ms--) 
 1565               		.stabn	68,0,31,.LM99-.LFBB16
 1566               	.LM99:
 1567 02d8 0197      		sbiw r24,1
 1568 02da FFEF      		ldi r31,hi8(-1)
 1569 02dc 8F3F      		cpi r24,lo8(-1)
 1570 02de 9F07      		cpc r25,r31
 1571 02e0 01F4      		brne .L60
 1572               	.LBE231:
 1573               	.LBE230:
 1574               	.LBE238:
 1575               	.LBE239:
 1576               	.LBE240:
 1577               	.LBE241:
  65:main.c        **** 				blinkQuick();
  66:main.c        **** 				blinkTen();
 1578               		.stabn	68,0,67,.LM100-.LFBB16
 1579               	.LM100:
 1580 02e2 0E94 0000 		call blinkTen
 1581 02e6 00C0      		rjmp .L64
 1582               		.size	mainLoop, .-mainLoop
 1583               	.Lscope16:
 1584               		.stabs	"",36,0,0,.Lscope16-.LFBB16
 1585               		.stabd	78,0,0
 1586               		.stabs	"init:F(0,15)",36,0,76,init
 1587               	.global	init
 1588               		.type	init, @function
 1589               	init:
 1590               		.stabd	46,0,0
  67:main.c        **** 			}
  68:main.c        **** 		}
  69:main.c        **** }
  70:main.c        **** 
  71:main.c        **** /* See Atmel doc8050.pdf : AVR1313: Using the XMEGA IO Pins and External Interrupts
  72:main.c        ****  * 
  73:main.c        ****  * 
  74:main.c        ****  */
  75:main.c        **** void init(void){
 1591               		.stabn	68,0,76,.LM101-.LFBB17
 1592               	.LM101:
 1593               	.LFBB17:
 1594               	/* prologue: function */
 1595               	/* frame size = 0 */
 1596               	.LBB242:
 1597               	.LBB243:
  37:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 1598               		.stabn	68,0,37,.LM102-.LFBB17
 1599               	.LM102:
 1600 02e8 88ED      		ldi r24,lo8(-40)
GAS LISTING /tmp/cccYkJc5.s 			page 38


 1601 02ea 84BF      		out 52-0,r24
  39:main.c        **** OSC.CTRL = OSC_RC32MEN_bm; // enable internal 32MHz oscillator 
 1602               		.stabn	68,0,39,.LM103-.LFBB17
 1603               	.LM103:
 1604 02ec 82E0      		ldi r24,lo8(2)
 1605 02ee 8093 5000 		sts 80,r24
 1606               	.L66:
  40:main.c        **** while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator ready 
 1607               		.stabn	68,0,40,.LM104-.LFBB17
 1608               	.LM104:
 1609 02f2 8091 5100 		lds r24,81
 1610 02f6 81FF      		sbrs r24,1
 1611 02f8 00C0      		rjmp .L66
  41:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 1612               		.stabn	68,0,41,.LM105-.LFBB17
 1613               	.LM105:
 1614 02fa 88ED      		ldi r24,lo8(-40)
 1615 02fc 84BF      		out 52-0,r24
  42:main.c        **** CLK.CTRL = 0x01; //select sysclock 32MHz osc 
 1616               		.stabn	68,0,42,.LM106-.LFBB17
 1617               	.LM106:
 1618 02fe 81E0      		ldi r24,lo8(1)
 1619 0300 8093 4000 		sts 64,r24
 1620               	.LBE243:
 1621               	.LBE242:
  76:main.c        **** 		Config32MHzClock(); //Set Clock Speed to 32MHz
  77:main.c        **** 		PORTE.DIRSET |= _BV(0); //Set pin E0 as OUTPUT
 1622               		.stabn	68,0,78,.LM107-.LFBB17
 1623               	.LM107:
 1624 0304 8091 8106 		lds r24,1665
 1625 0308 8160      		ori r24,lo8(1)
 1626 030a E0E8      		ldi r30,lo8(1664)
 1627 030c F6E0      		ldi r31,hi8(1664)
 1628 030e 8183      		std Z+1,r24
  78:main.c        **** 		PORTC.PIN3CTRL = PORT_OPC_PULLUP_gc; //Set pin C3 as INPUT and as a pullup (Detect when pulled LO
 1629               		.stabn	68,0,79,.LM108-.LFBB17
 1630               	.LM108:
 1631 0310 88E1      		ldi r24,lo8(24)
 1632 0312 E0E4      		ldi r30,lo8(1600)
 1633 0314 F6E0      		ldi r31,hi8(1600)
 1634 0316 838B      		std Z+19,r24
 1635               	/* epilogue start */
  79:main.c        **** }
 1636               		.stabn	68,0,80,.LM109-.LFBB17
 1637               	.LM109:
 1638 0318 0895      		ret
 1639               		.size	init, .-init
 1640               	.Lscope17:
 1641               		.stabs	"",36,0,0,.Lscope17-.LFBB17
 1642               		.stabd	78,0,0
 1643               		.stabs	"main:F(0,1)",36,0,83,main
 1644               	.global	main
 1645               		.type	main, @function
 1646               	main:
 1647               		.stabd	46,0,0
  80:main.c        **** 
  81:main.c        **** int main (void)
GAS LISTING /tmp/cccYkJc5.s 			page 39


  82:main.c        **** {
 1648               		.stabn	68,0,83,.LM110-.LFBB18
 1649               	.LM110:
 1650               	.LFBB18:
 1651               	/* prologue: function */
 1652               	/* frame size = 0 */
 1653               	.LBB244:
 1654               	.LBB245:
 1655               	.LBB246:
 1656               	.LBB247:
  37:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 1657               		.stabn	68,0,37,.LM111-.LFBB18
 1658               	.LM111:
 1659 031a 88ED      		ldi r24,lo8(-40)
 1660 031c 84BF      		out 52-0,r24
  39:main.c        **** OSC.CTRL = OSC_RC32MEN_bm; // enable internal 32MHz oscillator 
 1661               		.stabn	68,0,39,.LM112-.LFBB18
 1662               	.LM112:
 1663 031e 82E0      		ldi r24,lo8(2)
 1664 0320 8093 5000 		sts 80,r24
 1665               	.L70:
  40:main.c        **** while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator ready 
 1666               		.stabn	68,0,40,.LM113-.LFBB18
 1667               	.LM113:
 1668 0324 8091 5100 		lds r24,81
 1669 0328 81FF      		sbrs r24,1
 1670 032a 00C0      		rjmp .L70
  41:main.c        **** CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 1671               		.stabn	68,0,41,.LM114-.LFBB18
 1672               	.LM114:
 1673 032c 88ED      		ldi r24,lo8(-40)
 1674 032e 84BF      		out 52-0,r24
  42:main.c        **** CLK.CTRL = 0x01; //select sysclock 32MHz osc 
 1675               		.stabn	68,0,42,.LM115-.LFBB18
 1676               	.LM115:
 1677 0330 81E0      		ldi r24,lo8(1)
 1678 0332 8093 4000 		sts 64,r24
 1679               	.LBE247:
 1680               	.LBE246:
  78:main.c        **** 		PORTE.DIRSET |= _BV(0); //Set pin E0 as OUTPUT
 1681               		.stabn	68,0,78,.LM116-.LFBB18
 1682               	.LM116:
 1683 0336 8091 8106 		lds r24,1665
 1684 033a 8160      		ori r24,lo8(1)
 1685 033c E0E8      		ldi r30,lo8(1664)
 1686 033e F6E0      		ldi r31,hi8(1664)
 1687 0340 8183      		std Z+1,r24
  79:main.c        **** 		PORTC.PIN3CTRL = PORT_OPC_PULLUP_gc; //Set pin C3 as INPUT and as a pullup (Detect when pulled LO
 1688               		.stabn	68,0,79,.LM117-.LFBB18
 1689               	.LM117:
 1690 0342 88E1      		ldi r24,lo8(24)
 1691 0344 E0E4      		ldi r30,lo8(1600)
 1692 0346 F6E0      		ldi r31,hi8(1600)
 1693 0348 838B      		std Z+19,r24
 1694 034a 28EE      		ldi r18,lo8(1000)
 1695 034c 33E0      		ldi r19,hi8(1000)
 1696               	.LBE245:
GAS LISTING /tmp/cccYkJc5.s 			page 40


 1697               	.LBE244:
 1698               	.LBB248:
 1699               	.LBB249:
 1700               	.LBB250:
 1701               	.LBB251:
 1702               	.LBB252:
 1703               	.LBB253:
 1704               	.LBB254:
 1705               	.LBB255:
 1706               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext25
 1707               	.Ltext25:
 1708               		.stabn	68,0,105,.LM118-.LFBB18
 1709               	.LM118:
 1710 034e 40E4      		ldi r20,lo8(8000)
 1711 0350 5FE1      		ldi r21,hi8(8000)
 1712 0352 00C0      		rjmp .L71
 1713               	.L72:
 1714 0354 CA01      		movw r24,r20
 1715               	/* #APP */
 1716               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 1717 0356 0197      		1: sbiw r24,1
 1718 0358 01F4      		brne 1b
 1719               	 ;  0 "" 2
 1720               	/* #NOAPP */
 1721               	.L71:
 1722               	.LBE255:
 1723               	.LBE254:
 1724               	.LBE253:
 1725               	.LBE252:
 1726               	.LBE251:
 1727               	.LBE250:
 1728               		.stabs	"main.c",132,0,0,.Ltext26
 1729               	.Ltext26:
  31:main.c        ****     while (ms--) 
 1730               		.stabn	68,0,31,.LM119-.LFBB18
 1731               	.LM119:
 1732 035a 2150      		subi r18,lo8(-(-1))
 1733 035c 3040      		sbci r19,hi8(-(-1))
 1734 035e 8FEF      		ldi r24,hi8(-1)
 1735 0360 2F3F      		cpi r18,lo8(-1)
 1736 0362 3807      		cpc r19,r24
 1737 0364 01F4      		brne .L72
 1738               	.LBE249:
 1739               	.LBE248:
  83:main.c        **** 	init();	
  84:main.c        **** 	delay_ms(1000);
  85:main.c        **** 	mainLoop();
 1740               		.stabn	68,0,86,.LM120-.LFBB18
 1741               	.LM120:
 1742 0366 0E94 0000 		call mainLoop
  86:main.c        **** 	return 0;
  87:main.c        **** }
 1743               		.stabn	68,0,88,.LM121-.LFBB18
 1744               	.LM121:
 1745 036a 80E0      		ldi r24,lo8(0)
 1746 036c 90E0      		ldi r25,hi8(0)
 1747               	/* epilogue start */
GAS LISTING /tmp/cccYkJc5.s 			page 41


 1748 036e 0895      		ret
 1749               		.size	main, .-main
 1750               		.stabs	"ms:r(0,1)",64,0,85,18
 1751               		.stabn	192,0,0,.LBB248-.LFBB18
 1752               		.stabn	224,0,0,.LBE248-.LFBB18
 1753               	.Lscope18:
 1754               		.stabs	"",36,0,0,.Lscope18-.LFBB18
 1755               		.stabd	78,0,0
 1756               		.stabs	"",100,0,0,.Letext0
 1757               	.Letext0:
GAS LISTING /tmp/cccYkJc5.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cccYkJc5.s:2      *ABS*:0000003f __SREG__
     /tmp/cccYkJc5.s:3      *ABS*:0000003e __SP_H__
     /tmp/cccYkJc5.s:4      *ABS*:0000003d __SP_L__
     /tmp/cccYkJc5.s:5      *ABS*:00000034 __CCP__
     /tmp/cccYkJc5.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cccYkJc5.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cccYkJc5.s:423    .text:00000000 CCPWrite
     /tmp/cccYkJc5.s:486    .text:0000002a CLKSYS_XOSC_Config
     /tmp/cccYkJc5.s:520    .text:00000040 CLKSYS_PLL_Config
     /tmp/cccYkJc5.s:546    .text:0000004c CLKSYS_Disable
     /tmp/cccYkJc5.s:579    .text:00000060 CLKSYS_Prescalers_Config
     /tmp/cccYkJc5.s:645    .text:00000090 CLKSYS_Main_ClockSource_Select
     /tmp/cccYkJc5.s:719    .text:000000ca CLKSYS_RTC_ClockSource_Enable
     /tmp/cccYkJc5.s:748    .text:000000da CLKSYS_AutoCalibration_Enable
     /tmp/cccYkJc5.s:802    .text:00000118 CLKSYS_XOSC_FailureDetection_Enable
     /tmp/cccYkJc5.s:864    .text:00000148 CLKSYS_Configuration_Lock
     /tmp/cccYkJc5.s:927    .text:00000178 delay_ms
     /tmp/cccYkJc5.s:984    .text:00000190 Config32MHzClock
     /tmp/cccYkJc5.s:1025   .text:000001ae blink
     /tmp/cccYkJc5.s:1141   .text:000001f4 blinkQuick
     /tmp/cccYkJc5.s:1263   .text:0000023e blinkTen
     /tmp/cccYkJc5.s:1424   .text:00000290 mainLoop
     /tmp/cccYkJc5.s:1589   .text:000002e8 init
     /tmp/cccYkJc5.s:1646   .text:0000031a main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
