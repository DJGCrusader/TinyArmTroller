GAS LISTING /tmp/ccl4KbeX.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/dgonz/projects/gitHome/TinyArmTroller/examples/blinky/",100,0,2,.Ltext0
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.7.0/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
GAS LISTING /tmp/ccl4KbeX.s 			page 2


  58               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/avr/iox32a4.h",130,0,0,0
  68               		.stabs	"register8_t:t(6,1)=(6,2)=B(5,2)",128,0,104,0
  69               		.stabs	"register16_t:t(6,3)=(6,4)=B(5,4)",128,0,105,0
  70               		.stabs	"register32_t:t(6,5)=(6,6)=B(5,6)",128,0,106,0
  71               		.stabs	"OCD_struct:T(6,7)=s2OCDR0:(6,1),0,8;OCDR1:(6,1),8,8;;",128,0,0,0
  72               		.stabs	"OCD_t:t(6,8)=(6,7)",128,0,158,0
  73               		.stabs	"CCP_enum:T(6,9)=@s8;eCCP_SPM_gc:157,CCP_IOREG_gc:216,;",128,0,0,0
  74               		.stabs	"CCP_t:t(6,10)=(6,9)",128,0,166,0
  75               		.stabs	"CLK_struct:T(6,11)=s4CTRL:(6,1),0,8;PSCTRL:(6,1),8,8;LOCK:(6,1),16,8;RTCCTRL:(6,1),24,8;;"
  76               		.stabs	"CLK_t:t(6,12)=(6,11)",128,0,182,0
  77               		.stabs	"PR_struct:T(6,13)=s7PRGEN:(6,1),0,8;PRPA:(6,1),8,8;PRPB:(6,1),16,8;PRPC:(6,1),24,8;PRPD:(6
  78               		.stabs	"PR_t:t(6,14)=(6,13)",128,0,200,0
  79               		.stabs	"CLK_SCLKSEL_enum:T(6,15)=@s8;eCLK_SCLKSEL_RC2M_gc:0,CLK_SCLKSEL_RC32M_gc:1,CLK_SCLKSEL_RC3
  80               		.stabs	"CLK_SCLKSEL_t:t(6,16)=(6,15)",128,0,210,0
  81               		.stabs	"CLK_PSADIV_enum:T(6,17)=@s8;eCLK_PSADIV_1_gc:0,CLK_PSADIV_2_gc:4,CLK_PSADIV_4_gc:12,CLK_PS
  82               		.stabs	"CLK_PSADIV_t:t(6,18)=(6,17)",128,0,225,0
  83               		.stabs	"CLK_PSBCDIV_enum:T(6,19)=@s8;eCLK_PSBCDIV_1_1_gc:0,CLK_PSBCDIV_1_2_gc:1,CLK_PSBCDIV_4_1_gc
  84               		.stabs	"CLK_PSBCDIV_t:t(6,20)=(6,19)",128,0,234,0
  85               		.stabs	"CLK_RTCSRC_enum:T(6,21)=@s8;eCLK_RTCSRC_ULP_gc:0,CLK_RTCSRC_TOSC_gc:2,CLK_RTCSRC_RCOSC_gc:
  86               		.stabs	"CLK_RTCSRC_t:t(6,22)=(6,21)",128,0,243,0
  87               		.stabs	"SLEEP_struct:T(6,23)=s1CTRL:(6,1),0,8;;",128,0,0,0
  88               		.stabs	"SLEEP_t:t(6,24)=(6,23)",128,0,256,0
  89               		.stabs	"SLEEP_SMODE_enum:T(6,25)=@s8;eSLEEP_SMODE_IDLE_gc:0,SLEEP_SMODE_PDOWN_gc:4,SLEEP_SMODE_PSA
  90               		.stabs	"SLEEP_SMODE_t:t(6,26)=(6,25)",128,0,266,0
  91               		.stabs	"OSC_struct:T(6,27)=s7CTRL:(6,1),0,8;STATUS:(6,1),8,8;XOSCCTRL:(6,1),16,8;XOSCFAIL:(6,1),24
  92               		.stabs	"OSC_t:t(6,28)=(6,27)",128,0,285,0
  93               		.stabs	"OSC_FRQRANGE_enum:T(6,29)=@s8;eOSC_FRQRANGE_04TO2_gc:0,OSC_FRQRANGE_2TO9_gc:64,OSC_FRQRANG
  94               		.stabs	"OSC_FRQRANGE_t:t(6,30)=(6,29)",128,0,294,0
  95               		.stabs	"OSC_XOSCSEL_enum:T(6,31)=@s8;eOSC_XOSCSEL_EXTCLK_gc:0,OSC_XOSCSEL_32KHz_gc:2,OSC_XOSCSEL_X
  96               		.stabs	"OSC_XOSCSEL_t:t(6,32)=(6,31)",128,0,304,0
  97               		.stabs	"OSC_PLLSRC_enum:T(6,33)=@s8;eOSC_PLLSRC_RC2M_gc:0,OSC_PLLSRC_RC32M_gc:128,OSC_PLLSRC_XOSC_
  98               		.stabs	"OSC_PLLSRC_t:t(6,34)=(6,33)",128,0,312,0
  99               		.stabs	"DFLL_struct:T(6,35)=s8CTRL:(6,1),0,8;reserved_0x01:(6,1),8,8;CALA:(6,1),16,8;CALB:(6,1),24
 100               		.stabs	"DFLL_t:t(6,36)=(6,35)",128,0,332,0
 101               		.stabs	"RST_struct:T(6,37)=s2STATUS:(6,1),0,8;CTRL:(6,1),8,8;;",128,0,0,0
 102               		.stabs	"RST_t:t(6,38)=(6,37)",128,0,346,0
 103               		.stabs	"WDT_struct:T(6,39)=s3CTRL:(6,1),0,8;WINCTRL:(6,1),8,8;STATUS:(6,1),16,8;;",128,0,0,0
 104               		.stabs	"WDT_t:t(6,40)=(6,39)",128,0,361,0
 105               		.stabs	"WDT_PER_enum:T(6,41)=@s8;eWDT_PER_8CLK_gc:0,WDT_PER_16CLK_gc:4,WDT_PER_32CLK_gc:8,WDT_PER_
 106               		.stabs	"WDT_PER_t:t(6,42)=(6,41)",128,0,377,0
 107               		.stabs	"WDT_WPER_enum:T(6,43)=@s8;eWDT_WPER_8CLK_gc:0,WDT_WPER_16CLK_gc:4,WDT_WPER_32CLK_gc:8,WDT_
 108               		.stabs	"WDT_WPER_t:t(6,44)=(6,43)",128,0,393,0
 109               		.stabs	"MCU_struct:T(6,45)=s12DEVID0:(6,1),0,8;DEVID1:(6,1),8,8;DEVID2:(6,1),16,8;REVID:(6,1),24,8
 110               		.stabs	"MCU_t:t(6,46)=(6,45)",128,0,417,0
 111               		.stabs	"PMIC_struct:T(6,47)=s3STATUS:(6,1),0,8;INTPRI:(6,1),8,8;CTRL:(6,1),16,8;;",128,0,0,0
 112               		.stabs	"PMIC_t:t(6,48)=(6,47)",128,0,432,0
 113               		.stabs	"DMA_CH_struct:T(6,49)=s16CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;ADDRCTRL:(6,1),16,8;TRIGSRC:(6,1)
 114               		.stabs	"DMA_CH_t:t(6,52)=(6,49)",128,0,459,0
GAS LISTING /tmp/ccl4KbeX.s 			page 3


 115               		.stabs	"DMA_struct:T(6,53)=s80CTRL:(6,1),0,8;reserved_0x01:(6,1),8,8;reserved_0x02:(6,1),16,8;INTF
 116               		.stabs	"DMA_t:t(6,56)=(6,53)",128,0,489,0
 117               		.stabs	"DMA_CH_BURSTLEN_enum:T(6,57)=@s8;eDMA_CH_BURSTLEN_1BYTE_gc:0,DMA_CH_BURSTLEN_2BYTE_gc:1,DM
 118               		.stabs	"DMA_CH_BURSTLEN_t:t(6,58)=(6,57)",128,0,498,0
 119               		.stabs	"DMA_CH_SRCRELOAD_enum:T(6,59)=@s8;eDMA_CH_SRCRELOAD_NONE_gc:0,DMA_CH_SRCRELOAD_BLOCK_gc:64
 120               		.stabs	"DMA_CH_SRCRELOAD_t:t(6,60)=(6,59)",128,0,507,0
 121               		.stabs	"DMA_CH_SRCDIR_enum:T(6,61)=@s8;eDMA_CH_SRCDIR_FIXED_gc:0,DMA_CH_SRCDIR_INC_gc:16,DMA_CH_SR
 122               		.stabs	"DMA_CH_SRCDIR_t:t(6,62)=(6,61)",128,0,515,0
 123               		.stabs	"DMA_CH_DESTRELOAD_enum:T(6,63)=@s8;eDMA_CH_DESTRELOAD_NONE_gc:0,DMA_CH_DESTRELOAD_BLOCK_gc
 124               		.stabs	"DMA_CH_DESTRELOAD_t:t(6,64)=(6,63)",128,0,524,0
 125               		.stabs	"DMA_CH_DESTDIR_enum:T(6,65)=@s8;eDMA_CH_DESTDIR_FIXED_gc:0,DMA_CH_DESTDIR_INC_gc:1,DMA_CH_
 126               		.stabs	"DMA_CH_DESTDIR_t:t(6,66)=(6,65)",128,0,532,0
 127               		.stabs	"DMA_CH_TRIGSRC_enum:T(6,67)=@s8;eDMA_CH_TRIGSRC_OFF_gc:0,DMA_CH_TRIGSRC_EVSYS_CH0_gc:1,DMA
 128               		.stabs	"DMA_CH_TRIGSRC_t:t(6,68)=(6,67)",128,0,615,0
 129               		.stabs	"DMA_DBUFMODE_enum:T(6,69)=@s8;eDMA_DBUFMODE_DISABLED_gc:0,DMA_DBUFMODE_CH01_gc:4,DMA_DBUFM
 130               		.stabs	"DMA_DBUFMODE_t:t(6,70)=(6,69)",128,0,624,0
 131               		.stabs	"DMA_PRIMODE_enum:T(6,71)=@s8;eDMA_PRIMODE_RR0123_gc:0,DMA_PRIMODE_CH0RR123_gc:1,DMA_PRIMOD
 132               		.stabs	"DMA_PRIMODE_t:t(6,72)=(6,71)",128,0,633,0
 133               		.stabs	"DMA_CH_ERRINTLVL_enum:T(6,73)=@s8;eDMA_CH_ERRINTLVL_OFF_gc:0,DMA_CH_ERRINTLVL_LO_gc:4,DMA_
 134               		.stabs	"DMA_CH_ERRINTLVL_t:t(6,74)=(6,73)",128,0,642,0
 135               		.stabs	"DMA_CH_TRNINTLVL_enum:T(6,75)=@s8;eDMA_CH_TRNINTLVL_OFF_gc:0,DMA_CH_TRNINTLVL_LO_gc:1,DMA_
 136               		.stabs	"DMA_CH_TRNINTLVL_t:t(6,76)=(6,75)",128,0,651,0
 137               		.stabs	"EVSYS_struct:T(6,77)=s18CH0MUX:(6,1),0,8;CH1MUX:(6,1),8,8;CH2MUX:(6,1),16,8;CH3MUX:(6,1),2
 138               		.stabs	"EVSYS_t:t(6,78)=(6,77)",128,0,681,0
 139               		.stabs	"EVSYS_QDIRM_enum:T(6,79)=@s8;eEVSYS_QDIRM_00_gc:0,EVSYS_QDIRM_01_gc:32,EVSYS_QDIRM_10_gc:6
 140               		.stabs	"EVSYS_QDIRM_t:t(6,80)=(6,79)",128,0,690,0
 141               		.stabs	"EVSYS_DIGFILT_enum:T(6,81)=@s8;eEVSYS_DIGFILT_1SAMPLE_gc:0,EVSYS_DIGFILT_2SAMPLES_gc:1,EVS
 142               		.stabs	"EVSYS_DIGFILT_t:t(6,82)=(6,81)",128,0,703,0
 143               		.stabs	"EVSYS_CHMUX_enum:T(6,83)=@s8;eEVSYS_CHMUX_OFF_gc:0,EVSYS_CHMUX_RTC_OVF_gc:8,EVSYS_CHMUX_RT
 144               		.stabs	"EVSYS_CHMUX_t:t(6,84)=(6,83)",128,0,829,0
 145               		.stabs	"NVM_struct:T(6,85)=s17ADDR0:(6,1),0,8;ADDR1:(6,1),8,8;ADDR2:(6,1),16,8;reserved_0x03:(6,1)
 146               		.stabs	"NVM_t:t(6,86)=(6,85)",128,0,858,0
 147               		.stabs	"NVM_LOCKBITS_struct:T(6,87)=s1LOCKBITS:(6,1),0,8;;",128,0,0,0
 148               		.stabs	"NVM_LOCKBITS_t:t(6,88)=(6,87)",128,0,870,0
 149               		.stabs	"NVM_FUSES_struct:T(6,89)=s6FUSEBYTE0:(6,1),0,8;FUSEBYTE1:(6,1),8,8;FUSEBYTE2:(6,1),16,8;re
 150               		.stabs	"NVM_FUSES_t:t(6,90)=(6,89)",128,0,887,0
 151               		.stabs	"NVM_PROD_SIGNATURES_struct:T(6,91)=s63RCOSC2M:(6,1),0,8;reserved_0x01:(6,1),8,8;RCOSC32K:(
 152               		.stabs	"NVM_PROD_SIGNATURES_t:t(6,92)=(6,91)",128,0,961,0
 153               		.stabs	"NVM_CMD_enum:T(6,93)=@s8;eNVM_CMD_NO_OPERATION_gc:0,NVM_CMD_READ_CALIB_ROW_gc:2,NVM_CMD_RE
 154               		.stabs	"NVM_CMD_t:t(6,94)=(6,93)",128,0,992,0
 155               		.stabs	"NVM_SPMLVL_enum:T(6,95)=@s8;eNVM_SPMLVL_OFF_gc:0,NVM_SPMLVL_LO_gc:4,NVM_SPMLVL_MED_gc:8,NV
 156               		.stabs	"NVM_SPMLVL_t:t(6,96)=(6,95)",128,0,1001,0
 157               		.stabs	"NVM_EELVL_enum:T(6,97)=@s8;eNVM_EELVL_OFF_gc:0,NVM_EELVL_LO_gc:1,NVM_EELVL_MED_gc:2,NVM_EE
 158               		.stabs	"NVM_EELVL_t:t(6,98)=(6,97)",128,0,1010,0
 159               		.stabs	"NVM_BLBB_enum:T(6,99)=@s8;eNVM_BLBB_NOLOCK_gc:192,NVM_BLBB_WLOCK_gc:128,NVM_BLBB_RLOCK_gc:
 160               		.stabs	"NVM_BLBB_t:t(6,100)=(6,99)",128,0,1019,0
 161               		.stabs	"NVM_BLBA_enum:T(6,101)=@s8;eNVM_BLBA_NOLOCK_gc:48,NVM_BLBA_WLOCK_gc:32,NVM_BLBA_RLOCK_gc:1
 162               		.stabs	"NVM_BLBA_t:t(6,102)=(6,101)",128,0,1028,0
 163               		.stabs	"NVM_BLBAT_enum:T(6,103)=@s8;eNVM_BLBAT_NOLOCK_gc:12,NVM_BLBAT_WLOCK_gc:8,NVM_BLBAT_RLOCK_g
 164               		.stabs	"NVM_BLBAT_t:t(6,104)=(6,103)",128,0,1037,0
 165               		.stabs	"NVM_LB_enum:T(6,105)=@s8;eNVM_LB_NOLOCK_gc:3,NVM_LB_WLOCK_gc:2,NVM_LB_RWLOCK_gc:0,;",128,0
 166               		.stabs	"NVM_LB_t:t(6,106)=(6,105)",128,0,1045,0
 167               		.stabs	"BOOTRST_enum:T(6,107)=@s8;eBOOTRST_BOOTLDR_gc:0,BOOTRST_APPLICATION_gc:64,;",128,0,0,0
 168               		.stabs	"BOOTRST_t:t(6,108)=(6,107)",128,0,1052,0
 169               		.stabs	"BOD_enum:T(6,109)=@s8;eBOD_INSAMPLEDMODE_gc:1,BOD_CONTINOUSLY_gc:2,BOD_DISABLED_gc:3,;",12
 170               		.stabs	"BOD_t:t(6,110)=(6,109)",128,0,1060,0
 171               		.stabs	"WD_enum:T(6,111)=@s8;eWD_8CLK_gc:0,WD_16CLK_gc:16,WD_32CLK_gc:32,WD_64CLK_gc:48,WD_128CLK_
GAS LISTING /tmp/ccl4KbeX.s 			page 4


 172               		.stabs	"WD_t:t(6,112)=(6,111)",128,0,1076,0
 173               		.stabs	"SUT_enum:T(6,113)=@s8;eSUT_0MS_gc:12,SUT_4MS_gc:4,SUT_64MS_gc:0,;",128,0,0,0
 174               		.stabs	"SUT_t:t(6,114)=(6,113)",128,0,1084,0
 175               		.stabs	"BODLVL_enum:T(6,115)=@s8;eBODLVL_1V6_gc:7,BODLVL_1V9_gc:6,BODLVL_2V1_gc:5,BODLVL_2V4_gc:4,
 176               		.stabs	"BODLVL_t:t(6,116)=(6,115)",128,0,1096,0
 177               		.stabs	"AC_struct:T(6,117)=s8AC0CTRL:(6,1),0,8;AC1CTRL:(6,1),8,8;AC0MUXCTRL:(6,1),16,8;AC1MUXCTRL:
 178               		.stabs	"AC_t:t(6,118)=(6,117)",128,0,1116,0
 179               		.stabs	"AC_INTMODE_enum:T(6,119)=@s8;eAC_INTMODE_BOTHEDGES_gc:0,AC_INTMODE_FALLING_gc:128,AC_INTMO
 180               		.stabs	"AC_INTMODE_t:t(6,120)=(6,119)",128,0,1124,0
 181               		.stabs	"AC_INTLVL_enum:T(6,121)=@s8;eAC_INTLVL_OFF_gc:0,AC_INTLVL_LO_gc:16,AC_INTLVL_MED_gc:32,AC_
 182               		.stabs	"AC_INTLVL_t:t(6,122)=(6,121)",128,0,1133,0
 183               		.stabs	"AC_HYSMODE_enum:T(6,123)=@s8;eAC_HYSMODE_NO_gc:0,AC_HYSMODE_SMALL_gc:2,AC_HYSMODE_LARGE_gc
 184               		.stabs	"AC_HYSMODE_t:t(6,124)=(6,123)",128,0,1141,0
 185               		.stabs	"AC_MUXPOS_enum:T(6,125)=@s8;eAC_MUXPOS_PIN0_gc:0,AC_MUXPOS_PIN1_gc:8,AC_MUXPOS_PIN2_gc:16,
 186               		.stabs	"AC_MUXPOS_t:t(6,126)=(6,125)",128,0,1154,0
 187               		.stabs	"AC_MUXNEG_enum:T(6,127)=@s8;eAC_MUXNEG_PIN0_gc:0,AC_MUXNEG_PIN1_gc:1,AC_MUXNEG_PIN3_gc:2,A
 188               		.stabs	"AC_MUXNEG_t:t(6,128)=(6,127)",128,0,1167,0
 189               		.stabs	"AC_WINTMODE_enum:T(6,129)=@s8;eAC_WINTMODE_ABOVE_gc:0,AC_WINTMODE_INSIDE_gc:4,AC_WINTMODE_
 190               		.stabs	"AC_WINTMODE_t:t(6,130)=(6,129)",128,0,1176,0
 191               		.stabs	"AC_WINTLVL_enum:T(6,131)=@s8;eAC_WINTLVL_OFF_gc:0,AC_WINTLVL_LO_gc:1,AC_WINTLVL_MED_gc:2,A
 192               		.stabs	"AC_WINTLVL_t:t(6,132)=(6,131)",128,0,1185,0
 193               		.stabs	"AC_WSTATE_enum:T(6,133)=@s8;eAC_WSTATE_ABOVE_gc:0,AC_WSTATE_INSIDE_gc:64,AC_WSTATE_BELOW_g
 194               		.stabs	"AC_WSTATE_t:t(6,134)=(6,133)",128,0,1193,0
 195               		.stabs	"ADC_CH_struct:T(6,135)=s8CTRL:(6,1),0,8;MUXCTRL:(6,1),8,8;INTCTRL:(6,1),16,8;INTFLAGS:(6,1
 196               		.stabs	"ADC_CH_t:t(6,138)=(6,135)",128,0,1212,0
 197               		.stabs	"ADC_struct:T(6,139)=s64CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;REFCTRL:(6,1),16,8;EVCTRL:(6,1),24,
 198               		.stabs	"ADC_t:t(6,152)=(6,139)",128,0,1253,0
 199               		.stabs	"ADC_CH_MUXPOS_enum:T(6,153)=@s8;eADC_CH_MUXPOS_PIN0_gc:0,ADC_CH_MUXPOS_PIN1_gc:8,ADC_CH_MU
 200               		.stabs	"ADC_CH_MUXPOS_t:t(6,154)=(6,153)",128,0,1266,0
 201               		.stabs	"ADC_CH_MUXINT_enum:T(6,155)=@s8;eADC_CH_MUXINT_TEMP_gc:0,ADC_CH_MUXINT_BANDGAP_gc:8,ADC_CH
 202               		.stabs	"ADC_CH_MUXINT_t:t(6,156)=(6,155)",128,0,1275,0
 203               		.stabs	"ADC_CH_MUXNEG_enum:T(6,157)=@s8;eADC_CH_MUXNEG_PIN0_gc:0,ADC_CH_MUXNEG_PIN1_gc:1,ADC_CH_MU
 204               		.stabs	"ADC_CH_MUXNEG_t:t(6,158)=(6,157)",128,0,1288,0
 205               		.stabs	"ADC_CH_INPUTMODE_enum:T(6,159)=@s8;eADC_CH_INPUTMODE_INTERNAL_gc:0,ADC_CH_INPUTMODE_SINGLE
 206               		.stabs	"ADC_CH_INPUTMODE_t:t(6,160)=(6,159)",128,0,1297,0
 207               		.stabs	"ADC_CH_GAIN_enum:T(6,161)=@s8;eADC_CH_GAIN_1X_gc:0,ADC_CH_GAIN_2X_gc:4,ADC_CH_GAIN_4X_gc:8
 208               		.stabs	"ADC_CH_GAIN_t:t(6,162)=(6,161)",128,0,1309,0
 209               		.stabs	"ADC_RESOLUTION_enum:T(6,163)=@s8;eADC_RESOLUTION_12BIT_gc:0,ADC_RESOLUTION_8BIT_gc:4,ADC_R
 210               		.stabs	"ADC_RESOLUTION_t:t(6,164)=(6,163)",128,0,1317,0
 211               		.stabs	"ADC_REFSEL_enum:T(6,165)=@s8;eADC_REFSEL_INT1V_gc:0,ADC_REFSEL_VCC_gc:16,ADC_REFSEL_AREFA_
 212               		.stabs	"ADC_REFSEL_t:t(6,166)=(6,165)",128,0,1326,0
 213               		.stabs	"ADC_SWEEP_enum:T(6,167)=@s8;eADC_SWEEP_0_gc:0,ADC_SWEEP_01_gc:64,ADC_SWEEP_012_gc:128,ADC_
 214               		.stabs	"ADC_SWEEP_t:t(6,168)=(6,167)",128,0,1335,0
 215               		.stabs	"ADC_EVSEL_enum:T(6,169)=@s8;eADC_EVSEL_0123_gc:0,ADC_EVSEL_1234_gc:8,ADC_EVSEL_2345_gc:16,
 216               		.stabs	"ADC_EVSEL_t:t(6,170)=(6,169)",128,0,1348,0
 217               		.stabs	"ADC_EVACT_enum:T(6,171)=@s8;eADC_EVACT_NONE_gc:0,ADC_EVACT_CH0_gc:1,ADC_EVACT_CH01_gc:2,AD
 218               		.stabs	"ADC_EVACT_t:t(6,172)=(6,171)",128,0,1360,0
 219               		.stabs	"ADC_CH_INTMODE_enum:T(6,173)=@s8;eADC_CH_INTMODE_COMPLETE_gc:0,ADC_CH_INTMODE_BELOW_gc:4,A
 220               		.stabs	"ADC_CH_INTMODE_t:t(6,174)=(6,173)",128,0,1368,0
 221               		.stabs	"ADC_CH_INTLVL_enum:T(6,175)=@s8;eADC_CH_INTLVL_OFF_gc:0,ADC_CH_INTLVL_LO_gc:1,ADC_CH_INTLV
 222               		.stabs	"ADC_CH_INTLVL_t:t(6,176)=(6,175)",128,0,1377,0
 223               		.stabs	"ADC_DMASEL_enum:T(6,177)=@s8;eADC_DMASEL_OFF_gc:0,ADC_DMASEL_CH01_gc:64,ADC_DMASEL_CH012_g
 224               		.stabs	"ADC_DMASEL_t:t(6,178)=(6,177)",128,0,1386,0
 225               		.stabs	"ADC_PRESCALER_enum:T(6,179)=@s8;eADC_PRESCALER_DIV4_gc:0,ADC_PRESCALER_DIV8_gc:1,ADC_PRESC
 226               		.stabs	"ADC_PRESCALER_t:t(6,180)=(6,179)",128,0,1399,0
 227               		.stabs	"DAC_struct:T(6,181)=s28CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;CTRLC:(6,1),16,8;EVCTRL:(6,1),24,8;
 228               		.stabs	"DAC_t:t(6,186)=(6,181)",128,0,1437,0
GAS LISTING /tmp/ccl4KbeX.s 			page 5


 229               		.stabs	"DAC_CHSEL_enum:T(6,187)=@s8;eDAC_CHSEL_SINGLE_gc:0,DAC_CHSEL_DUAL_gc:64,;",128,0,0,0
 230               		.stabs	"DAC_CHSEL_t:t(6,188)=(6,187)",128,0,1444,0
 231               		.stabs	"DAC_REFSEL_enum:T(6,189)=@s8;eDAC_REFSEL_INT1V_gc:0,DAC_REFSEL_AVCC_gc:8,DAC_REFSEL_AREFA_
 232               		.stabs	"DAC_REFSEL_t:t(6,190)=(6,189)",128,0,1453,0
 233               		.stabs	"DAC_EVSEL_enum:T(6,191)=@s8;eDAC_EVSEL_0_gc:0,DAC_EVSEL_1_gc:1,DAC_EVSEL_2_gc:2,DAC_EVSEL_
 234               		.stabs	"DAC_EVSEL_t:t(6,192)=(6,191)",128,0,1466,0
 235               		.stabs	"DAC_CONINTVAL_enum:T(6,193)=@s8;eDAC_CONINTVAL_1CLK_gc:0,DAC_CONINTVAL_2CLK_gc:16,DAC_CONI
 236               		.stabs	"DAC_CONINTVAL_t:t(6,194)=(6,193)",128,0,1479,0
 237               		.stabs	"DAC_REFRESH_enum:T(6,195)=@s8;eDAC_REFRESH_16CLK_gc:0,DAC_REFRESH_32CLK_gc:1,DAC_REFRESH_6
 238               		.stabs	"DAC_REFRESH_t:t(6,196)=(6,195)",128,0,1498,0
 239               		.stabs	"RTC_struct:T(6,197)=s14CTRL:(6,1),0,8;STATUS:(6,1),8,8;INTCTRL:(6,1),16,8;INTFLAGS:(6,1),2
 240               		.stabs	"RTC_t:t(6,204)=(6,197)",128,0,1521,0
 241               		.stabs	"RTC_PRESCALER_enum:T(6,205)=@s8;eRTC_PRESCALER_OFF_gc:0,RTC_PRESCALER_DIV1_gc:1,RTC_PRESCA
 242               		.stabs	"RTC_PRESCALER_t:t(6,206)=(6,205)",128,0,1534,0
 243               		.stabs	"RTC_COMPINTLVL_enum:T(6,207)=@s8;eRTC_COMPINTLVL_OFF_gc:0,RTC_COMPINTLVL_LO_gc:4,RTC_COMPI
 244               		.stabs	"RTC_COMPINTLVL_t:t(6,208)=(6,207)",128,0,1543,0
 245               		.stabs	"RTC_OVFINTLVL_enum:T(6,209)=@s8;eRTC_OVFINTLVL_OFF_gc:0,RTC_OVFINTLVL_LO_gc:1,RTC_OVFINTLV
 246               		.stabs	"RTC_OVFINTLVL_t:t(6,210)=(6,209)",128,0,1552,0
 247               		.stabs	"EBI_CS_struct:T(6,211)=s4CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;:(6,212)=u2BASEADDR:(6,3),0,16;:(
 248               		.stabs	"EBI_CS_t:t(6,214)=(6,211)",128,0,1567,0
 249               		.stabs	"EBI_struct:T(6,215)=s32CTRL:(6,1),0,8;SDRAMCTRLA:(6,1),8,8;reserved_0x02:(6,1),16,8;reserv
 250               		.stabs	"EBI_t:t(6,220)=(6,215)",128,0,1596,0
 251               		.stabs	"EBI_CS_ASIZE_enum:T(6,221)=@s8;eEBI_CS_ASIZE_256B_gc:0,EBI_CS_ASIZE_512B_gc:4,EBI_CS_ASIZE
 252               		.stabs	"EBI_CS_ASIZE_t:t(6,222)=(6,221)",128,0,1618,0
 253               		.stabs	"EBI_CS_SRWS_enum:T(6,223)=@s8;eEBI_CS_SRWS_0CLK_gc:0,EBI_CS_SRWS_1CLK_gc:1,EBI_CS_SRWS_2CL
 254               		.stabs	"EBI_CS_SRWS_t:t(6,224)=(6,223)",128,0,1631,0
 255               		.stabs	"EBI_CS_MODE_enum:T(6,225)=@s8;eEBI_CS_MODE_DISABLED_gc:0,EBI_CS_MODE_SRAM_gc:1,EBI_CS_MODE
 256               		.stabs	"EBI_CS_MODE_t:t(6,226)=(6,225)",128,0,1640,0
 257               		.stabs	"EBI_CS_SDMODE_enum:T(6,227)=@s8;eEBI_CS_SDMODE_NORMAL_gc:0,EBI_CS_SDMODE_LOAD_gc:1,;",128,
 258               		.stabs	"EBI_CS_SDMODE_t:t(6,228)=(6,227)",128,0,1647,0
 259               		.stabs	"EBI_SDDATAW_enum:T(6,229)=@s8;eEBI_SDDATAW_4BIT_gc:0,EBI_SDDATAW_8BIT_gc:64,;",128,0,0,0
 260               		.stabs	"EBI_SDDATAW_t:t(6,230)=(6,229)",128,0,1654,0
 261               		.stabs	"EBI_LPCMODE_enum:T(6,231)=@s8;eEBI_LPCMODE_ALE1_gc:0,EBI_LPCMODE_ALE12_gc:32,;",128,0,0,0
 262               		.stabs	"EBI_LPCMODE_t:t(6,232)=(6,231)",128,0,1661,0
 263               		.stabs	"EBI_SRMODE_enum:T(6,233)=@s8;eEBI_SRMODE_ALE1_gc:0,EBI_SRMODE_ALE2_gc:4,EBI_SRMODE_ALE12_g
 264               		.stabs	"EBI_SRMODE_t:t(6,234)=(6,233)",128,0,1670,0
 265               		.stabs	"EBI_IFMODE_enum:T(6,235)=@s8;eEBI_IFMODE_DISABLED_gc:0,EBI_IFMODE_3PORT_gc:1,EBI_IFMODE_4P
 266               		.stabs	"EBI_IFMODE_t:t(6,236)=(6,235)",128,0,1679,0
 267               		.stabs	"EBI_SDCOL_enum:T(6,237)=@s8;eEBI_SDCOL_8BIT_gc:0,EBI_SDCOL_9BIT_gc:1,EBI_SDCOL_10BIT_gc:2,
 268               		.stabs	"EBI_SDCOL_t:t(6,238)=(6,237)",128,0,1688,0
 269               		.stabs	"EBI_MRDLY_enum:T(6,239)=@s8;eEBI_MRDLY_0CLK_gc:0,EBI_MRDLY_1CLK_gc:64,EBI_MRDLY_2CLK_gc:12
 270               		.stabs	"EBI_MRDLY_t:t(6,240)=(6,239)",128,0,1697,0
 271               		.stabs	"EBI_ROWCYCDLY_enum:T(6,241)=@s8;eEBI_ROWCYCDLY_0CLK_gc:0,EBI_ROWCYCDLY_1CLK_gc:8,EBI_ROWCY
 272               		.stabs	"EBI_ROWCYCDLY_t:t(6,242)=(6,241)",128,0,1710,0
 273               		.stabs	"EBI_RPDLY_enum:T(6,243)=@s8;eEBI_RPDLY_0CLK_gc:0,EBI_RPDLY_1CLK_gc:1,EBI_RPDLY_2CLK_gc:2,E
 274               		.stabs	"EBI_RPDLY_t:t(6,244)=(6,243)",128,0,1723,0
 275               		.stabs	"EBI_WRDLY_enum:T(6,245)=@s8;eEBI_WRDLY_0CLK_gc:0,EBI_WRDLY_1CLK_gc:64,EBI_WRDLY_2CLK_gc:12
 276               		.stabs	"EBI_WRDLY_t:t(6,246)=(6,245)",128,0,1732,0
 277               		.stabs	"EBI_ESRDLY_enum:T(6,247)=@s8;eEBI_ESRDLY_0CLK_gc:0,EBI_ESRDLY_1CLK_gc:8,EBI_ESRDLY_2CLK_gc
 278               		.stabs	"EBI_ESRDLY_t:t(6,248)=(6,247)",128,0,1745,0
 279               		.stabs	"EBI_ROWCOLDLY_enum:T(6,249)=@s8;eEBI_ROWCOLDLY_0CLK_gc:0,EBI_ROWCOLDLY_1CLK_gc:1,EBI_ROWCO
 280               		.stabs	"EBI_ROWCOLDLY_t:t(6,250)=(6,249)",128,0,1758,0
 281               		.stabs	"TWI_MASTER_struct:T(6,251)=s7CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;CTRLC:(6,1),16,8;STATUS:(6,1)
 282               		.stabs	"TWI_MASTER_t:t(6,252)=(6,251)",128,0,1777,0
 283               		.stabs	"TWI_SLAVE_struct:T(6,253)=s6CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;STATUS:(6,1),16,8;ADDR:(6,1),2
 284               		.stabs	"TWI_SLAVE_t:t(6,254)=(6,253)",128,0,1794,0
 285               		.stabs	"TWI_struct:T(6,255)=s14CTRL:(6,1),0,8;MASTER:(6,252),8,56;SLAVE:(6,254),64,48;;",128,0,0,0
GAS LISTING /tmp/ccl4KbeX.s 			page 6


 286               		.stabs	"TWI_t:t(6,256)=(6,255)",128,0,1808,0
 287               		.stabs	"TWI_MASTER_INTLVL_enum:T(6,257)=@s8;eTWI_MASTER_INTLVL_OFF_gc:0,TWI_MASTER_INTLVL_LO_gc:64
 288               		.stabs	"TWI_MASTER_INTLVL_t:t(6,258)=(6,257)",128,0,1817,0
 289               		.stabs	"TWI_MASTER_TIMEOUT_enum:T(6,259)=@s8;eTWI_MASTER_TIMEOUT_DISABLED_gc:0,TWI_MASTER_TIMEOUT_
 290               		.stabs	"TWI_MASTER_TIMEOUT_t:t(6,260)=(6,259)",128,0,1826,0
 291               		.stabs	"TWI_MASTER_CMD_enum:T(6,261)=@s8;eTWI_MASTER_CMD_NOACT_gc:0,TWI_MASTER_CMD_REPSTART_gc:1,T
 292               		.stabs	"TWI_MASTER_CMD_t:t(6,262)=(6,261)",128,0,1835,0
 293               		.stabs	"TWI_MASTER_BUSSTATE_enum:T(6,263)=@s8;eTWI_MASTER_BUSSTATE_UNKNOWN_gc:0,TWI_MASTER_BUSSTAT
 294               		.stabs	"TWI_MASTER_BUSSTATE_t:t(6,264)=(6,263)",128,0,1844,0
 295               		.stabs	"TWI_SLAVE_INTLVL_enum:T(6,265)=@s8;eTWI_SLAVE_INTLVL_OFF_gc:0,TWI_SLAVE_INTLVL_LO_gc:64,TW
 296               		.stabs	"TWI_SLAVE_INTLVL_t:t(6,266)=(6,265)",128,0,1853,0
 297               		.stabs	"TWI_SLAVE_CMD_enum:T(6,267)=@s8;eTWI_SLAVE_CMD_NOACT_gc:0,TWI_SLAVE_CMD_COMPTRANS_gc:2,TWI
 298               		.stabs	"TWI_SLAVE_CMD_t:t(6,268)=(6,267)",128,0,1861,0
 299               		.stabs	"PORTCFG_struct:T(6,269)=s5MPCMASK:(6,1),0,8;reserved_0x01:(6,1),8,8;VPCTRLA:(6,1),16,8;VPC
 300               		.stabs	"PORTCFG_t:t(6,270)=(6,269)",128,0,1878,0
 301               		.stabs	"VPORT_struct:T(6,271)=s4DIR:(6,1),0,8;OUT:(6,1),8,8;IN:(6,1),16,8;INTFLAGS:(6,1),24,8;;",1
 302               		.stabs	"VPORT_t:t(6,272)=(6,271)",128,0,1893,0
 303               		.stabs	"PORT_struct:T(6,273)=s24DIR:(6,1),0,8;DIRSET:(6,1),8,8;DIRCLR:(6,1),16,8;DIRTGL:(6,1),24,8
 304               		.stabs	"PORT_t:t(6,274)=(6,273)",128,0,1928,0
 305               		.stabs	"PORTCFG_VP0MAP_enum:T(6,275)=@s8;ePORTCFG_VP0MAP_PORTA_gc:0,PORTCFG_VP0MAP_PORTB_gc:1,PORT
 306               		.stabs	"PORTCFG_VP0MAP_t:t(6,276)=(6,275)",128,0,1949,0
 307               		.stabs	"PORTCFG_VP1MAP_enum:T(6,277)=@s8;ePORTCFG_VP1MAP_PORTA_gc:0,PORTCFG_VP1MAP_PORTB_gc:16,POR
 308               		.stabs	"PORTCFG_VP1MAP_t:t(6,278)=(6,277)",128,0,1970,0
 309               		.stabs	"PORTCFG_VP2MAP_enum:T(6,279)=@s8;ePORTCFG_VP2MAP_PORTA_gc:0,PORTCFG_VP2MAP_PORTB_gc:1,PORT
 310               		.stabs	"PORTCFG_VP2MAP_t:t(6,280)=(6,279)",128,0,1991,0
 311               		.stabs	"PORTCFG_VP3MAP_enum:T(6,281)=@s8;ePORTCFG_VP3MAP_PORTA_gc:0,PORTCFG_VP3MAP_PORTB_gc:16,POR
 312               		.stabs	"PORTCFG_VP3MAP_t:t(6,282)=(6,281)",128,0,2012,0
 313               		.stabs	"PORTCFG_CLKOUT_enum:T(6,283)=@s8;ePORTCFG_CLKOUT_OFF_gc:0,PORTCFG_CLKOUT_PC7_gc:1,PORTCFG_
 314               		.stabs	"PORTCFG_CLKOUT_t:t(6,284)=(6,283)",128,0,2021,0
 315               		.stabs	"PORTCFG_EVOUT_enum:T(6,285)=@s8;ePORTCFG_EVOUT_OFF_gc:0,PORTCFG_EVOUT_PC7_gc:16,PORTCFG_EV
 316               		.stabs	"PORTCFG_EVOUT_t:t(6,286)=(6,285)",128,0,2030,0
 317               		.stabs	"PORT_INT0LVL_enum:T(6,287)=@s8;ePORT_INT0LVL_OFF_gc:0,PORT_INT0LVL_LO_gc:1,PORT_INT0LVL_ME
 318               		.stabs	"PORT_INT0LVL_t:t(6,288)=(6,287)",128,0,2039,0
 319               		.stabs	"PORT_INT1LVL_enum:T(6,289)=@s8;ePORT_INT1LVL_OFF_gc:0,PORT_INT1LVL_LO_gc:4,PORT_INT1LVL_ME
 320               		.stabs	"PORT_INT1LVL_t:t(6,290)=(6,289)",128,0,2048,0
 321               		.stabs	"PORT_OPC_enum:T(6,291)=@s8;ePORT_OPC_TOTEM_gc:0,PORT_OPC_BUSKEEPER_gc:8,PORT_OPC_PULLDOWN_
 322               		.stabs	"PORT_OPC_t:t(6,292)=(6,291)",128,0,2061,0
 323               		.stabs	"PORT_ISC_enum:T(6,293)=@s8;ePORT_ISC_BOTHEDGES_gc:0,PORT_ISC_RISING_gc:1,PORT_ISC_FALLING_
 324               		.stabs	"PORT_ISC_t:t(6,294)=(6,293)",128,0,2071,0
 325               		.stabs	"TC0_struct:T(6,295)=s64CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;CTRLC:(6,1),16,8;CTRLD:(6,1),24,8;C
 326               		.stabs	"TC0_t:t(6,318)=(6,295)",128,0,2136,0
 327               		.stabs	"TC1_struct:T(6,319)=s60CTRLA:(6,1),0,8;CTRLB:(6,1),8,8;CTRLC:(6,1),16,8;CTRLD:(6,1),24,8;C
 328               		.stabs	"TC1_t:t(6,334)=(6,319)",128,0,2200,0
 329               		.stabs	"AWEX_struct:T(6,335)=s13CTRL:(6,1),0,8;reserved_0x01:(6,1),8,8;FDEMASK:(6,1),16,8;FDCTRL:(
 330               		.stabs	"AWEX_t:t(6,336)=(6,335)",128,0,2224,0
 331               		.stabs	"HIRES_struct:T(6,337)=s1CTRLA:(6,1),0,8;;",128,0,0,0
 332               		.stabs	"HIRES_t:t(6,338)=(6,337)",128,0,2236,0
 333               		.stabs	"TC_CLKSEL_enum:T(6,339)=@s8;eTC_CLKSEL_OFF_gc:0,TC_CLKSEL_DIV1_gc:1,TC_CLKSEL_DIV2_gc:2,TC
 334               		.stabs	"TC_CLKSEL_t:t(6,340)=(6,339)",128,0,2257,0
 335               		.stabs	"TC_WGMODE_enum:T(6,341)=@s8;eTC_WGMODE_NORMAL_gc:0,TC_WGMODE_FRQ_gc:1,TC_WGMODE_SS_gc:3,TC
 336               		.stabs	"TC_WGMODE_t:t(6,342)=(6,341)",128,0,2268,0
 337               		.stabs	"TC_EVACT_enum:T(6,343)=@s8;eTC_EVACT_OFF_gc:0,TC_EVACT_CAPT_gc:32,TC_EVACT_UPDOWN_gc:64,TC
 338               		.stabs	"TC_EVACT_t:t(6,344)=(6,343)",128,0,2280,0
 339               		.stabs	"TC_EVSEL_enum:T(6,345)=@s8;eTC_EVSEL_OFF_gc:0,TC_EVSEL_CH0_gc:8,TC_EVSEL_CH1_gc:9,TC_EVSEL
 340               		.stabs	"TC_EVSEL_t:t(6,346)=(6,345)",128,0,2294,0
 341               		.stabs	"TC_ERRINTLVL_enum:T(6,347)=@s8;eTC_ERRINTLVL_OFF_gc:0,TC_ERRINTLVL_LO_gc:4,TC_ERRINTLVL_ME
 342               		.stabs	"TC_ERRINTLVL_t:t(6,348)=(6,347)",128,0,2303,0
GAS LISTING /tmp/ccl4KbeX.s 			page 7


 343               		.stabs	"TC_OVFINTLVL_enum:T(6,349)=@s8;eTC_OVFINTLVL_OFF_gc:0,TC_OVFINTLVL_LO_gc:1,TC_OVFINTLVL_ME
 344               		.stabs	"TC_OVFINTLVL_t:t(6,350)=(6,349)",128,0,2312,0
 345               		.stabs	"TC_CCDINTLVL_enum:T(6,351)=@s8;eTC_CCDINTLVL_OFF_gc:0,TC_CCDINTLVL_LO_gc:64,TC_CCDINTLVL_M
 346               		.stabs	"TC_CCDINTLVL_t:t(6,352)=(6,351)",128,0,2321,0
 347               		.stabs	"TC_CCCINTLVL_enum:T(6,353)=@s8;eTC_CCCINTLVL_OFF_gc:0,TC_CCCINTLVL_LO_gc:16,TC_CCCINTLVL_M
 348               		.stabs	"TC_CCCINTLVL_t:t(6,354)=(6,353)",128,0,2330,0
 349               		.stabs	"TC_CCBINTLVL_enum:T(6,355)=@s8;eTC_CCBINTLVL_OFF_gc:0,TC_CCBINTLVL_LO_gc:4,TC_CCBINTLVL_ME
 350               		.stabs	"TC_CCBINTLVL_t:t(6,356)=(6,355)",128,0,2339,0
 351               		.stabs	"TC_CCAINTLVL_enum:T(6,357)=@s8;eTC_CCAINTLVL_OFF_gc:0,TC_CCAINTLVL_LO_gc:1,TC_CCAINTLVL_ME
 352               		.stabs	"TC_CCAINTLVL_t:t(6,358)=(6,357)",128,0,2348,0
 353               		.stabs	"TC_CMD_enum:T(6,359)=@s8;eTC_CMD_NONE_gc:0,TC_CMD_UPDATE_gc:4,TC_CMD_RESTART_gc:8,TC_CMD_R
 354               		.stabs	"TC_CMD_t:t(6,360)=(6,359)",128,0,2357,0
 355               		.stabs	"AWEX_FDACT_enum:T(6,361)=@s8;eAWEX_FDACT_NONE_gc:0,AWEX_FDACT_CLEAROE_gc:1,AWEX_FDACT_CLEA
 356               		.stabs	"AWEX_FDACT_t:t(6,362)=(6,361)",128,0,2365,0
 357               		.stabs	"HIRES_HREN_enum:T(6,363)=@s8;eHIRES_HREN_NONE_gc:0,HIRES_HREN_TC0_gc:1,HIRES_HREN_TC1_gc:2
 358               		.stabs	"HIRES_HREN_t:t(6,364)=(6,363)",128,0,2374,0
 359               		.stabs	"USART_struct:T(6,365)=s8DATA:(6,1),0,8;STATUS:(6,1),8,8;reserved_0x02:(6,1),16,8;CTRLA:(6,
 360               		.stabs	"USART_t:t(6,366)=(6,365)",128,0,2394,0
 361               		.stabs	"USART_RXCINTLVL_enum:T(6,367)=@s8;eUSART_RXCINTLVL_OFF_gc:0,USART_RXCINTLVL_LO_gc:16,USART
 362               		.stabs	"USART_RXCINTLVL_t:t(6,368)=(6,367)",128,0,2403,0
 363               		.stabs	"USART_TXCINTLVL_enum:T(6,369)=@s8;eUSART_TXCINTLVL_OFF_gc:0,USART_TXCINTLVL_LO_gc:4,USART_
 364               		.stabs	"USART_TXCINTLVL_t:t(6,370)=(6,369)",128,0,2412,0
 365               		.stabs	"USART_DREINTLVL_enum:T(6,371)=@s8;eUSART_DREINTLVL_OFF_gc:0,USART_DREINTLVL_LO_gc:1,USART_
 366               		.stabs	"USART_DREINTLVL_t:t(6,372)=(6,371)",128,0,2421,0
 367               		.stabs	"USART_CHSIZE_enum:T(6,373)=@s8;eUSART_CHSIZE_5BIT_gc:0,USART_CHSIZE_6BIT_gc:1,USART_CHSIZE
 368               		.stabs	"USART_CHSIZE_t:t(6,374)=(6,373)",128,0,2431,0
 369               		.stabs	"USART_CMODE_enum:T(6,375)=@s8;eUSART_CMODE_ASYNCHRONOUS_gc:0,USART_CMODE_SYNCHRONOUS_gc:64
 370               		.stabs	"USART_CMODE_t:t(6,376)=(6,375)",128,0,2440,0
 371               		.stabs	"USART_PMODE_enum:T(6,377)=@s8;eUSART_PMODE_DISABLED_gc:0,USART_PMODE_EVEN_gc:32,USART_PMOD
 372               		.stabs	"USART_PMODE_t:t(6,378)=(6,377)",128,0,2448,0
 373               		.stabs	"SPI_struct:T(6,379)=s4CTRL:(6,1),0,8;INTCTRL:(6,1),8,8;STATUS:(6,1),16,8;DATA:(6,1),24,8;;
 374               		.stabs	"SPI_t:t(6,380)=(6,379)",128,0,2464,0
 375               		.stabs	"SPI_MODE_enum:T(6,381)=@s8;eSPI_MODE_0_gc:0,SPI_MODE_1_gc:4,SPI_MODE_2_gc:8,SPI_MODE_3_gc:
 376               		.stabs	"SPI_MODE_t:t(6,382)=(6,381)",128,0,2473,0
 377               		.stabs	"SPI_PRESCALER_enum:T(6,383)=@s8;eSPI_PRESCALER_DIV4_gc:0,SPI_PRESCALER_DIV16_gc:1,SPI_PRES
 378               		.stabs	"SPI_PRESCALER_t:t(6,384)=(6,383)",128,0,2482,0
 379               		.stabs	"SPI_INTLVL_enum:T(6,385)=@s8;eSPI_INTLVL_OFF_gc:0,SPI_INTLVL_LO_gc:1,SPI_INTLVL_MED_gc:2,S
 380               		.stabs	"SPI_INTLVL_t:t(6,386)=(6,385)",128,0,2491,0
 381               		.stabs	"IRCOM_struct:T(6,387)=s3CTRL:(6,1),0,8;TXPLCTRL:(6,1),8,8;RXPLCTRL:(6,1),16,8;;",128,0,0,0
 382               		.stabs	"IRCOM_t:t(6,388)=(6,387)",128,0,2506,0
 383               		.stabs	"IRDA_EVSEL_enum:T(6,389)=@s8;eIRDA_EVSEL_OFF_gc:0,IRDA_EVSEL_0_gc:8,IRDA_EVSEL_1_gc:9,IRDA
 384               		.stabs	"IRDA_EVSEL_t:t(6,390)=(6,389)",128,0,2520,0
 385               		.stabs	"AES_struct:T(6,391)=s5CTRL:(6,1),0,8;STATUS:(6,1),8,8;STATE:(6,1),16,8;KEY:(6,1),24,8;INTC
 386               		.stabs	"AES_t:t(6,392)=(6,391)",128,0,2537,0
 387               		.stabs	"AES_INTLVL_enum:T(6,393)=@s8;eAES_INTLVL_OFF_gc:0,AES_INTLVL_LO_gc:1,AES_INTLVL_MED_gc:2,A
 388               		.stabs	"AES_INTLVL_t:t(6,394)=(6,393)",128,0,2546,0
 389               		.stabn	162,0,0,0
 390               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/avr/fuse.h",130,0,0,0
 391               		.stabs	"__fuse_t:t(7,1)=(7,2)=s6byte:(7,3)=ar(7,4)=r(7,4);0;0177777;;0;5;(0,11),0,48;;",128,0,234,
 392               		.stabn	162,0,0,0
 393               		.stabn	162,0,0,0
 394               		.stabs	"requiredFiles/avr_compiler.h",130,0,0,0
 395               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdlib.h",130,0,0,0
 396               		.stabs	"/usr/lib/gcc/avr/4.7.0/include/stddef.h",130,0,0,0
 397               		.stabs	"size_t:t(10,1)=(0,4)",128,0,213,0
 398               		.stabs	"wchar_t:t(10,2)=(0,1)",128,0,325,0
 399               		.stabn	162,0,0,0
GAS LISTING /tmp/ccl4KbeX.s 			page 8


 400               		.stabs	"div_t:t(9,1)=(9,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 401               		.stabs	"ldiv_t:t(9,3)=(9,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 402               		.stabs	"__compar_fn_t:t(9,5)=(9,6)=*(9,7)=f(0,1)",128,0,80,0
 403               		.stabn	162,0,0,0
 404               		.stabn	162,0,0,0
 405               		.stabs	"CCPWrite:F(0,15)",36,0,77,CCPWrite
 406               		.stabs	"address:P(0,16)=*(6,2)",64,0,77,24
 407               		.stabs	"value:P(5,2)",64,0,77,22
 408               	.global	CCPWrite
 409               		.type	CCPWrite, @function
 410               	CCPWrite:
 411               		.stabd	46,0,0
 412               		.stabs	"requiredFiles/clksys_driver.c",132,0,0,.Ltext1
 413               	.Ltext1:
   1:requiredFiles/clksys_driver.c **** /* This file has been prepared for Doxygen automatic documentation generation.*/
   2:requiredFiles/clksys_driver.c **** /*! \file *********************************************************************
   3:requiredFiles/clksys_driver.c ****  *
   4:requiredFiles/clksys_driver.c ****  * \brief  XMEGA Clock System driver source file.
   5:requiredFiles/clksys_driver.c ****  *
   6:requiredFiles/clksys_driver.c ****  *      This file contains the function implementations for the XMEGA Clock
   7:requiredFiles/clksys_driver.c ****  *      System driver.
   8:requiredFiles/clksys_driver.c ****  *
   9:requiredFiles/clksys_driver.c ****  *      The driver is not intended for size and/or speed critical code, since
  10:requiredFiles/clksys_driver.c ****  *      most functions are just a few lines of code, and the function call
  11:requiredFiles/clksys_driver.c ****  *      overhead would decrease code performance. The driver is intended for
  12:requiredFiles/clksys_driver.c ****  *      rapid prototyping and documentation purposes for getting started with
  13:requiredFiles/clksys_driver.c ****  *      the XMEGA Clock System.
  14:requiredFiles/clksys_driver.c ****  *
  15:requiredFiles/clksys_driver.c ****  *      For size and/or speed critical code, it is recommended to copy the
  16:requiredFiles/clksys_driver.c ****  *      function contents directly into your application instead of making
  17:requiredFiles/clksys_driver.c ****  *      a function call.
  18:requiredFiles/clksys_driver.c ****  *
  19:requiredFiles/clksys_driver.c ****  *      Several functions use the following construct:
  20:requiredFiles/clksys_driver.c ****  *          "some_register = ... | (some_parameter ? SOME_BIT_bm : 0) | ..."
  21:requiredFiles/clksys_driver.c ****  *      Although the use of the ternary operator ( if ? then : else ) is
  22:requiredFiles/clksys_driver.c ****  *      discouraged, in some occasions the operator makes it possible to
  23:requiredFiles/clksys_driver.c ****  *      write pretty clean and neat code. In this driver, the construct is
  24:requiredFiles/clksys_driver.c ****  *      used to set or not set a configuration bit based on a boolean input
  25:requiredFiles/clksys_driver.c ****  *      parameter, such as the "some_parameter" in the example above.
  26:requiredFiles/clksys_driver.c ****  *
  27:requiredFiles/clksys_driver.c ****  * \par Application note:
  28:requiredFiles/clksys_driver.c ****  *      AVR1003: Using the XMEGA Clock System
  29:requiredFiles/clksys_driver.c ****  *
  30:requiredFiles/clksys_driver.c ****  * \par Documentation
  31:requiredFiles/clksys_driver.c ****  *      For comprehensive code documentation, supported compilers, compiler
  32:requiredFiles/clksys_driver.c ****  *      settings and supported devices see readme.html
  33:requiredFiles/clksys_driver.c ****  *
  34:requiredFiles/clksys_driver.c ****  * \author
  35:requiredFiles/clksys_driver.c ****  *      Atmel Corporation: http://www.atmel.com \n
  36:requiredFiles/clksys_driver.c ****  *      Support email: avr@atmel.com
  37:requiredFiles/clksys_driver.c ****  *
  38:requiredFiles/clksys_driver.c ****  * $Revision: 2771 $
  39:requiredFiles/clksys_driver.c ****  * $Date: 2009-09-11 11:54:26 +0200 (fr, 11 sep 2009) $  \n
  40:requiredFiles/clksys_driver.c ****  *
  41:requiredFiles/clksys_driver.c ****  * Copyright (c) 2008, Atmel Corporation All rights reserved.
  42:requiredFiles/clksys_driver.c ****  *
  43:requiredFiles/clksys_driver.c ****  * Redistribution and use in source and binary forms, with or without
GAS LISTING /tmp/ccl4KbeX.s 			page 9


  44:requiredFiles/clksys_driver.c ****  * modification, are permitted provided that the following conditions are met:
  45:requiredFiles/clksys_driver.c ****  *
  46:requiredFiles/clksys_driver.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  47:requiredFiles/clksys_driver.c ****  * this list of conditions and the following disclaimer.
  48:requiredFiles/clksys_driver.c ****  *
  49:requiredFiles/clksys_driver.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  50:requiredFiles/clksys_driver.c ****  * this list of conditions and the following disclaimer in the documentation
  51:requiredFiles/clksys_driver.c ****  * and/or other materials provided with the distribution.
  52:requiredFiles/clksys_driver.c ****  *
  53:requiredFiles/clksys_driver.c ****  * 3. The name of ATMEL may not be used to endorse or promote products derived
  54:requiredFiles/clksys_driver.c ****  * from this software without specific prior written permission.
  55:requiredFiles/clksys_driver.c ****  *
  56:requiredFiles/clksys_driver.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  57:requiredFiles/clksys_driver.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  58:requiredFiles/clksys_driver.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY AND
  59:requiredFiles/clksys_driver.c ****  * SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT,
  60:requiredFiles/clksys_driver.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  61:requiredFiles/clksys_driver.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  62:requiredFiles/clksys_driver.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  63:requiredFiles/clksys_driver.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  64:requiredFiles/clksys_driver.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  65:requiredFiles/clksys_driver.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  66:requiredFiles/clksys_driver.c ****  *****************************************************************************/
  67:requiredFiles/clksys_driver.c **** #include "clksys_driver.h"
  68:requiredFiles/clksys_driver.c **** 
  69:requiredFiles/clksys_driver.c **** /*! \brief CCP write helper function written in assembly.
  70:requiredFiles/clksys_driver.c ****  *
  71:requiredFiles/clksys_driver.c ****  *  This function is written in assembly because of the timecritial
  72:requiredFiles/clksys_driver.c ****  *  operation of writing to the registers.
  73:requiredFiles/clksys_driver.c ****  *
  74:requiredFiles/clksys_driver.c ****  *  \param address A pointer to the address to write to.
  75:requiredFiles/clksys_driver.c ****  *  \param value   The value to put in to the register.
  76:requiredFiles/clksys_driver.c ****  */
  77:requiredFiles/clksys_driver.c **** void CCPWrite( volatile uint8_t * address, uint8_t value )
  78:requiredFiles/clksys_driver.c **** {
 414               		.stabn	68,0,78,.LM0-.LFBB1
 415               	.LM0:
 416               	.LFBB1:
 417 0000 0F93      		push r16
 418 0002 CF93      		push r28
 419 0004 DF93      		push r29
 420 0006 1F92      		push __zero_reg__
 421 0008 CDB7      		in r28,__SP_L__
 422 000a DEB7      		in r29,__SP_H__
 423               	/* prologue: function */
 424               	/* frame size = 1 */
 425               	/* stack size = 4 */
 426               	.L__stack_usage = 4
  79:requiredFiles/clksys_driver.c **** #ifdef __ICCAVR__
  80:requiredFiles/clksys_driver.c **** 
  81:requiredFiles/clksys_driver.c **** 	// Store global interrupt setting in scratch register and disable interrupts.
  82:requiredFiles/clksys_driver.c ****         asm("in  R1, 0x3F \n"
  83:requiredFiles/clksys_driver.c **** 	    "cli"
  84:requiredFiles/clksys_driver.c **** 	    );
  85:requiredFiles/clksys_driver.c **** 
  86:requiredFiles/clksys_driver.c **** 	// Move destination address pointer to Z pointer registers.
  87:requiredFiles/clksys_driver.c **** 	asm("movw r30, r16");
GAS LISTING /tmp/ccl4KbeX.s 			page 10


  88:requiredFiles/clksys_driver.c **** #ifdef RAMPZ
  89:requiredFiles/clksys_driver.c **** 	asm("ldi  R16, 0 \n"
  90:requiredFiles/clksys_driver.c ****             "out  0x3B, R16"
  91:requiredFiles/clksys_driver.c **** 	    );
  92:requiredFiles/clksys_driver.c **** 
  93:requiredFiles/clksys_driver.c **** #endif
  94:requiredFiles/clksys_driver.c **** 	asm("ldi  r16,  0xD8 \n"
  95:requiredFiles/clksys_driver.c **** 	    "out  0x34, r16  \n"
  96:requiredFiles/clksys_driver.c **** #if (__MEMORY_MODEL__ == 1)
  97:requiredFiles/clksys_driver.c **** 	    "st     Z,  r17  \n");
  98:requiredFiles/clksys_driver.c **** #elif (__MEMORY_MODEL__ == 2)
  99:requiredFiles/clksys_driver.c **** 	    "st     Z,  r18  \n");
 100:requiredFiles/clksys_driver.c **** #else /* (__MEMORY_MODEL__ == 3) || (__MEMORY_MODEL__ == 5) */
 101:requiredFiles/clksys_driver.c **** 	    "st     Z,  r19  \n");
 102:requiredFiles/clksys_driver.c **** #endif /* __MEMORY_MODEL__ */
 103:requiredFiles/clksys_driver.c **** 
 104:requiredFiles/clksys_driver.c **** 	// Restore global interrupt setting from scratch register.
 105:requiredFiles/clksys_driver.c ****         asm("out  0x3F, R1");
 106:requiredFiles/clksys_driver.c **** 
 107:requiredFiles/clksys_driver.c **** #elif defined __GNUC__
 108:requiredFiles/clksys_driver.c **** 	AVR_ENTER_CRITICAL_REGION( );
 427               		.stabn	68,0,108,.LM1-.LFBB1
 428               	.LM1:
 429 000c 2FB7      		in r18,__SREG__
 430 000e 2983      		std Y+1,r18
 431               	/* #APP */
 432               	 ;  108 "requiredFiles/clksys_driver.c" 1
 433 0010 F894      		cli
 434               	 ;  0 "" 2
 109:requiredFiles/clksys_driver.c **** 	volatile uint8_t * tmpAddr = address;
 110:requiredFiles/clksys_driver.c **** #ifdef RAMPZ
 111:requiredFiles/clksys_driver.c **** 	RAMPZ = 0;
 435               		.stabn	68,0,111,.LM2-.LFBB1
 436               	.LM2:
 437               	/* #NOAPP */
 438 0012 1BBE      		out 0x3b,__zero_reg__
 112:requiredFiles/clksys_driver.c **** #endif
 113:requiredFiles/clksys_driver.c **** 	asm volatile(
 439               		.stabn	68,0,113,.LM3-.LFBB1
 440               	.LM3:
 441               	/* #APP */
 442               	 ;  113 "requiredFiles/clksys_driver.c" 1
 443 0014 FC01      		movw r30,  r24
 444 0016 08ED      		ldi  r16,  216
 445 0018 04BF      		out   52, r16
 446 001a 6083      		st     Z,  r22
 447               		
 448               	 ;  0 "" 2
 114:requiredFiles/clksys_driver.c **** 		"movw r30,  %0"	      "\n\t"
 115:requiredFiles/clksys_driver.c **** 		"ldi  r16,  %2"	      "\n\t"
 116:requiredFiles/clksys_driver.c **** 		"out   %3, r16"	      "\n\t"
 117:requiredFiles/clksys_driver.c **** 		"st     Z,  %1"       "\n\t"
 118:requiredFiles/clksys_driver.c **** 		:
 119:requiredFiles/clksys_driver.c **** 		: "r" (tmpAddr), "r" (value), "M" (CCP_IOREG_gc), "i" (&CCP)
 120:requiredFiles/clksys_driver.c **** 		: "r16", "r30", "r31"
 121:requiredFiles/clksys_driver.c **** 		);
 122:requiredFiles/clksys_driver.c **** 
GAS LISTING /tmp/ccl4KbeX.s 			page 11


 123:requiredFiles/clksys_driver.c **** 	AVR_LEAVE_CRITICAL_REGION( );
 449               		.stabn	68,0,123,.LM4-.LFBB1
 450               	.LM4:
 451               	/* #NOAPP */
 452 001c 8981      		ldd r24,Y+1
 453 001e 8FBF      		out __SREG__,r24
 454               	/* epilogue start */
 124:requiredFiles/clksys_driver.c **** #endif
 125:requiredFiles/clksys_driver.c **** }
 455               		.stabn	68,0,125,.LM5-.LFBB1
 456               	.LM5:
 457 0020 0F90      		pop __tmp_reg__
 458 0022 DF91      		pop r29
 459 0024 CF91      		pop r28
 460 0026 0F91      		pop r16
 461 0028 0895      		ret
 462               		.size	CCPWrite, .-CCPWrite
 463               		.stabs	"saved_sreg:(6,2)",128,0,108,1
 464               		.stabn	192,0,0,.LFBB1-.LFBB1
 465               		.stabn	224,0,0,.Lscope1-.LFBB1
 466               	.Lscope1:
 467               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 468               		.stabd	78,0,0
 469               		.stabs	"CLKSYS_XOSC_Config:F(0,15)",36,0,141,CLKSYS_XOSC_Config
 470               		.stabs	"freqRange:P(6,30)",64,0,141,24
 471               		.stabs	"lowPower32kHz:P(0,17)=@s8;-16;",64,0,142,22
 472               		.stabs	"xoscModeSelection:P(6,32)",64,0,143,20
 473               	.global	CLKSYS_XOSC_Config
 474               		.type	CLKSYS_XOSC_Config, @function
 475               	CLKSYS_XOSC_Config:
 476               		.stabd	46,0,0
 126:requiredFiles/clksys_driver.c **** 
 127:requiredFiles/clksys_driver.c **** /*! \brief This function configures the external oscillator.
 128:requiredFiles/clksys_driver.c ****  *
 129:requiredFiles/clksys_driver.c ****  *  \note Note that the oscillator cannot be used as a main system clock
 130:requiredFiles/clksys_driver.c ****  *        source without being enabled and stable first. Check the ready flag
 131:requiredFiles/clksys_driver.c ****  *        before using the clock. The macro CLKSYS_IsReady( _oscSel )
 132:requiredFiles/clksys_driver.c ****  *        can be used to check this.
 133:requiredFiles/clksys_driver.c ****  *
 134:requiredFiles/clksys_driver.c ****  *  \param  freqRange          Frequency range for high-frequency crystal, does
 135:requiredFiles/clksys_driver.c ****  *                             not apply for external clock or 32kHz crystals.
 136:requiredFiles/clksys_driver.c ****  *  \param  lowPower32kHz      True of high-quality watch crystals are used and
 137:requiredFiles/clksys_driver.c ****  *                             low-power oscillator is desired.
 138:requiredFiles/clksys_driver.c ****  *  \param  xoscModeSelection  Combined selection of oscillator type (or
 139:requiredFiles/clksys_driver.c ****  *                             external clock) and startup times.
 140:requiredFiles/clksys_driver.c ****  */
 141:requiredFiles/clksys_driver.c **** void CLKSYS_XOSC_Config( OSC_FRQRANGE_t freqRange,
 142:requiredFiles/clksys_driver.c ****                          bool lowPower32kHz,
 143:requiredFiles/clksys_driver.c ****                          OSC_XOSCSEL_t xoscModeSelection )
 144:requiredFiles/clksys_driver.c **** {
 477               		.stabn	68,0,144,.LM6-.LFBB2
 478               	.LM6:
 479               	.LFBB2:
 480               	/* prologue: function */
 481               	/* frame size = 0 */
 482               	/* stack size = 0 */
 483               	.L__stack_usage = 0
GAS LISTING /tmp/ccl4KbeX.s 			page 12


 145:requiredFiles/clksys_driver.c **** 	OSC.XOSCCTRL = (uint8_t) freqRange |
 484               		.stabn	68,0,145,.LM7-.LFBB2
 485               	.LM7:
 486 002a 6623      		tst r22
 487 002c 01F0      		breq .L4
 488 002e 90E2      		ldi r25,lo8(32)
 489 0030 00C0      		rjmp .L3
 490               	.L4:
 491 0032 90E0      		ldi r25,0
 492               	.L3:
 493               		.stabn	68,0,145,.LM8-.LFBB2
 494               	.LM8:
 495 0034 842B      		or r24,r20
 496 0036 892B      		or r24,r25
 497 0038 8093 5200 		sts 82,r24
 498 003c 0895      		ret
 499               		.size	CLKSYS_XOSC_Config, .-CLKSYS_XOSC_Config
 500               	.Lscope2:
 501               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 502               		.stabd	78,0,0
 503               		.stabs	"CLKSYS_PLL_Config:F(0,15)",36,0,167,CLKSYS_PLL_Config
 504               		.stabs	"clockSource:P(6,34)",64,0,167,24
 505               		.stabs	"factor:P(5,2)",64,0,167,22
 506               	.global	CLKSYS_PLL_Config
 507               		.type	CLKSYS_PLL_Config, @function
 508               	CLKSYS_PLL_Config:
 509               		.stabd	46,0,0
 146:requiredFiles/clksys_driver.c **** 	               ( lowPower32kHz ? OSC_X32KLPM_bm : 0 ) |
 147:requiredFiles/clksys_driver.c **** 	               xoscModeSelection;
 148:requiredFiles/clksys_driver.c **** }
 149:requiredFiles/clksys_driver.c **** 
 150:requiredFiles/clksys_driver.c **** 
 151:requiredFiles/clksys_driver.c **** /*! \brief This function configures the internal high-frequency PLL.
 152:requiredFiles/clksys_driver.c ****  *
 153:requiredFiles/clksys_driver.c ****  *  Configuration of the internal high-frequency PLL to the correct
 154:requiredFiles/clksys_driver.c ****  *  values. It is used to define the input of the PLL and the factor of
 155:requiredFiles/clksys_driver.c ****  *  multiplication of the input clock source.
 156:requiredFiles/clksys_driver.c ****  *
 157:requiredFiles/clksys_driver.c ****  *  \note Note that the oscillator cannot be used as a main system clock
 158:requiredFiles/clksys_driver.c ****  *        source without being enabled and stable first. Check the ready flag
 159:requiredFiles/clksys_driver.c ****  *        before using the clock. The macro CLKSYS_IsReady( _oscSel )
 160:requiredFiles/clksys_driver.c ****  *        can be used to check this.
 161:requiredFiles/clksys_driver.c ****  *
 162:requiredFiles/clksys_driver.c ****  *  \param  clockSource Reference clock source for the PLL,
 163:requiredFiles/clksys_driver.c ****  *                      must be above 0.4MHz.
 164:requiredFiles/clksys_driver.c ****  *  \param  factor      PLL multiplication factor, must be
 165:requiredFiles/clksys_driver.c ****  *                      from 1 to 31, inclusive.
 166:requiredFiles/clksys_driver.c ****  */
 167:requiredFiles/clksys_driver.c **** void CLKSYS_PLL_Config( OSC_PLLSRC_t clockSource, uint8_t factor )
 168:requiredFiles/clksys_driver.c **** {
 510               		.stabn	68,0,168,.LM9-.LFBB3
 511               	.LM9:
 512               	.LFBB3:
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
GAS LISTING /tmp/ccl4KbeX.s 			page 13


 169:requiredFiles/clksys_driver.c **** 	factor &= OSC_PLLFAC_gm;
 517               		.stabn	68,0,169,.LM10-.LFBB3
 518               	.LM10:
 519 003e 6F71      		andi r22,lo8(31)
 170:requiredFiles/clksys_driver.c **** 	OSC.PLLCTRL = (uint8_t) clockSource | ( factor << OSC_PLLFAC_gp );
 520               		.stabn	68,0,170,.LM11-.LFBB3
 521               	.LM11:
 522 0040 682B      		or r22,r24
 523 0042 E0E5      		ldi r30,lo8(80)
 524 0044 F0E0      		ldi r31,0
 525 0046 6583      		std Z+5,r22
 526 0048 0895      		ret
 527               		.size	CLKSYS_PLL_Config, .-CLKSYS_PLL_Config
 528               	.Lscope3:
 529               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 530               		.stabd	78,0,0
 531               		.stabs	"CLKSYS_Disable:F(5,2)",36,0,187,CLKSYS_Disable
 532               		.stabs	"oscSel:P(5,2)",64,0,187,24
 533               	.global	CLKSYS_Disable
 534               		.type	CLKSYS_Disable, @function
 535               	CLKSYS_Disable:
 536               		.stabd	46,0,0
 171:requiredFiles/clksys_driver.c **** }
 172:requiredFiles/clksys_driver.c **** 
 173:requiredFiles/clksys_driver.c **** 
 174:requiredFiles/clksys_driver.c **** /*! \brief This function disables the selected oscillator.
 175:requiredFiles/clksys_driver.c ****  *
 176:requiredFiles/clksys_driver.c ****  *  This function will disable the selected oscillator if possible.
 177:requiredFiles/clksys_driver.c ****  *  If it is currently used as a main system clock source, hardware will
 178:requiredFiles/clksys_driver.c ****  *  disregard the disable attempt, and this function will return zero.
 179:requiredFiles/clksys_driver.c ****  *  If it fails, change to another main system clock source and try again.
 180:requiredFiles/clksys_driver.c ****  *
 181:requiredFiles/clksys_driver.c ****  *  \param oscSel  Bitmask of selected clock. Can be one of the following
 182:requiredFiles/clksys_driver.c ****  *                 OSC_RC2MEN_bm, OSC_RC32MEN_bm, OSC_RC32KEN_bm,
 183:requiredFiles/clksys_driver.c ****  *                 OSC_XOSCEN_bm, OSC_PLLEN_bm.
 184:requiredFiles/clksys_driver.c ****  *
 185:requiredFiles/clksys_driver.c ****  *  \return  Non-zero if oscillator was disabled successfully.
 186:requiredFiles/clksys_driver.c ****  */
 187:requiredFiles/clksys_driver.c **** uint8_t CLKSYS_Disable( uint8_t oscSel )
 188:requiredFiles/clksys_driver.c **** {
 537               		.stabn	68,0,188,.LM12-.LFBB4
 538               	.LM12:
 539               	.LFBB4:
 540               	/* prologue: function */
 541               	/* frame size = 0 */
 542               	/* stack size = 0 */
 543               	.L__stack_usage = 0
 189:requiredFiles/clksys_driver.c **** 	OSC.CTRL &= ~oscSel;
 544               		.stabn	68,0,189,.LM13-.LFBB4
 545               	.LM13:
 546 004a E0E5      		ldi r30,lo8(80)
 547 004c F0E0      		ldi r31,0
 548 004e 2081      		ld r18,Z
 549 0050 982F      		mov r25,r24
 550 0052 9095      		com r25
 551 0054 9223      		and r25,r18
 552 0056 9083      		st Z,r25
GAS LISTING /tmp/ccl4KbeX.s 			page 14


 190:requiredFiles/clksys_driver.c **** 	uint8_t clkEnabled = OSC.CTRL & oscSel;
 553               		.stabn	68,0,190,.LM14-.LFBB4
 554               	.LM14:
 555 0058 9081      		ld r25,Z
 191:requiredFiles/clksys_driver.c **** 	return clkEnabled;
 192:requiredFiles/clksys_driver.c **** }
 556               		.stabn	68,0,192,.LM15-.LFBB4
 557               	.LM15:
 558 005a 8923      		and r24,r25
 559 005c 0895      		ret
 560               		.size	CLKSYS_Disable, .-CLKSYS_Disable
 561               	.Lscope4:
 562               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 563               		.stabd	78,0,0
 564               		.stabs	"CLKSYS_Prescalers_Config:F(0,15)",36,0,206,CLKSYS_Prescalers_Config
 565               		.stabs	"PSAfactor:P(6,18)",64,0,206,24
 566               		.stabs	"PSBCfactor:P(6,20)",64,0,207,22
 567               	.global	CLKSYS_Prescalers_Config
 568               		.type	CLKSYS_Prescalers_Config, @function
 569               	CLKSYS_Prescalers_Config:
 570               		.stabd	46,0,0
 193:requiredFiles/clksys_driver.c **** 
 194:requiredFiles/clksys_driver.c **** 
 195:requiredFiles/clksys_driver.c **** /*! \brief This function changes the prescaler configuration.
 196:requiredFiles/clksys_driver.c ****  *
 197:requiredFiles/clksys_driver.c ****  *  Change the configuration of the three system clock
 198:requiredFiles/clksys_driver.c ****  *  prescaler is one single operation. The user must make sure that
 199:requiredFiles/clksys_driver.c ****  *  the main CPU clock does not exceed recommended limits.
 200:requiredFiles/clksys_driver.c ****  *
 201:requiredFiles/clksys_driver.c ****  *  \param  PSAfactor   Prescaler A division factor, OFF or 2 to 512 in
 202:requiredFiles/clksys_driver.c ****  *                      powers of two.
 203:requiredFiles/clksys_driver.c ****  *  \param  PSBCfactor  Prescaler B and C division factor, in the combination
 204:requiredFiles/clksys_driver.c ****  *                      of (1,1), (1,2), (4,1) or (2,2).
 205:requiredFiles/clksys_driver.c ****  */
 206:requiredFiles/clksys_driver.c **** void CLKSYS_Prescalers_Config( CLK_PSADIV_t PSAfactor,
 207:requiredFiles/clksys_driver.c ****                                CLK_PSBCDIV_t PSBCfactor )
 208:requiredFiles/clksys_driver.c **** {
 571               		.stabn	68,0,208,.LM16-.LFBB5
 572               	.LM16:
 573               	.LFBB5:
 574               	/* prologue: function */
 575               	/* frame size = 0 */
 576               	/* stack size = 0 */
 577               	.L__stack_usage = 0
 209:requiredFiles/clksys_driver.c **** 	uint8_t PSconfig = (uint8_t) PSAfactor | PSBCfactor;
 578               		.stabn	68,0,209,.LM17-.LFBB5
 579               	.LM17:
 580 005e 682B      		or r22,r24
 210:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.PSCTRL, PSconfig );
 581               		.stabn	68,0,210,.LM18-.LFBB5
 582               	.LM18:
 583 0060 81E4      		ldi r24,lo8(65)
 584 0062 90E0      		ldi r25,0
 585 0064 0C94 0000 		jmp CCPWrite
 586               		.size	CLKSYS_Prescalers_Config, .-CLKSYS_Prescalers_Config
 587               	.Lscope5:
 588               		.stabs	"",36,0,0,.Lscope5-.LFBB5
GAS LISTING /tmp/ccl4KbeX.s 			page 15


 589               		.stabd	78,0,0
 590               		.stabs	"CLKSYS_Main_ClockSource_Select:F(5,2)",36,0,225,CLKSYS_Main_ClockSource_Select
 591               		.stabs	"clockSource:P(6,16)",64,0,225,17
 592               	.global	CLKSYS_Main_ClockSource_Select
 593               		.type	CLKSYS_Main_ClockSource_Select, @function
 594               	CLKSYS_Main_ClockSource_Select:
 595               		.stabd	46,0,0
 211:requiredFiles/clksys_driver.c **** }
 212:requiredFiles/clksys_driver.c **** 
 213:requiredFiles/clksys_driver.c **** 
 214:requiredFiles/clksys_driver.c **** /*! \brief This function selects the main system clock source.
 215:requiredFiles/clksys_driver.c ****  *
 216:requiredFiles/clksys_driver.c ****  *  Hardware will disregard any attempts to select a clock source that is not
 217:requiredFiles/clksys_driver.c ****  *  enabled or not stable. If the change fails, make sure the source is ready
 218:requiredFiles/clksys_driver.c ****  *  and running and try again.
 219:requiredFiles/clksys_driver.c ****  *
 220:requiredFiles/clksys_driver.c ****  *  \param  clockSource  Clock source to use as input for the system clock
 221:requiredFiles/clksys_driver.c ****  *                       prescaler block.
 222:requiredFiles/clksys_driver.c ****  *
 223:requiredFiles/clksys_driver.c ****  *  \return  Non-zero if change was successful.
 224:requiredFiles/clksys_driver.c ****  */
 225:requiredFiles/clksys_driver.c **** uint8_t CLKSYS_Main_ClockSource_Select( CLK_SCLKSEL_t clockSource )
 226:requiredFiles/clksys_driver.c **** {
 596               		.stabn	68,0,226,.LM19-.LFBB6
 597               	.LM19:
 598               	.LFBB6:
 599 0068 1F93      		push r17
 600 006a CF93      		push r28
 601 006c DF93      		push r29
 602               	/* prologue: function */
 603               	/* frame size = 0 */
 604               	/* stack size = 3 */
 605               	.L__stack_usage = 3
 606 006e 182F      		mov r17,r24
 227:requiredFiles/clksys_driver.c **** 	uint8_t clkCtrl = ( CLK.CTRL & ~CLK_SCLKSEL_gm ) | clockSource;
 607               		.stabn	68,0,227,.LM20-.LFBB6
 608               	.LM20:
 609 0070 C0E4      		ldi r28,lo8(64)
 610 0072 D0E0      		ldi r29,0
 611 0074 6881      		ld r22,Y
 612 0076 687F      		andi r22,lo8(-8)
 613 0078 682B      		or r22,r24
 228:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.CTRL, clkCtrl );
 614               		.stabn	68,0,228,.LM21-.LFBB6
 615               	.LM21:
 616 007a 80E4      		ldi r24,lo8(64)
 617 007c 90E0      		ldi r25,0
 618 007e 0E94 0000 		call CCPWrite
 229:requiredFiles/clksys_driver.c **** 	clkCtrl = ( CLK.CTRL & clockSource );
 619               		.stabn	68,0,229,.LM22-.LFBB6
 620               	.LM22:
 621 0082 8881      		ld r24,Y
 230:requiredFiles/clksys_driver.c **** 	return clkCtrl;
 231:requiredFiles/clksys_driver.c **** }
 622               		.stabn	68,0,231,.LM23-.LFBB6
 623               	.LM23:
 624 0084 8123      		and r24,r17
GAS LISTING /tmp/ccl4KbeX.s 			page 16


 625               	/* epilogue start */
 626 0086 DF91      		pop r29
 627 0088 CF91      		pop r28
 628 008a 1F91      		pop r17
 629 008c 0895      		ret
 630               		.size	CLKSYS_Main_ClockSource_Select, .-CLKSYS_Main_ClockSource_Select
 631               	.Lscope6:
 632               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 633               		.stabd	78,0,0
 634               		.stabs	"CLKSYS_RTC_ClockSource_Enable:F(0,15)",36,0,241,CLKSYS_RTC_ClockSource_Enable
 635               		.stabs	"clockSource:P(6,22)",64,0,241,24
 636               	.global	CLKSYS_RTC_ClockSource_Enable
 637               		.type	CLKSYS_RTC_ClockSource_Enable, @function
 638               	CLKSYS_RTC_ClockSource_Enable:
 639               		.stabd	46,0,0
 232:requiredFiles/clksys_driver.c **** 
 233:requiredFiles/clksys_driver.c **** 
 234:requiredFiles/clksys_driver.c **** /*! \brief This function selects a Real-Time Counter clock source.
 235:requiredFiles/clksys_driver.c ****  *
 236:requiredFiles/clksys_driver.c ****  *  Selects the clock source for use by the Real-Time Counter (RTC)
 237:requiredFiles/clksys_driver.c ****  *  and enables clock signal routing to the RTC module.
 238:requiredFiles/clksys_driver.c ****  *
 239:requiredFiles/clksys_driver.c ****  *  \param  clockSource  Clock source to use for the RTC.
 240:requiredFiles/clksys_driver.c ****  */
 241:requiredFiles/clksys_driver.c **** void CLKSYS_RTC_ClockSource_Enable( CLK_RTCSRC_t clockSource )
 242:requiredFiles/clksys_driver.c **** {
 640               		.stabn	68,0,242,.LM24-.LFBB7
 641               	.LM24:
 642               	.LFBB7:
 643               	/* prologue: function */
 644               	/* frame size = 0 */
 645               	/* stack size = 0 */
 646               	.L__stack_usage = 0
 243:requiredFiles/clksys_driver.c **** 	CLK.RTCCTRL = ( CLK.RTCCTRL & ~CLK_RTCSRC_gm ) |
 647               		.stabn	68,0,243,.LM25-.LFBB7
 648               	.LM25:
 649 008e E0E4      		ldi r30,lo8(64)
 650 0090 F0E0      		ldi r31,0
 651 0092 9381      		ldd r25,Z+3
 652 0094 917F      		andi r25,lo8(-15)
 653 0096 9160      		ori r25,lo8(1)
 654 0098 982B      		or r25,r24
 655 009a 9383      		std Z+3,r25
 656 009c 0895      		ret
 657               		.size	CLKSYS_RTC_ClockSource_Enable, .-CLKSYS_RTC_ClockSource_Enable
 658               	.Lscope7:
 659               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 660               		.stabd	78,0,0
 661               		.stabs	"CLKSYS_AutoCalibration_Enable:F(0,15)",36,0,260,CLKSYS_AutoCalibration_Enable
 662               		.stabs	"clkSource:P(5,2)",64,0,260,24
 663               		.stabs	"extReference:P(0,17)",64,0,260,22
 664               	.global	CLKSYS_AutoCalibration_Enable
 665               		.type	CLKSYS_AutoCalibration_Enable, @function
 666               	CLKSYS_AutoCalibration_Enable:
 667               		.stabd	46,0,0
 244:requiredFiles/clksys_driver.c **** 	              clockSource |
 245:requiredFiles/clksys_driver.c **** 	              CLK_RTCEN_bm;
GAS LISTING /tmp/ccl4KbeX.s 			page 17


 246:requiredFiles/clksys_driver.c **** }
 247:requiredFiles/clksys_driver.c **** 
 248:requiredFiles/clksys_driver.c **** 
 249:requiredFiles/clksys_driver.c **** /*! \brief This function enables automatic calibration of the selected internal
 250:requiredFiles/clksys_driver.c ****  *         oscillator.
 251:requiredFiles/clksys_driver.c ****  *
 252:requiredFiles/clksys_driver.c ****  *  Either the internal 32kHz RC oscillator or an external 32kHz
 253:requiredFiles/clksys_driver.c ****  *  crystal can be used as a calibration reference. The user must make sure
 254:requiredFiles/clksys_driver.c ****  *  that the selected reference is ready and running.
 255:requiredFiles/clksys_driver.c ****  *
 256:requiredFiles/clksys_driver.c ****  *  \param  clkSource    Clock source to calibrate, either OSC_RC2MCREF_bm or
 257:requiredFiles/clksys_driver.c ****  *                       OSC_RC32MCREF_bm.
 258:requiredFiles/clksys_driver.c ****  *  \param  extReference True if external crystal should be used as reference.
 259:requiredFiles/clksys_driver.c ****  */
 260:requiredFiles/clksys_driver.c **** void CLKSYS_AutoCalibration_Enable( uint8_t clkSource, bool extReference )
 261:requiredFiles/clksys_driver.c **** {
 668               		.stabn	68,0,261,.LM26-.LFBB8
 669               	.LM26:
 670               	.LFBB8:
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
 262:requiredFiles/clksys_driver.c **** 	OSC.DFLLCTRL = ( OSC.DFLLCTRL & ~clkSource ) |
 675               		.stabn	68,0,262,.LM27-.LFBB8
 676               	.LM27:
 677 009e 3091 5600 		lds r19,86
 678 00a2 282F      		mov r18,r24
 679 00a4 982F      		mov r25,r24
 680 00a6 9095      		com r25
 681 00a8 9323      		and r25,r19
 682 00aa 6111      		cpse r22,__zero_reg__
 683 00ac 00C0      		rjmp .L11
 684 00ae 20E0      		ldi r18,0
 685               	.L11:
 686               		.stabn	68,0,262,.LM28-.LFBB8
 687               	.LM28:
 688 00b0 922B      		or r25,r18
 689 00b2 9093 5600 		sts 86,r25
 263:requiredFiles/clksys_driver.c **** 	               ( extReference ? clkSource : 0 );
 264:requiredFiles/clksys_driver.c **** 	if (clkSource == OSC_RC2MCREF_bm) {
 690               		.stabn	68,0,264,.LM29-.LFBB8
 691               	.LM29:
 692 00b6 8130      		cpi r24,lo8(1)
 693 00b8 01F4      		brne .L12
 265:requiredFiles/clksys_driver.c **** 		DFLLRC2M.CTRL |= DFLL_ENABLE_bm;
 694               		.stabn	68,0,265,.LM30-.LFBB8
 695               	.LM30:
 696 00ba 8091 6800 		lds r24,104
 697 00be 8160      		ori r24,lo8(1)
 698 00c0 8093 6800 		sts 104,r24
 699 00c4 0895      		ret
 700               	.L12:
 266:requiredFiles/clksys_driver.c **** 	} else if (clkSource == OSC_RC32MCREF_bm) {
 701               		.stabn	68,0,266,.LM31-.LFBB8
 702               	.LM31:
 703 00c6 8230      		cpi r24,lo8(2)
GAS LISTING /tmp/ccl4KbeX.s 			page 18


 704 00c8 01F4      		brne .L10
 267:requiredFiles/clksys_driver.c **** 		DFLLRC32M.CTRL |= DFLL_ENABLE_bm;
 705               		.stabn	68,0,267,.LM32-.LFBB8
 706               	.LM32:
 707 00ca 8091 6000 		lds r24,96
 708 00ce 8160      		ori r24,lo8(1)
 709 00d0 8093 6000 		sts 96,r24
 710               	.L10:
 711 00d4 0895      		ret
 712               		.size	CLKSYS_AutoCalibration_Enable, .-CLKSYS_AutoCalibration_Enable
 713               	.Lscope8:
 714               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 715               		.stabd	78,0,0
 716               		.stabs	"CLKSYS_XOSC_FailureDetection_Enable:F(0,15)",36,0,280,CLKSYS_XOSC_FailureDetection_Enable
 717               	.global	CLKSYS_XOSC_FailureDetection_Enable
 718               		.type	CLKSYS_XOSC_FailureDetection_Enable, @function
 719               	CLKSYS_XOSC_FailureDetection_Enable:
 720               		.stabd	46,0,0
 268:requiredFiles/clksys_driver.c **** 	}
 269:requiredFiles/clksys_driver.c **** }
 270:requiredFiles/clksys_driver.c **** 
 271:requiredFiles/clksys_driver.c **** 
 272:requiredFiles/clksys_driver.c **** /*! \brief This function enables the External Oscillator Failure Detection
 273:requiredFiles/clksys_driver.c ****  *         (XOSCFD) feature.
 274:requiredFiles/clksys_driver.c ****  *
 275:requiredFiles/clksys_driver.c ****  *  The feature will stay enabled until next reset. Note that the
 276:requiredFiles/clksys_driver.c ****  *  XOSCFD _will_ issue the XOSCF Non-maskable Interrupt (NMI) regardless of
 277:requiredFiles/clksys_driver.c ****  *  any interrupt priorities and settings. Therefore, make sure that a handler
 278:requiredFiles/clksys_driver.c ****  *  is implemented for the XOSCF NMI when you enable it.
 279:requiredFiles/clksys_driver.c ****  */
 280:requiredFiles/clksys_driver.c **** void CLKSYS_XOSC_FailureDetection_Enable( void )
 281:requiredFiles/clksys_driver.c **** {
 721               		.stabn	68,0,281,.LM33-.LFBB9
 722               	.LM33:
 723               	.LFBB9:
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 726               	/* stack size = 0 */
 727               	.L__stack_usage = 0
 282:requiredFiles/clksys_driver.c **** 	CCPWrite( &OSC.XOSCFAIL, ( OSC_XOSCFDIF_bm | OSC_XOSCFDEN_bm ) );
 728               		.stabn	68,0,282,.LM34-.LFBB9
 729               	.LM34:
 730 00d6 63E0      		ldi r22,lo8(3)
 731 00d8 83E5      		ldi r24,lo8(83)
 732 00da 90E0      		ldi r25,0
 733 00dc 0C94 0000 		jmp CCPWrite
 734               		.size	CLKSYS_XOSC_FailureDetection_Enable, .-CLKSYS_XOSC_FailureDetection_Enable
 735               	.Lscope9:
 736               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 737               		.stabd	78,0,0
 738               		.stabs	"CLKSYS_Configuration_Lock:F(0,15)",36,0,292,CLKSYS_Configuration_Lock
 739               	.global	CLKSYS_Configuration_Lock
 740               		.type	CLKSYS_Configuration_Lock, @function
 741               	CLKSYS_Configuration_Lock:
 742               		.stabd	46,0,0
 283:requiredFiles/clksys_driver.c **** }
 284:requiredFiles/clksys_driver.c **** 
GAS LISTING /tmp/ccl4KbeX.s 			page 19


 285:requiredFiles/clksys_driver.c **** 
 286:requiredFiles/clksys_driver.c **** /*! \brief This function lock the entire clock system configuration.
 287:requiredFiles/clksys_driver.c ****  *
 288:requiredFiles/clksys_driver.c ****  *  This will lock the configuration until the next reset, or until the
 289:requiredFiles/clksys_driver.c ****  *  External Oscillator Failure Detections (XOSCFD) feature detects a failure
 290:requiredFiles/clksys_driver.c ****  *  and switches to internal 2MHz RC oscillator.
 291:requiredFiles/clksys_driver.c ****  */
 292:requiredFiles/clksys_driver.c **** void CLKSYS_Configuration_Lock( void )
 293:requiredFiles/clksys_driver.c **** {
 743               		.stabn	68,0,293,.LM35-.LFBB10
 744               	.LM35:
 745               	.LFBB10:
 746               	/* prologue: function */
 747               	/* frame size = 0 */
 748               	/* stack size = 0 */
 749               	.L__stack_usage = 0
 294:requiredFiles/clksys_driver.c **** 	CCPWrite( &CLK.LOCK, CLK_LOCK_bm );
 750               		.stabn	68,0,294,.LM36-.LFBB10
 751               	.LM36:
 752 00e0 61E0      		ldi r22,lo8(1)
 753 00e2 82E4      		ldi r24,lo8(66)
 754 00e4 90E0      		ldi r25,0
 755 00e6 0C94 0000 		jmp CCPWrite
 756               		.size	CLKSYS_Configuration_Lock, .-CLKSYS_Configuration_Lock
 757               	.Lscope10:
 758               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 759               		.stabd	78,0,0
 760               		.stabs	"delay_ms:F(0,15)",36,0,29,delay_ms
 761               	.global	delay_ms
 762               		.type	delay_ms, @function
 763               	delay_ms:
 764               		.stabd	46,0,0
 765               		.stabs	"main.c",132,0,0,.Ltext2
 766               	.Ltext2:
   1:main.c        **** /* Blinky: an atxmega16a4 example
   2:main.c        ****  * Daniel J. Gonzalez July 2012
   3:main.c        ****  * dgonz@mit.edu
   4:main.c        ****  * yameb.blogspot.com
   5:main.c        ****  * 
   6:main.c        ****  * MCU: atxmega16a4u
   7:main.c        ****  * Board: TinyArmTroller REV2
   8:main.c        ****  * Setup: Button between C3 and GND, Resistor and LED between E0 and GND
   9:main.c        ****  * 
  10:main.c        ****  * The purpose of this program has been to learn how to do the following:
  11:main.c        ****  * -Set the CPU Speed to 32MHz
  12:main.c        ****  * -Implement robust delay
  13:main.c        ****  * -Implement outputs and set outputs to HIGH and LOW
  14:main.c        ****  * -Implement inputs and detect of an input pin is driven LOW
  15:main.c        ****  * 
  16:main.c        ****  * Specifically, this program blinks an LED on port E0 in a certain pattern 
  17:main.c        ****  * if a button between port C3 and GND is pressed. 
  18:main.c        ****  */
  19:main.c        **** 
  20:main.c        **** #define F_CPU 	32000000UL //32 MHz Internal Oscillator
  21:main.c        **** 
  22:main.c        **** #include <avr/io.h>
  23:main.c        **** #include <util/delay.h>
GAS LISTING /tmp/ccl4KbeX.s 			page 20


  24:main.c        **** #include "requiredFiles/avr_compiler.h"
  25:main.c        **** #include "requiredFiles/clksys_driver.h"
  26:main.c        **** #include "requiredFiles/clksys_driver.c"
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** void delay_ms(int ms) //My own Delay function, because the built-in _delay_ms() can delay for only 
  30:main.c        **** { 
 767               		.stabn	68,0,30,.LM37-.LFBB11
 768               	.LM37:
 769               	.LFBB11:
 770               	/* prologue: function */
 771               	/* frame size = 0 */
 772               	/* stack size = 0 */
 773               	.L__stack_usage = 0
 774 00ea 9C01      		movw r18,r24
  31:main.c        ****     while (ms--) 
 775               		.stabn	68,0,31,.LM38-.LFBB11
 776               	.LM38:
 777 00ec 00C0      		rjmp .L17
 778               	.L18:
 779               	.LBB6:
 780               	.LBB7:
 781               		.stabs	"/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h",132,0,0,.Ltext3
 782               	.Ltext3:
   1:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
GAS LISTING /tmp/ccl4KbeX.s 			page 21


  34:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
GAS LISTING /tmp/ccl4KbeX.s 			page 22


  91:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
GAS LISTING /tmp/ccl4KbeX.s 			page 23


 148:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 165:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 166:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #else
 167:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	{
 172:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		{
 176:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 			__ticks --;
 179:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		}
 180:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		return;
 181:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	}
 182:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	else
 183:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #endif
 186:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** }
 187:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 188:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** /**
 189:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 191:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 193:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 196:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 198:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 202:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
GAS LISTING /tmp/ccl4KbeX.s 			page 24


 205:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   
 207:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 211:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****  
 214:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 222:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****  */
 223:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** void
 224:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** {
 226:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 227:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	double __tmp ; 
 228:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 229:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 230:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 231:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 234:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 235:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 236:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 237:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 238:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 239:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 240:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 241:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#else
 242:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		//round up by default
 243:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 244:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	#endif
 245:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 
 246:/usr/lib/gcc/avr/4.7.0/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 783               		.stabn	68,0,246,.LM39-.LFBB11
 784               	.LM39:
 785 00ee 8FE3      		ldi r24,lo8(7999)
 786 00f0 9FE1      		ldi r25,hi8(7999)
 787 00f2 0197      		1: sbiw r24,1
 788 00f4 01F4      		brne 1b
 789 00f6 00C0      		rjmp .
 790 00f8 0000      		nop
 791 00fa 2150      		subi r18,1
 792 00fc 3109      		sbc r19,__zero_reg__
 793               	.L17:
 794               	.LBE7:
 795               	.LBE6:
 796               		.stabs	"main.c",132,0,0,.Ltext4
 797               	.Ltext4:
GAS LISTING /tmp/ccl4KbeX.s 			page 25


 798               		.stabn	68,0,31,.LM40-.LFBB11
 799               	.LM40:
 800 00fe 2115      		cp r18,__zero_reg__
 801 0100 3105      		cpc r19,__zero_reg__
 802 0102 01F4      		brne .L18
 803               	/* epilogue start */
  32:main.c        ****         _delay_us(1000);  
  33:main.c        **** } 
 804               		.stabn	68,0,33,.LM41-.LFBB11
 805               	.LM41:
 806 0104 0895      		ret
 807               		.size	delay_ms, .-delay_ms
 808               	.Lscope11:
 809               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 810               		.stabd	78,0,0
 811               		.stabs	"Config32MHzClock:F(0,15)",36,0,35,Config32MHzClock
 812               	.global	Config32MHzClock
 813               		.type	Config32MHzClock, @function
 814               	Config32MHzClock:
 815               		.stabd	46,0,0
  34:main.c        **** 
  35:main.c        **** void Config32MHzClock(void) //Set Clock Speed to 32MHz (XMega Only)
  36:main.c        **** { 
 816               		.stabn	68,0,36,.LM42-.LFBB12
 817               	.LM42:
 818               	.LFBB12:
 819               	/* prologue: function */
 820               	/* frame size = 0 */
 821               	/* stack size = 0 */
 822               	.L__stack_usage = 0
  37:main.c        **** 	CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 823               		.stabn	68,0,37,.LM43-.LFBB12
 824               	.LM43:
 825 0106 88ED      		ldi r24,lo8(-40)
 826 0108 84BF      		out __CCP__,r24
  38:main.c        **** 	// initialize clock source to be 32MHz internal oscillator (no PLL) 
  39:main.c        **** 	OSC.CTRL = OSC_RC32MEN_bm; // enable internal 32MHz oscillator 
 827               		.stabn	68,0,39,.LM44-.LFBB12
 828               	.LM44:
 829 010a 82E0      		ldi r24,lo8(2)
 830 010c 8093 5000 		sts 80,r24
 831               	.L20:
  40:main.c        **** 	while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator ready 
 832               		.stabn	68,0,40,.LM45-.LFBB12
 833               	.LM45:
 834 0110 8091 5100 		lds r24,81
 835 0114 81FF      		sbrs r24,1
 836 0116 00C0      		rjmp .L20
  41:main.c        **** 	CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 837               		.stabn	68,0,41,.LM46-.LFBB12
 838               	.LM46:
 839 0118 88ED      		ldi r24,lo8(-40)
 840 011a 84BF      		out __CCP__,r24
  42:main.c        **** 	CLK.CTRL = 0x01; //select sysclock 32MHz osc 
 841               		.stabn	68,0,42,.LM47-.LFBB12
 842               	.LM47:
 843 011c 81E0      		ldi r24,lo8(1)
GAS LISTING /tmp/ccl4KbeX.s 			page 26


 844 011e 8093 4000 		sts 64,r24
 845 0122 0895      		ret
 846               		.size	Config32MHzClock, .-Config32MHzClock
 847               	.Lscope12:
 848               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 849               		.stabd	78,0,0
 850               		.stabs	"blink:F(0,15)",36,0,45,blink
 851               		.stabs	"myVal:P(0,1)",64,0,45,16
 852               	.global	blink
 853               		.type	blink, @function
 854               	blink:
 855               		.stabd	46,0,0
  43:main.c        **** }
  44:main.c        **** 
  45:main.c        **** void blink(int myVal){
 856               		.stabn	68,0,45,.LM48-.LFBB13
 857               	.LM48:
 858               	.LFBB13:
 859 0124 FF92      		push r15
 860 0126 0F93      		push r16
 861 0128 1F93      		push r17
 862 012a CF93      		push r28
 863 012c DF93      		push r29
 864               	/* prologue: function */
 865               	/* frame size = 0 */
 866               	/* stack size = 5 */
 867               	.L__stack_usage = 5
 868 012e 8C01      		movw r16,r24
  46:main.c        **** 		PORTE.OUTSET = _BV(0);
 869               		.stabn	68,0,46,.LM49-.LFBB13
 870               	.LM49:
 871 0130 C0E8      		ldi r28,lo8(-128)
 872 0132 D6E0      		ldi r29,lo8(6)
 873 0134 FF24      		clr r15
 874 0136 F394      		inc r15
 875 0138 FD82      		std Y+5,r15
  47:main.c        ****         delay_ms(myVal);
 876               		.stabn	68,0,47,.LM50-.LFBB13
 877               	.LM50:
 878 013a 0E94 0000 		call delay_ms
  48:main.c        ****         PORTE.OUTCLR = _BV(0);
 879               		.stabn	68,0,48,.LM51-.LFBB13
 880               	.LM51:
 881 013e FE82      		std Y+6,r15
  49:main.c        ****         delay_ms(myVal);
 882               		.stabn	68,0,49,.LM52-.LFBB13
 883               	.LM52:
 884 0140 C801      		movw r24,r16
 885               	/* epilogue start */
  50:main.c        **** }
 886               		.stabn	68,0,50,.LM53-.LFBB13
 887               	.LM53:
 888 0142 DF91      		pop r29
 889 0144 CF91      		pop r28
 890 0146 1F91      		pop r17
 891 0148 0F91      		pop r16
 892 014a FF90      		pop r15
GAS LISTING /tmp/ccl4KbeX.s 			page 27


  49:main.c        ****         delay_ms(myVal);
 893               		.stabn	68,0,49,.LM54-.LFBB13
 894               	.LM54:
 895 014c 0C94 0000 		jmp delay_ms
 896               		.size	blink, .-blink
 897               	.Lscope13:
 898               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 899               		.stabd	78,0,0
 900               		.stabs	"blinkQuick:F(0,15)",36,0,52,blinkQuick
 901               	.global	blinkQuick
 902               		.type	blinkQuick, @function
 903               	blinkQuick:
 904               		.stabd	46,0,0
  51:main.c        **** 
  52:main.c        **** void blinkQuick(void){
 905               		.stabn	68,0,52,.LM55-.LFBB14
 906               	.LM55:
 907               	.LFBB14:
 908               	/* prologue: function */
 909               	/* frame size = 0 */
 910               	/* stack size = 0 */
 911               	.L__stack_usage = 0
  53:main.c        **** 	blink(500);
 912               		.stabn	68,0,53,.LM56-.LFBB14
 913               	.LM56:
 914 0150 84EF      		ldi r24,lo8(-12)
 915 0152 91E0      		ldi r25,lo8(1)
 916 0154 0C94 0000 		jmp blink
 917               		.size	blinkQuick, .-blinkQuick
 918               	.Lscope14:
 919               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 920               		.stabd	78,0,0
 921               		.stabs	"blinkTen:F(0,15)",36,0,56,blinkTen
 922               	.global	blinkTen
 923               		.type	blinkTen, @function
 924               	blinkTen:
 925               		.stabd	46,0,0
  54:main.c        **** }
  55:main.c        **** 
  56:main.c        **** void blinkTen(void){
 926               		.stabn	68,0,56,.LM57-.LFBB15
 927               	.LM57:
 928               	.LFBB15:
 929 0158 CF93      		push r28
 930 015a DF93      		push r29
 931               	/* prologue: function */
 932               	/* frame size = 0 */
 933               	/* stack size = 2 */
 934               	.L__stack_usage = 2
 935               		.stabn	68,0,56,.LM58-.LFBB15
 936               	.LM58:
 937 015c CAE0      		ldi r28,lo8(10)
 938 015e D0E0      		ldi r29,0
 939               	.L28:
  57:main.c        **** 	int i;
  58:main.c        **** 	for (i=0;i<10;i++){
  59:main.c        **** 		blink(50);
GAS LISTING /tmp/ccl4KbeX.s 			page 28


 940               		.stabn	68,0,59,.LM59-.LFBB15
 941               	.LM59:
 942 0160 82E3      		ldi r24,lo8(50)
 943 0162 90E0      		ldi r25,0
 944 0164 0E94 0000 		call blink
 945 0168 2197      		sbiw r28,1
  58:main.c        **** 	for (i=0;i<10;i++){
 946               		.stabn	68,0,58,.LM60-.LFBB15
 947               	.LM60:
 948 016a 01F4      		brne .L28
 949               	/* epilogue start */
  60:main.c        **** 	}
  61:main.c        **** }
 950               		.stabn	68,0,61,.LM61-.LFBB15
 951               	.LM61:
 952 016c DF91      		pop r29
 953 016e CF91      		pop r28
 954 0170 0895      		ret
 955               		.size	blinkTen, .-blinkTen
 956               	.Lscope15:
 957               		.stabs	"",36,0,0,.Lscope15-.LFBB15
 958               		.stabd	78,0,0
 959               		.stabs	"mainLoop:F(0,15)",36,0,63,mainLoop
 960               	.global	mainLoop
 961               		.type	mainLoop, @function
 962               	mainLoop:
 963               		.stabd	46,0,0
  62:main.c        **** 
  63:main.c        **** void mainLoop(void){
 964               		.stabn	68,0,63,.LM62-.LFBB16
 965               	.LM62:
 966               	.LFBB16:
 967               	/* prologue: function */
 968               	/* frame size = 0 */
 969               	/* stack size = 0 */
 970               	.L__stack_usage = 0
 971               	.L31:
  64:main.c        **** 		while(1){
  65:main.c        **** 			//if(!(PORTD.IN & _BV(4))) //if pin C3 goes LOW
  66:main.c        **** 				blinkQuick();
 972               		.stabn	68,0,66,.LM63-.LFBB16
 973               	.LM63:
 974 0172 0E94 0000 		call blinkQuick
 975 0176 00C0      		rjmp .L31
 976               		.size	mainLoop, .-mainLoop
 977               	.Lscope16:
 978               		.stabs	"",36,0,0,.Lscope16-.LFBB16
 979               		.stabd	78,0,0
 980               		.stabs	"init:F(0,15)",36,0,74,init
 981               	.global	init
 982               		.type	init, @function
 983               	init:
 984               		.stabd	46,0,0
  67:main.c        **** 		}
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** /* See Atmel doc8050.pdf : AVR1313: Using the XMEGA IO Pins and External Interrupts
GAS LISTING /tmp/ccl4KbeX.s 			page 29


  71:main.c        ****  * 
  72:main.c        ****  * 
  73:main.c        ****  */
  74:main.c        **** void init(void){
 985               		.stabn	68,0,74,.LM64-.LFBB17
 986               	.LM64:
 987               	.LFBB17:
 988               	/* prologue: function */
 989               	/* frame size = 0 */
 990               	/* stack size = 0 */
 991               	.L__stack_usage = 0
  75:main.c        **** 		Config32MHzClock(); //Set Clock Speed to 32MHz	
 992               		.stabn	68,0,75,.LM65-.LFBB17
 993               	.LM65:
 994 0178 0E94 0000 		call Config32MHzClock
  76:main.c        **** 		PORTD.PIN4CTRL = PORT_OPC_PULLUP_gc; //Set pin D4 as INPUT and as a pullup (Detect when pulled LO
 995               		.stabn	68,0,76,.LM66-.LFBB17
 996               	.LM66:
 997 017c 88E1      		ldi r24,lo8(24)
 998 017e E0E6      		ldi r30,lo8(96)
 999 0180 F6E0      		ldi r31,lo8(6)
 1000 0182 848B      		std Z+20,r24
  77:main.c        **** 		PORTE.DIRSET |= _BV(0); //Set pin E0 as OUTPUT
 1001               		.stabn	68,0,77,.LM67-.LFBB17
 1002               	.LM67:
 1003 0184 E0E8      		ldi r30,lo8(-128)
 1004 0186 F6E0      		ldi r31,lo8(6)
 1005 0188 8181      		ldd r24,Z+1
 1006 018a 8160      		ori r24,lo8(1)
 1007 018c 8183      		std Z+1,r24
 1008 018e 0895      		ret
 1009               		.size	init, .-init
 1010               	.Lscope17:
 1011               		.stabs	"",36,0,0,.Lscope17-.LFBB17
 1012               		.stabd	78,0,0
 1013               		.section	.text.startup,"ax",@progbits
 1014               		.stabs	"main:F(0,1)",36,0,81,main
 1015               	.global	main
 1016               		.type	main, @function
 1017               	main:
 1018               		.stabd	46,0,0
  78:main.c        **** 		
  79:main.c        **** }
  80:main.c        **** 
  81:main.c        **** int main (void)
  82:main.c        **** {
 1019               		.stabn	68,0,82,.LM68-.LFBB18
 1020               	.LM68:
 1021               	.LFBB18:
 1022               	/* prologue: function */
 1023               	/* frame size = 0 */
 1024               	/* stack size = 0 */
 1025               	.L__stack_usage = 0
  83:main.c        **** 	init();	
 1026               		.stabn	68,0,83,.LM69-.LFBB18
 1027               	.LM69:
 1028 0000 0E94 0000 		call init
GAS LISTING /tmp/ccl4KbeX.s 			page 30


  84:main.c        **** 	delay_ms(1000);
 1029               		.stabn	68,0,84,.LM70-.LFBB18
 1030               	.LM70:
 1031 0004 88EE      		ldi r24,lo8(-24)
 1032 0006 93E0      		ldi r25,lo8(3)
 1033 0008 0E94 0000 		call delay_ms
 1034               	.L34:
 1035               	.LBB8:
 1036               	.LBB9:
  66:main.c        **** 				blinkQuick();
 1037               		.stabn	68,0,66,.LM71-.LFBB18
 1038               	.LM71:
 1039 000c 0E94 0000 		call blinkQuick
 1040 0010 00C0      		rjmp .L34
 1041               	.LBE9:
 1042               	.LBE8:
 1043               		.size	main, .-main
 1044               	.Lscope18:
 1045               		.stabs	"",36,0,0,.Lscope18-.LFBB18
 1046               		.stabd	78,0,0
 1047               		.text
 1048               		.stabs	"",100,0,0,.Letext0
 1049               	.Letext0:
 1050               		.ident	"GCC: (GNU) 4.7.0"
GAS LISTING /tmp/ccl4KbeX.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccl4KbeX.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccl4KbeX.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccl4KbeX.s:4      *ABS*:0000003f __SREG__
     /tmp/ccl4KbeX.s:5      *ABS*:00000034 __CCP__
     /tmp/ccl4KbeX.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccl4KbeX.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccl4KbeX.s:410    .text:00000000 CCPWrite
     /tmp/ccl4KbeX.s:475    .text:0000002a CLKSYS_XOSC_Config
     /tmp/ccl4KbeX.s:508    .text:0000003e CLKSYS_PLL_Config
     /tmp/ccl4KbeX.s:535    .text:0000004a CLKSYS_Disable
     /tmp/ccl4KbeX.s:569    .text:0000005e CLKSYS_Prescalers_Config
     /tmp/ccl4KbeX.s:594    .text:00000068 CLKSYS_Main_ClockSource_Select
     /tmp/ccl4KbeX.s:638    .text:0000008e CLKSYS_RTC_ClockSource_Enable
     /tmp/ccl4KbeX.s:666    .text:0000009e CLKSYS_AutoCalibration_Enable
     /tmp/ccl4KbeX.s:719    .text:000000d6 CLKSYS_XOSC_FailureDetection_Enable
     /tmp/ccl4KbeX.s:741    .text:000000e0 CLKSYS_Configuration_Lock
     /tmp/ccl4KbeX.s:763    .text:000000ea delay_ms
     /tmp/ccl4KbeX.s:814    .text:00000106 Config32MHzClock
     /tmp/ccl4KbeX.s:854    .text:00000124 blink
     /tmp/ccl4KbeX.s:903    .text:00000150 blinkQuick
     /tmp/ccl4KbeX.s:924    .text:00000158 blinkTen
     /tmp/ccl4KbeX.s:962    .text:00000172 mainLoop
     /tmp/ccl4KbeX.s:983    .text:00000178 init
     /tmp/ccl4KbeX.s:1017   .text.startup:00000000 main

NO UNDEFINED SYMBOLS
