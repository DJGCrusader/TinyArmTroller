   1               		.file	"usbExample.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.Endpoint_SelectEndpoint,"ax",@progbits
  15               	Endpoint_SelectEndpoint:
  16               	.LFB23:
  17               		.file 1 "./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h"
   1:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /*
   2:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****              LUFA Library
   3:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****      Copyright (C) Dean Camera, 2012.
   4:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
   5:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****            www.lufa-lib.org
   7:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** */
   8:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
   9:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /*
  10:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  12:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software without specific, written prior permission.
  20:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  21:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   The author disclaim all warranties with regard to this
  22:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   this software.
  29:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** */
  30:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  31:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \file
  32:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief USB Endpoint definitions for the AVR XMEGA microcontrollers.
  33:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \copydetails Group_EndpointManagement_XMEGA
  34:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  35:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  38:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  39:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointRW
  40:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointRW_XMEGA Endpoint Data Reading and Writing (XMEGA)
  41:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR XMEGA architecture.
  42:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  43:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  45:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  46:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointPrimitiveRW_XMEGA Read/Write of Primitive Data Types (XMEGA)
  48:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR XMEGA architecture.
  49:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  50:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  from and to endpoints.
  52:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  53:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  54:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointPacketManagement
  55:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointPacketManagement_XMEGA Endpoint Packet Management (XMEGA)
  56:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR XMEGA architecture.
  57:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  58:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  60:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  61:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointManagement
  62:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointManagement_XMEGA Endpoint Management (XMEGA)
  63:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint management definitions for the Atmel AVR XMEGA architecture.
  64:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  65:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  send/receive functions for various data types.
  68:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  69:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  @{
  70:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  71:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  72:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** #ifndef __ENDPOINT_XMEGA_H__
  73:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** #define __ENDPOINT_XMEGA_H__
  74:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  75:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Includes: */
  76:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../../../../Common/Common.h"
  77:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBTask.h"
  78:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBInterrupt.h"
  79:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBController.h"
  80:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  81:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Enable C linkage for C++ Compilers: */
  82:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#if defined(__cplusplus)
  83:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern "C" {
  84:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#endif
  85:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  86:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Preprocessor Checks: */
  87:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  88:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  89:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#endif
  90:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  91:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Public Interface - May be used in end-application: */
  92:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Macros: */
  93:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#if (!defined(MAX_ENDPOINT_INDEX) && !defined(CONTROL_ONLY_DEVICE)) || defined(__DOXYGEN__)
  94:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
  95:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
  96:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
  97:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 */
  98:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            16
  99:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#else
 100:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#if defined(CONTROL_ONLY_DEVICE)
 101:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        1
 102:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#else
 103:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        (MAX_ENDPOINT_INDEX + 1)
 104:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#endif
 105:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#endif
 106:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 107:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Private Interface - For use in library only: */
 108:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	#if !defined(__DOXYGEN__)
 109:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Type Defines: */
 110:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			typedef struct
 111:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 112:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Data[64];
 113:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 114:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Length;
 115:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Position;
 116:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			} Endpoint_FIFO_t;
 117:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 118:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			typedef struct
 119:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 120:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_FIFO_t OUT;
 121:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_FIFO_t IN;
 122:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			} Endpoint_FIFOPair_t;
 123:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 124:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* External Variables: */
 125:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern Endpoint_FIFOPair_t       USB_Endpoint_FIFOs[ENDPOINT_TOTAL_ENDPOINTS];
 126:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile uint8_t          USB_Endpoint_SelectedEndpoint;
 127:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile USB_EP_t*        USB_Endpoint_SelectedHandle;
 128:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile Endpoint_FIFO_t* USB_Endpoint_SelectedFIFO;
 129:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 130:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Inline Functions: */
 131:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 132:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 133:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 134:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 135:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t  MaskVal    = 0;
 136:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint16_t CheckBytes = 8;
 137:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 138:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				while (CheckBytes < Bytes)
 139:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 140:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					MaskVal++;
 141:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					CheckBytes <<= 1;
 142:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 143:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 144:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (MaskVal << USB_EP_BUFSIZE_gp);
 145:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 146:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 147:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Function Prototypes: */
 148:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			bool Endpoint_ConfigureEndpoint_PRV(const uint8_t Address,
 149:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                    const uint8_t Config,
 150:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                    const uint8_t Size);
 151:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			void Endpoint_ClearEndpoints(void);
 152:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	#endif
 153:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 154:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Public Interface - May be used in end-application: */
 155:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Macros: */
 156:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 157:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 158:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 159:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 */
 160:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 161:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#endif
 162:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 163:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Enums: */
 164:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 165:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 166:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointRW_XMEGA
 167:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 168:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 169:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 170:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 171:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 172:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   transfer by the host or device.
 173:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 174:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 175:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   waiting for the endpoint to become ready.
 176:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 177:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 178:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   no USB endpoint traffic can occur until th
 179:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   has resumed.
 180:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 181:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 182:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   within the software timeout period set by 
 183:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 184:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 185:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			};
 186:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 187:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Inline Functions: */
 188:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Selects the given endpoint address.
 189:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 190:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 191:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  the currently selected endpoint.
 192:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 193:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address  Endpoint address to select.
 194:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 195:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address);
 196:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 197:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
  18               		.loc 1 197 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
 198:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t EndpointNumber = (Address & ENDPOINT_EPNUM_MASK);
  25               		.loc 1 198 0
  26 0000 282F      		mov r18,r24
  27 0002 2F70      		andi r18,lo8(15)
  28               	.LVL1:
 199:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 200:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedEndpoint = Address;
  29               		.loc 1 200 0
  30 0004 8093 0000 		sts USB_Endpoint_SelectedEndpoint,r24
  31 0008 30E0      		ldi r19,lo8(0)
 201:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 202:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
 203:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 204:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO   = &USB_Endpoint_FIFOs[EndpointNumber].IN;
  32               		.loc 1 204 0
  33 000a 44E8      		ldi r20,lo8(132)
  34 000c 50E0      		ldi r21,hi8(132)
 202:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
  35               		.loc 1 202 0
  36 000e 87FF      		sbrs r24,7
  37 0010 00C0      		rjmp .L2
  38               		.loc 1 204 0
  39 0012 249F      		mul r18,r20
  40 0014 C001      		movw r24,r0
  41 0016 259F      		mul r18,r21
  42 0018 900D      		add r25,r0
  43 001a 349F      		mul r19,r20
  44 001c 900D      		add r25,r0
  45 001e 1124      		clr r1
  46               	.LVL2:
  47 0020 8050      		subi r24,lo8(-(USB_Endpoint_FIFOs+66))
  48 0022 9040      		sbci r25,hi8(-(USB_Endpoint_FIFOs+66))
  49 0024 8093 0000 		sts USB_Endpoint_SelectedFIFO,r24
  50 0028 9093 0000 		sts USB_Endpoint_SelectedFIFO+1,r25
 205:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle = &((USB_EndpointTable_t*)USB.EPPTR)->Endpoints[EndpointNumber].IN
  51               		.loc 1 205 0
  52 002c 8091 C604 		lds r24,1222
  53 0030 9091 C704 		lds r25,1222+1
  54 0034 74E0      		ldi r23,4
  55 0036 220F      	1:	lsl r18
  56 0038 331F      		rol r19
  57 003a 7A95      		dec r23
  58 003c 01F4      		brne 1b
  59               	.LVL3:
  60 003e 285F      		subi r18,lo8(-(8))
  61 0040 3F4F      		sbci r19,hi8(-(8))
  62 0042 00C0      		rjmp .L4
  63               	.LVL4:
  64               	.L2:
 206:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 207:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 208:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 209:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO   = &USB_Endpoint_FIFOs[EndpointNumber].OUT;
  65               		.loc 1 209 0
  66 0044 249F      		mul r18,r20
  67 0046 C001      		movw r24,r0
  68 0048 259F      		mul r18,r21
  69 004a 900D      		add r25,r0
  70 004c 349F      		mul r19,r20
  71 004e 900D      		add r25,r0
  72 0050 1124      		clr r1
  73 0052 8050      		subi r24,lo8(-(USB_Endpoint_FIFOs))
  74 0054 9040      		sbci r25,hi8(-(USB_Endpoint_FIFOs))
  75 0056 8093 0000 		sts USB_Endpoint_SelectedFIFO,r24
  76 005a 9093 0000 		sts USB_Endpoint_SelectedFIFO+1,r25
 210:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle = &((USB_EndpointTable_t*)USB.EPPTR)->Endpoints[EndpointNumber].OU
  77               		.loc 1 210 0
  78 005e 8091 C604 		lds r24,1222
  79 0062 9091 C704 		lds r25,1222+1
  80 0066 64E0      		ldi r22,4
  81 0068 220F      	1:	lsl r18
  82 006a 331F      		rol r19
  83 006c 6A95      		dec r22
  84 006e 01F4      		brne 1b
  85               	.LVL5:
  86               	.L4:
  87 0070 820F      		add r24,r18
  88 0072 931F      		adc r25,r19
  89 0074 8093 0000 		sts USB_Endpoint_SelectedHandle,r24
  90 0078 9093 0000 		sts USB_Endpoint_SelectedHandle+1,r25
  91 007c 0895      		ret
  92               		.cfi_endproc
  93               	.LFE23:
  95               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
  96               	.global	EVENT_USB_Device_Connect
  98               	EVENT_USB_Device_Connect:
  99               	.LFB93:
 100               		.file 2 "usbExample.c"
   1:usbExample.c  **** /* TinyArmTroller V-USB Example
   2:usbExample.c  ****  * 
   3:usbExample.c  ****  * Trying to use LUFA v120730:
   4:usbExample.c  ****  *  - Endpoint 0 
   5:usbExample.c  ****  *  - - Device Enumeration (Automatic by LUFA)
   6:usbExample.c  ****  *  - Control Transfer
   7:usbExample.c  ****  *  - - Setup Transaction:
   8:usbExample.c  ****  *  - - 1. SETUP Token from Host
   9:usbExample.c  ****  *  - - - - EVENT_USB_Device_Control_Request() called
  10:usbExample.c  ****  *  - - - - calling Endpoint_ClearSETUP() allows user to process packet
  11:usbExample.c  ****  *  - - 2. Setup Data (details about control request) from Host
  12:usbExample.c  ****  *  - - 3. ACK (handshake) from Device (automatic)
  13:usbExample.c  ****  *  - - Data Transaction: 
  14:usbExample.c  ****  *  - - - OUT (From Host to Device)
  15:usbExample.c  ****  *  - - - 1. OUT
  16:usbExample.c  ****  *  - - - 2. Data x
  17:usbExample.c  ****  *  - - - - - Endpoint_Read_xx(...)
  18:usbExample.c  ****  *  - - - 3. ACK sent by device
  19:usbExample.c  ****  *  - - - - - Endpoint_ClearOUT(); called by user
  20:usbExample.c  ****  *  - - - IN (From Device to Host)
  21:usbExample.c  ****  *  - - - 1. IN
  22:usbExample.c  ****  *  - - - 2. Data x
  23:usbExample.c  ****  *  - - - - - Endpoint-Write_xx(...)
  24:usbExample.c  ****  *  - - - - - - Data x, STALL, NAK
  25:usbExample.c  ****  *  - - - 3. ACK sent by Host
  26:usbExample.c  ****  *  - - Status Transaction:
  27:usbExample.c  ****  *  - - - 1. IN if it sent data / OUT if it received data
  28:usbExample.c  ****  *  - - - 2. Data 0 (empty) by Device/ Data0 Empty by Host
  29:usbExample.c  ****  *  - - - - - Endpoint_ClearIN(); called to receive handshake
  30:usbExample.c  ****  *  - - - 3. ACK by Host / ACK by Device
  31:usbExample.c  ****  *  - - - - - Endpoint_ClearOUT(); called to meet handshake
  32:usbExample.c  ****  *  - - - Note: Endpoint_ClearStatusStage() calls clearOUT or IN depending on the situation
  33:usbExample.c  ****  *  - Example: 
  34:usbExample.c  ****  *  - - USB_Task() called periodically
  35:usbExample.c  ****  *  - - USB control requests (bRequest) must be defined as constants
  36:usbExample.c  ****  *  - - bmRequestType can be indicated
  37:usbExample.c  ****  */
  38:usbExample.c  ****  
  39:usbExample.c  **** #include "usbExample.h"
  40:usbExample.c  **** 
  41:usbExample.c  **** //Desired operation in bRequest field of USB Setup data.
  42:usbExample.c  **** #define SET_GOAL 0
  43:usbExample.c  **** #define SET_STOP 1 
  44:usbExample.c  **** #define GET_STATUS 2
  45:usbExample.c  **** #define GET_POSE 3
  46:usbExample.c  **** 
  47:usbExample.c  **** volatile unsigned long elapsedMillis = 0;
  48:usbExample.c  **** 
  49:usbExample.c  **** /** LUFA CDC Class driver interface configuration and state information. This structure is
  50:usbExample.c  ****  *  passed to all CDC Class driver functions, so that multiple instances of the same class
  51:usbExample.c  ****  *  within a device can be differentiated from one another.
  52:usbExample.c  ****  */
  53:usbExample.c  **** USB_ClassInfo_CDC_Device_t VirtualSerial_CDC_Interface =
  54:usbExample.c  **** 	{
  55:usbExample.c  **** 		.Config =
  56:usbExample.c  **** 			{
  57:usbExample.c  **** 				.ControlInterfaceNumber   = 0,
  58:usbExample.c  **** 				.DataINEndpoint           =
  59:usbExample.c  **** 					{
  60:usbExample.c  **** 						.Address          = CDC_TX_EPADDR,
  61:usbExample.c  **** 						.Size             = CDC_TXRX_EPSIZE,
  62:usbExample.c  **** 						.Banks            = 1,
  63:usbExample.c  **** 					},
  64:usbExample.c  **** 				.DataOUTEndpoint =
  65:usbExample.c  **** 					{
  66:usbExample.c  **** 						.Address          = CDC_RX_EPADDR,
  67:usbExample.c  **** 						.Size             = CDC_TXRX_EPSIZE,
  68:usbExample.c  **** 						.Banks            = 1,
  69:usbExample.c  **** 					},
  70:usbExample.c  **** 				.NotificationEndpoint =
  71:usbExample.c  **** 					{
  72:usbExample.c  **** 						.Address          = CDC_NOTIFICATION_EPADDR,
  73:usbExample.c  **** 						.Size             = CDC_NOTIFICATION_EPSIZE,
  74:usbExample.c  **** 						.Banks            = 1,
  75:usbExample.c  **** 					},
  76:usbExample.c  **** 			},
  77:usbExample.c  **** 	};
  78:usbExample.c  **** 
  79:usbExample.c  **** /** Standard file stream for the CDC interface when set up, so that the virtual CDC COM port can be
  80:usbExample.c  ****  *  used like any regular character stream in the C APIs
  81:usbExample.c  ****  */
  82:usbExample.c  **** static FILE USBSerialStream;
  83:usbExample.c  **** 
  84:usbExample.c  **** 
  85:usbExample.c  **** /** Event handler for the library USB Connection event. */
  86:usbExample.c  **** void EVENT_USB_Device_Connect(void)
  87:usbExample.c  **** {
 101               		.loc 2 87 0
 102               		.cfi_startproc
 103               	/* prologue: function */
 104               	/* frame size = 0 */
 105               	/* stack size = 0 */
 106               	.L__stack_usage = 0
 107               	/* epilogue start */
  88:usbExample.c  **** 	/*
  89:usbExample.c  **** 	int i;
  90:usbExample.c  **** 	for (i = 0; i < 10; i++){
  91:usbExample.c  **** 		blink(50);
  92:usbExample.c  **** 	}
  93:usbExample.c  **** 	*/
  94:usbExample.c  **** 
  95:usbExample.c  **** }
 108               		.loc 2 95 0
 109 0000 0895      		ret
 110               		.cfi_endproc
 111               	.LFE93:
 113               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 114               	.global	EVENT_USB_Device_Disconnect
 116               	EVENT_USB_Device_Disconnect:
 117               	.LFB94:
  96:usbExample.c  **** 
  97:usbExample.c  **** /** Event handler for the library USB Disconnection event. */
  98:usbExample.c  **** void EVENT_USB_Device_Disconnect(void)
  99:usbExample.c  **** {
 118               		.loc 2 99 0
 119               		.cfi_startproc
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 0 */
 123               	.L__stack_usage = 0
 124               	/* epilogue start */
 100:usbExample.c  **** 	/*
 101:usbExample.c  **** 	blink(500);
 102:usbExample.c  **** 	blink(500);
 103:usbExample.c  **** 	*/
 104:usbExample.c  **** }
 125               		.loc 2 104 0
 126 0000 0895      		ret
 127               		.cfi_endproc
 128               	.LFE94:
 130               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 131               	.global	EVENT_USB_Device_ControlRequest
 133               	EVENT_USB_Device_ControlRequest:
 134               	.LFB96:
 105:usbExample.c  **** 
 106:usbExample.c  **** /** Event handler for the library USB Configuration Changed event. */
 107:usbExample.c  **** void EVENT_USB_Device_ConfigurationChanged(void)
 108:usbExample.c  **** {
 109:usbExample.c  **** 	bool ConfigSuccess = true;
 110:usbExample.c  **** 	blink(50);
 111:usbExample.c  **** 	ConfigSuccess &= CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
 112:usbExample.c  **** 	
 113:usbExample.c  **** }
 114:usbExample.c  **** 
 115:usbExample.c  **** /** Event handler for the library USB Control Request reception event. */
 116:usbExample.c  **** void EVENT_USB_Device_ControlRequest(void)
 117:usbExample.c  **** {
 135               		.loc 2 117 0
 136               		.cfi_startproc
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 0 */
 140               	.L__stack_usage = 0
 118:usbExample.c  **** 	//blink(5000);
 119:usbExample.c  **** 	CDC_Device_ProcessControlRequest(&VirtualSerial_CDC_Interface);
 141               		.loc 2 119 0
 142 0000 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 143 0002 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 144 0004 0E94 0000 		call CDC_Device_ProcessControlRequest
 145               	/* epilogue start */
 120:usbExample.c  **** 	/*
 121:usbExample.c  **** 	if(((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_TYPE) == REQTYPE_CLASS) &&
 122:usbExample.c  **** 		((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT) == REQREC_DEVICE)){
 123:usbExample.c  **** 		if((USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_DIRECTION) == REQDIR_HOSTTODEVICE){
 124:usbExample.c  **** 			switch(USB_ControlRequest.bRequest){
 125:usbExample.c  **** 				case SET_GOAL:
 126:usbExample.c  **** 					process_SET_GOAL();
 127:usbExample.c  **** 					break;
 128:usbExample.c  **** 				case SET_STOP:
 129:usbExample.c  **** 					process_SET_STOP();
 130:usbExample.c  **** 					break;
 131:usbExample.c  **** 			}
 132:usbExample.c  **** 		}else{
 133:usbExample.c  **** 			switch(USB_ControlRequest.bRequest){
 134:usbExample.c  **** 				case GET_STATUS:
 135:usbExample.c  **** 					process_GET_STATUS();
 136:usbExample.c  **** 					break;
 137:usbExample.c  **** 				case GET_POSE:
 138:usbExample.c  **** 					process_GET_POSE();
 139:usbExample.c  **** 					break;
 140:usbExample.c  **** 			}
 141:usbExample.c  **** 		}
 142:usbExample.c  **** 	}
 143:usbExample.c  **** 	*/
 144:usbExample.c  **** 	
 145:usbExample.c  **** }
 146               		.loc 2 145 0
 147 0008 0895      		ret
 148               		.cfi_endproc
 149               	.LFE96:
 151               		.section	.text.process_SET_GOAL,"ax",@progbits
 152               	.global	process_SET_GOAL
 154               	process_SET_GOAL:
 155               	.LFB97:
 146:usbExample.c  **** 
 147:usbExample.c  **** 
 148:usbExample.c  **** //LUFA USB Event Processer Functions
 149:usbExample.c  **** void process_SET_GOAL(){
 156               		.loc 2 149 0
 157               		.cfi_startproc
 158 0000 CF93      		push r28
 159               	.LCFI0:
 160               		.cfi_def_cfa_offset 3
 161               		.cfi_offset 28, -2
 162 0002 DF93      		push r29
 163               	.LCFI1:
 164               		.cfi_def_cfa_offset 4
 165               		.cfi_offset 29, -3
 166 0004 CDB7      		in r28,__SP_L__
 167 0006 DEB7      		in r29,__SP_H__
 168 0008 2C97      		sbiw r28,12
 169               	.LCFI2:
 170               		.cfi_def_cfa 28, 16
 171 000a CDBF      		out __SP_L__,r28
 172 000c DEBF      		out __SP_H__,r29
 173               	/* prologue: function */
 174               	/* frame size = 12 */
 175               	/* stack size = 14 */
 176               	.L__stack_usage = 14
 177               	.LBB67:
 178               	.LBB68:
 211:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 212:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 213:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 214:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Configures the specified endpoint address with the given endpoint type, direction, bank size
 215:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 216:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  on its direction.
 217:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 218:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address    Endpoint address to configure.
 219:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 220:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 221:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 222:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 223:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 224:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 225:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 226:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        that the endpoint can handle.
 227:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 228:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Banks      Number of hardware banks to use for the endpoint being configured.
 229:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 230:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 231:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *        it is automatically configured by the library internally.
 232:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *        \n\n
 233:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 234:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note This routine will automatically select the specified endpoint.
 235:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 236:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 237:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 238:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 239:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Type,
 240:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint16_t Size,
 241:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 242:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 243:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Type,
 244:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint16_t Size,
 245:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Banks)
 246:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 247:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t EPConfigMask = (USB_EP_INTDSBL_bm | ((Banks > 1) ? USB_EP_PINGPONG_bm : 0) | Endpoint_B
 248:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 249:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((Address & ENDPOINT_EPNUM_MASK) >= ENDPOINT_TOTAL_ENDPOINTS)
 250:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return false;
 251:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 252:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				// TODO - Fix once limitations are lifted
 253:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				EPConfigMask &= ~USB_EP_PINGPONG_bm;
 254:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Size > 64)
 255:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return false;
 256:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 257:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				switch (Type)
 258:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 259:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					case EP_TYPE_CONTROL:
 260:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_CONTROL_gc;
 261:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 262:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					case EP_TYPE_ISOCHRONOUS:
 263:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_ISOCHRONOUS_gc;
 264:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 265:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					default:
 266:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_BULK_gc;
 267:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 268:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 269:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 270:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Type == EP_TYPE_CONTROL)
 271:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  Endpoint_ConfigureEndpoint_PRV(Address ^ ENDPOINT_DIR_IN, EPConfigMask, Size);
 272:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 273:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return Endpoint_ConfigureEndpoint_PRV(Address, EPConfigMask, Size);
 274:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 275:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 276:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 277:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 278:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointRW_XMEGA
 279:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 280:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 281:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 282:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 283:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 284:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 285:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedEndpoint & ENDPOINT_DIR_IN)
 286:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return USB_Endpoint_SelectedFIFO->Position;
 287:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 288:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return (USB_Endpoint_SelectedFIFO->Length - USB_Endpoint_SelectedFIFO->Position);
 289:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 290:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 291:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 292:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 293:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  manipulated.
 294:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 295:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Index of the currently selected endpoint.
 296:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 297:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 298:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 299:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 300:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return USB_Endpoint_SelectedEndpoint;
 301:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 302:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 303:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 304:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  data In and Out pointers to the bank's contents.
 305:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 306:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 307:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 308:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 309:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 310:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 311:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
 312:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  USB_Endpoint_FIFOs[Address & ENDPOINT_EPNUM_MASK].IN.Position  = 0;
 313:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 314:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  USB_Endpoint_FIFOs[Address & ENDPOINT_EPNUM_MASK].OUT.Position = 0;
 315:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 316:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 317:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 318:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 319:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 320:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 321:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 322:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsEnabled(void)
 323:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 324:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return true;
 325:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 326:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 327:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 328:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 329:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 330:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  packet.
 331:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 332:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 333:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 334:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_AbortPendingIN(void)
 335:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 336:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_BUSNACK0_bm;
 337:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 338:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 339:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 340:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 341:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 342:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 343:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  direction and the endpoint bank is full.
 344:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 345:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 346:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 347:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 348:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *          on its direction.
 349:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 350:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 351:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 352:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 353:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (USB_Endpoint_SelectedFIFO->Position < USB_Endpoint_SelectedFIFO->Length);
 354:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 355:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 356:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is configured.
 357:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 358:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 359:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 360:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 361:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsConfigured(void)
 362:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 363:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) ? true : false);
 364:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 365:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 366:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 367:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 368:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 369:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 370:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 371:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 372:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 373:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsINReady(void)
 374:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 375:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 376:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 377:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->STATUS & USB_EP_BUSNACK0_bm) ? true : false);
 378:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 379:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 380:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 381:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 382:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 383:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 384:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 385:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 386:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 387:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 388:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 389:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 390:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 391:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_TRNCOMPL0_bm)
 392:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 393:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 394:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					return true;
 395:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 396:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 397:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return false;
 398:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 399:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 400:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 401:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 402:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 403:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 404:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 405:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 406:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 407:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 408:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 409:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 410:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 411:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_SETUP_bm)
 412:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 413:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 414:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					return true;
 415:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 416:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 417:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return false;
 418:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 419:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 420:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 421:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  endpoint for the next packet.
 422:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 423:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 424:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 425:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 426:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 427:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 428:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearSETUP(void)
 429:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 430:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 179               		.loc 1 430 0
 180 000e 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 181 0012 8F77      		andi r24,lo8(127)
 182 0014 0E94 0000 		call Endpoint_SelectEndpoint
 431:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 183               		.loc 1 431 0
 184 0018 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 185 001c F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 186 0020 8081      		ld r24,Z
 187 0022 8D78      		andi r24,lo8(-115)
 188 0024 8083      		st Z,r24
 432:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 189               		.loc 1 432 0
 190 0026 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 191 002a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 192 002e 8081      		ld r24,Z
 193 0030 8160      		ori r24,lo8(1)
 194 0032 8083      		st Z,r24
 433:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 195               		.loc 1 433 0
 196 0034 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 197 0038 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 198 003c EF5B      		subi r30,lo8(-(65))
 199 003e FF4F      		sbci r31,hi8(-(65))
 200 0040 1082      		st Z,__zero_reg__
 434:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 435:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 201               		.loc 1 435 0
 202 0042 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 203 0046 8068      		ori r24,lo8(-128)
 204 0048 0E94 0000 		call Endpoint_SelectEndpoint
 436:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 205               		.loc 1 436 0
 206 004c E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 207 0050 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 208 0054 8081      		ld r24,Z
 209 0056 8160      		ori r24,lo8(1)
 210 0058 8083      		st Z,r24
 437:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 211               		.loc 1 437 0
 212 005a E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 213 005e F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 214 0062 EF5B      		subi r30,lo8(-(65))
 215 0064 FF4F      		sbci r31,hi8(-(65))
 216 0066 1082      		st Z,__zero_reg__
 217               	.LBE68:
 218               	.LBE67:
 150:usbExample.c  **** 	uint16_t newGoal[6];
 151:usbExample.c  **** 	/* Accept command */
 152:usbExample.c  **** 	Endpoint_ClearSETUP();
 153:usbExample.c  **** 	/* read data from endpoint */
 154:usbExample.c  **** 	Endpoint_Read_Control_Stream_LE(newGoal, 16);
 219               		.loc 2 154 0
 220 0068 CE01      		movw r24,r28
 221 006a 0196      		adiw r24,1
 222 006c 60E1      		ldi r22,lo8(16)
 223 006e 70E0      		ldi r23,hi8(16)
 224 0070 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 155:usbExample.c  **** 	/* and mark the whole request as successful: */
 156:usbExample.c  **** 	Endpoint_ClearStatusStage();
 225               		.loc 2 156 0
 226 0074 0E94 0000 		call Endpoint_ClearStatusStage
 227               	/* epilogue start */
 157:usbExample.c  **** 	/* process command parameters: */
 158:usbExample.c  **** 	//Call changeGoal(newGoal);
 159:usbExample.c  **** }
 228               		.loc 2 159 0
 229 0078 2C96      		adiw r28,12
 230 007a CDBF      		out __SP_L__,r28
 231 007c DEBF      		out __SP_H__,r29
 232 007e DF91      		pop r29
 233 0080 CF91      		pop r28
 234 0082 0895      		ret
 235               		.cfi_endproc
 236               	.LFE97:
 238               		.section	.text.process_SET_STOP,"ax",@progbits
 239               	.global	process_SET_STOP
 241               	process_SET_STOP:
 242               	.LFB98:
 160:usbExample.c  **** void process_SET_STOP(){
 243               		.loc 2 160 0
 244               		.cfi_startproc
 245               	/* prologue: function */
 246               	/* frame size = 0 */
 247               	/* stack size = 0 */
 248               	.L__stack_usage = 0
 249               	.LBB69:
 250               	.LBB70:
 430:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 251               		.loc 1 430 0
 252 0000 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 253 0004 8F77      		andi r24,lo8(127)
 254 0006 0E94 0000 		call Endpoint_SelectEndpoint
 431:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 255               		.loc 1 431 0
 256 000a E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 257 000e F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 258 0012 8081      		ld r24,Z
 259 0014 8D78      		andi r24,lo8(-115)
 260 0016 8083      		st Z,r24
 432:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 261               		.loc 1 432 0
 262 0018 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 263 001c F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 264 0020 8081      		ld r24,Z
 265 0022 8160      		ori r24,lo8(1)
 266 0024 8083      		st Z,r24
 433:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 267               		.loc 1 433 0
 268 0026 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 269 002a F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 270 002e EF5B      		subi r30,lo8(-(65))
 271 0030 FF4F      		sbci r31,hi8(-(65))
 272 0032 1082      		st Z,__zero_reg__
 435:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 273               		.loc 1 435 0
 274 0034 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 275 0038 8068      		ori r24,lo8(-128)
 276 003a 0E94 0000 		call Endpoint_SelectEndpoint
 436:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 277               		.loc 1 436 0
 278 003e E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 279 0042 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 280 0046 8081      		ld r24,Z
 281 0048 8160      		ori r24,lo8(1)
 282 004a 8083      		st Z,r24
 283               		.loc 1 437 0
 284 004c E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 285 0050 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 286 0054 EF5B      		subi r30,lo8(-(65))
 287 0056 FF4F      		sbci r31,hi8(-(65))
 288 0058 1082      		st Z,__zero_reg__
 289               	.LBE70:
 290               	.LBE69:
 161:usbExample.c  **** 	/* Accept command */
 162:usbExample.c  **** 	Endpoint_ClearSETUP();
 163:usbExample.c  **** 	/* and mark the whole request as successful: */
 164:usbExample.c  **** 	Endpoint_ClearStatusStage();
 291               		.loc 2 164 0
 292 005a 0E94 0000 		call Endpoint_ClearStatusStage
 293               	/* epilogue start */
 165:usbExample.c  **** 	/* Process Command Parameters: */
 166:usbExample.c  **** 	//Call fuckingStop();
 167:usbExample.c  **** }
 294               		.loc 2 167 0
 295 005e 0895      		ret
 296               		.cfi_endproc
 297               	.LFE98:
 299               		.section	.text.process_GET_STATUS,"ax",@progbits
 300               	.global	process_GET_STATUS
 302               	process_GET_STATUS:
 303               	.LFB99:
 168:usbExample.c  **** void process_GET_STATUS(){
 304               		.loc 2 168 0
 305               		.cfi_startproc
 306               	/* prologue: function */
 307               	/* frame size = 0 */
 308               	/* stack size = 0 */
 309               	.L__stack_usage = 0
 310               	.LVL6:
 311               	.LBB71:
 312               	.LBB72:
 430:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 313               		.loc 1 430 0
 314 0000 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 315 0004 8F77      		andi r24,lo8(127)
 316 0006 0E94 0000 		call Endpoint_SelectEndpoint
 431:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 317               		.loc 1 431 0
 318 000a E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 319 000e F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 320 0012 8081      		ld r24,Z
 321 0014 8D78      		andi r24,lo8(-115)
 322 0016 8083      		st Z,r24
 432:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 323               		.loc 1 432 0
 324 0018 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 325 001c F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 326 0020 8081      		ld r24,Z
 327 0022 8160      		ori r24,lo8(1)
 328 0024 8083      		st Z,r24
 433:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 329               		.loc 1 433 0
 330 0026 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 331 002a F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 332 002e EF5B      		subi r30,lo8(-(65))
 333 0030 FF4F      		sbci r31,hi8(-(65))
 334 0032 1082      		st Z,__zero_reg__
 435:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 335               		.loc 1 435 0
 336 0034 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 337 0038 8068      		ori r24,lo8(-128)
 338 003a 0E94 0000 		call Endpoint_SelectEndpoint
 436:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 339               		.loc 1 436 0
 340 003e E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 341 0042 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 342 0046 8081      		ld r24,Z
 343 0048 8160      		ori r24,lo8(1)
 344 004a 8083      		st Z,r24
 345               		.loc 1 437 0
 346 004c 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 347 0050 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 348 0054 FC01      		movw r30,r24
 349 0056 EF5B      		subi r30,lo8(-(65))
 350 0058 FF4F      		sbci r31,hi8(-(65))
 351 005a 1082      		st Z,__zero_reg__
 352               	.LVL7:
 353               	.LBE72:
 354               	.LBE71:
 355               	.LBB73:
 356               	.LBB74:
 357               	.LBB75:
 438:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 439:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 440:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 441:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 442:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 443:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 444:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 445:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 446:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearIN(void)
 447:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 448:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CNT     = USB_Endpoint_SelectedFIFO->Position;
 449:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 450:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 451:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 452:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 453:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 454:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 455:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 456:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 457:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 458:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 459:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearOUT(void)
 460:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 461:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 462:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 463:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 464:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 465:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 466:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 467:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 468:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  aborted and the host can begin its own recovery sequence.
 469:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 470:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 471:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 472:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  endpoint.
 473:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 474:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 475:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 476:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 477:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_StallTransaction(void)
 478:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 479:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 480:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 481:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) == USB_EP_TYPE_CONTROL_gc)
 482:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 483:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint ^ ENDPOINT_DIR_IN);
 484:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 485:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 486:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 487:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 488:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 489:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 490:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 491:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 492:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 493:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearStall(void)
 494:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 495:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL &= ~USB_EP_STALL_bm;
 496:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 497:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 498:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 499:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 500:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 501:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 502:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 503:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 504:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 505:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsStalled(void)
 506:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 507:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_STALL_bm) ? true : false);
 508:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 509:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 510:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 511:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 512:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetDataToggle(void)
 513:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 514:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~USB_EP_TOGGLE_bm;
 515:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 516:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 517:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines the currently selected endpoint's direction.
 518:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 519:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 520:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 521:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 522:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 523:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 524:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (USB_Endpoint_SelectedEndpoint & ENDPOINT_DIR_IN);
 525:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 526:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 527:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 528:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 529:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_XMEGA
 530:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 531:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 532:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 533:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 534:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_Read_8(void)
 535:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 536:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return USB_Endpoint_SelectedFIFO->Data[USB_Endpoint_SelectedFIFO->Position++];
 537:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 538:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 539:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 540:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 541:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_XMEGA
 542:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 543:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 544:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 545:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 546:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 547:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 548:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Data[USB_Endpoint_SelectedFIFO->Position++] = Data;
 358               		.loc 1 548 0
 359 005c 2081      		ld r18,Z
 360 005e 820F      		add r24,r18
 361 0060 911D      		adc r25,__zero_reg__
 362 0062 DC01      		movw r26,r24
 363 0064 1C92      		st X,__zero_reg__
 364 0066 2F5F      		subi r18,lo8(-(1))
 365 0068 2083      		st Z,r18
 366               	.LVL8:
 367               	.LBE75:
 368               	.LBE74:
 369               	.LBB76:
 370               	.LBB77:
 371 006a 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 372 006e 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 373 0072 FC01      		movw r30,r24
 374 0074 EF5B      		subi r30,lo8(-(65))
 375 0076 FF4F      		sbci r31,hi8(-(65))
 376 0078 2081      		ld r18,Z
 377 007a 820F      		add r24,r18
 378 007c 911D      		adc r25,__zero_reg__
 379 007e DC01      		movw r26,r24
 380 0080 1C92      		st X,__zero_reg__
 381 0082 2F5F      		subi r18,lo8(-(1))
 382 0084 2083      		st Z,r18
 383               	.LBE77:
 384               	.LBE76:
 385               	.LBE73:
 386               	.LBB78:
 387               	.LBB79:
 448:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CNT     = USB_Endpoint_SelectedFIFO->Position;
 388               		.loc 1 448 0
 389 0086 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 390 008a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 391 008e A091 0000 		lds r26,USB_Endpoint_SelectedFIFO
 392 0092 B091 0000 		lds r27,USB_Endpoint_SelectedFIFO+1
 393 0096 AF5B      		subi r26,lo8(-(65))
 394 0098 BF4F      		sbci r27,hi8(-(65))
 395 009a 8C91      		ld r24,X
 396 009c 90E0      		ldi r25,lo8(0)
 397 009e 8283      		std Z+2,r24
 398 00a0 9383      		std Z+3,r25
 449:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 399               		.loc 1 449 0
 400 00a2 8081      		ld r24,Z
 401 00a4 8D79      		andi r24,lo8(-99)
 402 00a6 8083      		st Z,r24
 450:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 403               		.loc 1 450 0
 404 00a8 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 405 00ac F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 406 00b0 EF5B      		subi r30,lo8(-(65))
 407 00b2 FF4F      		sbci r31,hi8(-(65))
 408 00b4 1082      		st Z,__zero_reg__
 409               	.LBE79:
 410               	.LBE78:
 169:usbExample.c  **** 	uint16_t myStatus = 0;
 170:usbExample.c  **** 	Endpoint_ClearSETUP();
 171:usbExample.c  **** 	Endpoint_Write_16_LE(myStatus);
 172:usbExample.c  **** 	/* send packet */
 173:usbExample.c  **** 	Endpoint_ClearIN();
 174:usbExample.c  **** 	/* and mark the whole request as successful: */
 175:usbExample.c  **** 	Endpoint_ClearStatusStage();	
 411               		.loc 2 175 0
 412 00b6 0E94 0000 		call Endpoint_ClearStatusStage
 413               	/* epilogue start */
 176:usbExample.c  **** }
 414               		.loc 2 176 0
 415 00ba 0895      		ret
 416               		.cfi_endproc
 417               	.LFE99:
 419               		.section	.text.process_GET_POSE,"ax",@progbits
 420               	.global	process_GET_POSE
 422               	process_GET_POSE:
 423               	.LFB100:
 177:usbExample.c  **** void process_GET_POSE(){
 424               		.loc 2 177 0
 425               		.cfi_startproc
 426 0000 CF93      		push r28
 427               	.LCFI3:
 428               		.cfi_def_cfa_offset 3
 429               		.cfi_offset 28, -2
 430 0002 DF93      		push r29
 431               	.LCFI4:
 432               		.cfi_def_cfa_offset 4
 433               		.cfi_offset 29, -3
 434 0004 CDB7      		in r28,__SP_L__
 435 0006 DEB7      		in r29,__SP_H__
 436 0008 2C97      		sbiw r28,12
 437               	.LCFI5:
 438               		.cfi_def_cfa 28, 16
 439 000a CDBF      		out __SP_L__,r28
 440 000c DEBF      		out __SP_H__,r29
 441               	/* prologue: function */
 442               	/* frame size = 12 */
 443               	/* stack size = 14 */
 444               	.L__stack_usage = 14
 178:usbExample.c  **** 	uint16_t myPose[6];
 179:usbExample.c  **** 	myPose[0] = 0;//Do This Right
 445               		.loc 2 179 0
 446 000e 1982      		std Y+1,__zero_reg__
 447 0010 1A82      		std Y+2,__zero_reg__
 448               	.LBB80:
 449               	.LBB81:
 430:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 450               		.loc 1 430 0
 451 0012 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 452 0016 8F77      		andi r24,lo8(127)
 453 0018 0E94 0000 		call Endpoint_SelectEndpoint
 431:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 454               		.loc 1 431 0
 455 001c E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 456 0020 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 457 0024 8081      		ld r24,Z
 458 0026 8D78      		andi r24,lo8(-115)
 459 0028 8083      		st Z,r24
 432:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 460               		.loc 1 432 0
 461 002a E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 462 002e F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 463 0032 8081      		ld r24,Z
 464 0034 8160      		ori r24,lo8(1)
 465 0036 8083      		st Z,r24
 433:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 466               		.loc 1 433 0
 467 0038 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 468 003c F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 469 0040 EF5B      		subi r30,lo8(-(65))
 470 0042 FF4F      		sbci r31,hi8(-(65))
 471 0044 1082      		st Z,__zero_reg__
 435:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 472               		.loc 1 435 0
 473 0046 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 474 004a 8068      		ori r24,lo8(-128)
 475 004c 0E94 0000 		call Endpoint_SelectEndpoint
 436:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 476               		.loc 1 436 0
 477 0050 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 478 0054 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 479 0058 8081      		ld r24,Z
 480 005a 8160      		ori r24,lo8(1)
 481 005c 8083      		st Z,r24
 437:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 482               		.loc 1 437 0
 483 005e E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 484 0062 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 485 0066 EF5B      		subi r30,lo8(-(65))
 486 0068 FF4F      		sbci r31,hi8(-(65))
 487 006a 1082      		st Z,__zero_reg__
 488               	.LBE81:
 489               	.LBE80:
 180:usbExample.c  **** 	Endpoint_ClearSETUP();
 181:usbExample.c  **** 	Endpoint_Write_Stream_LE(myPose, 16, 0);
 490               		.loc 2 181 0
 491 006c CE01      		movw r24,r28
 492 006e 0196      		adiw r24,1
 493 0070 60E1      		ldi r22,lo8(16)
 494 0072 70E0      		ldi r23,hi8(16)
 495 0074 40E0      		ldi r20,lo8(0)
 496 0076 50E0      		ldi r21,hi8(0)
 497 0078 0E94 0000 		call Endpoint_Write_Stream_LE
 498               	.LBB82:
 499               	.LBB83:
 448:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CNT     = USB_Endpoint_SelectedFIFO->Position;
 500               		.loc 1 448 0
 501 007c E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 502 0080 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 503 0084 A091 0000 		lds r26,USB_Endpoint_SelectedFIFO
 504 0088 B091 0000 		lds r27,USB_Endpoint_SelectedFIFO+1
 505 008c AF5B      		subi r26,lo8(-(65))
 506 008e BF4F      		sbci r27,hi8(-(65))
 507 0090 8C91      		ld r24,X
 508 0092 90E0      		ldi r25,lo8(0)
 509 0094 8283      		std Z+2,r24
 510 0096 9383      		std Z+3,r25
 449:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 511               		.loc 1 449 0
 512 0098 8081      		ld r24,Z
 513 009a 8D79      		andi r24,lo8(-99)
 514 009c 8083      		st Z,r24
 450:./LUFA/Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 515               		.loc 1 450 0
 516 009e E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 517 00a2 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 518 00a6 EF5B      		subi r30,lo8(-(65))
 519 00a8 FF4F      		sbci r31,hi8(-(65))
 520 00aa 1082      		st Z,__zero_reg__
 521               	.LBE83:
 522               	.LBE82:
 182:usbExample.c  **** 	Endpoint_ClearIN();
 183:usbExample.c  **** 	Endpoint_ClearStatusStage();
 523               		.loc 2 183 0
 524 00ac 0E94 0000 		call Endpoint_ClearStatusStage
 525               	/* epilogue start */
 184:usbExample.c  **** }
 526               		.loc 2 184 0
 527 00b0 2C96      		adiw r28,12
 528 00b2 CDBF      		out __SP_L__,r28
 529 00b4 DEBF      		out __SP_H__,r29
 530 00b6 DF91      		pop r29
 531 00b8 CF91      		pop r28
 532 00ba 0895      		ret
 533               		.cfi_endproc
 534               	.LFE100:
 536               		.section	.text.delay_ms,"ax",@progbits
 537               	.global	delay_ms
 539               	delay_ms:
 540               	.LFB101:
 185:usbExample.c  **** 
 186:usbExample.c  **** void delay_ms(int ms) 
 187:usbExample.c  **** { 
 541               		.loc 2 187 0
 542               		.cfi_startproc
 543               	.LVL9:
 544               	/* prologue: function */
 545               	/* frame size = 0 */
 546               	/* stack size = 0 */
 547               	.L__stack_usage = 0
 548               		.loc 2 187 0
 549 0000 9C01      		movw r18,r24
 188:usbExample.c  ****     while (ms--) 
 550               		.loc 2 188 0
 551 0002 00C0      		rjmp .L13
 552               	.LVL10:
 553               	.L14:
 554               	.LBB84:
 555               	.LBB85:
 556               		.file 3 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
   1:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
   6:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
   9:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  12:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      distribution.
  16:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  17:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  21:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  33:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  35:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  38:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
  41:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  42:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  46:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /** \file */
  47:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     \code
  49:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     \endcode
  53:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  54:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     used.
  58:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  59:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  68:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  77:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  81:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** */
  82:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  83:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
  87:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  88:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
  93:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  94:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
  97:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
  98:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
 103:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 104:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /**
 105:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 107:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 109:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 112:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 114:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 120:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 125:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 129:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 132:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 140:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****  */
 141:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** void
 142:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** {
 144:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 153:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 156:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 159:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#else
 160:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#endif
 163:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 164:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 165:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 166:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #else
 167:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 170:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	{
 172:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		while(__ticks)
 175:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		{
 176:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 			__ticks --;
 179:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		}
 180:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		return;
 181:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	}
 182:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	else
 183:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #endif
 186:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** }
 187:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 188:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** /**
 189:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 190:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 191:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 193:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 196:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 198:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    will not be informed about this case.
 201:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 202:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   
 207:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 211:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****  
 214:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 218:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 222:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****  */
 223:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** void
 224:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** _delay_us(double __us)
 225:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** {
 226:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 227:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 228:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 229:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 230:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 231:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 234:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 235:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 236:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 237:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 238:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 239:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 240:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 241:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#else
 242:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		//round up by default
 243:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 244:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	#endif
 245:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 
 246:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 557               		.loc 3 246 0
 558 0004 8FE3      		 ldi r24,lo8(7999)
 559 0006 9FE1      	    ldi r25,hi8(7999)
 560 0008 0197      	    1:sbiw r24,1
 561 000a 01F4      	    brne 1b
 562 000c 00C0      		rjmp .
 563 000e 0000      		nop
 564 0010 2150      		subi r18,lo8(-(-1))
 565 0012 3040      		sbci r19,hi8(-(-1))
 566               	.LVL11:
 567               	.L13:
 568               	.LBE85:
 569               	.LBE84:
 570               		.loc 2 188 0 discriminator 1
 571 0014 2115      		cp r18,__zero_reg__
 572 0016 3105      		cpc r19,__zero_reg__
 573 0018 01F4      		brne .L14
 574               	/* epilogue start */
 189:usbExample.c  ****         _delay_us(1000);  
 190:usbExample.c  **** } 
 575               		.loc 2 190 0
 576 001a 0895      		ret
 577               		.cfi_endproc
 578               	.LFE101:
 580               		.section	.text.millis,"ax",@progbits
 581               	.global	millis
 583               	millis:
 584               	.LFB102:
 191:usbExample.c  **** 
 192:usbExample.c  **** //Get time elapsed in millis 
 193:usbExample.c  **** long millis(void){
 585               		.loc 2 193 0
 586               		.cfi_startproc
 587 0000 0F93      		push r16
 588               	.LCFI6:
 589               		.cfi_def_cfa_offset 3
 590               		.cfi_offset 16, -2
 591 0002 1F93      		push r17
 592               	.LCFI7:
 593               		.cfi_def_cfa_offset 4
 594               		.cfi_offset 17, -3
 595               	/* prologue: function */
 596               	/* frame size = 0 */
 597               	/* stack size = 2 */
 598               	.L__stack_usage = 2
 194:usbExample.c  **** 	return elapsedMillis;
 599               		.loc 2 194 0
 600 0004 0091 0000 		lds r16,elapsedMillis
 601 0008 1091 0000 		lds r17,elapsedMillis+1
 602 000c 2091 0000 		lds r18,elapsedMillis+2
 603 0010 3091 0000 		lds r19,elapsedMillis+3
 195:usbExample.c  **** }
 604               		.loc 2 195 0
 605 0014 B801      		movw r22,r16
 606 0016 C901      		movw r24,r18
 607               	/* epilogue start */
 608 0018 1F91      		pop r17
 609 001a 0F91      		pop r16
 610 001c 0895      		ret
 611               		.cfi_endproc
 612               	.LFE102:
 614               		.section	.text.blink,"ax",@progbits
 615               	.global	blink
 617               	blink:
 618               	.LFB103:
 196:usbExample.c  **** 
 197:usbExample.c  **** void blink(int myVal){
 619               		.loc 2 197 0
 620               		.cfi_startproc
 621               	.LVL12:
 622 0000 FF92      		push r15
 623               	.LCFI8:
 624               		.cfi_def_cfa_offset 3
 625               		.cfi_offset 15, -2
 626 0002 0F93      		push r16
 627               	.LCFI9:
 628               		.cfi_def_cfa_offset 4
 629               		.cfi_offset 16, -3
 630 0004 1F93      		push r17
 631               	.LCFI10:
 632               		.cfi_def_cfa_offset 5
 633               		.cfi_offset 17, -4
 634 0006 CF93      		push r28
 635               	.LCFI11:
 636               		.cfi_def_cfa_offset 6
 637               		.cfi_offset 28, -5
 638 0008 DF93      		push r29
 639               	.LCFI12:
 640               		.cfi_def_cfa_offset 7
 641               		.cfi_offset 29, -6
 642               	/* prologue: function */
 643               	/* frame size = 0 */
 644               	/* stack size = 5 */
 645               	.L__stack_usage = 5
 646 000a 8C01      		movw r16,r24
 198:usbExample.c  **** 		PORTE.OUTSET = _BV(0);
 647               		.loc 2 198 0
 648 000c C0E8      		ldi r28,lo8(1664)
 649 000e D6E0      		ldi r29,hi8(1664)
 650 0010 FF24      		clr r15
 651 0012 F394      		inc r15
 652 0014 FD82      		std Y+5,r15
 199:usbExample.c  ****         delay_ms(myVal);
 653               		.loc 2 199 0
 654 0016 0E94 0000 		call delay_ms
 655               	.LVL13:
 200:usbExample.c  ****         PORTE.OUTCLR = _BV(0);
 656               		.loc 2 200 0
 657 001a FE82      		std Y+6,r15
 201:usbExample.c  ****         delay_ms(myVal);
 658               		.loc 2 201 0
 659 001c C801      		movw r24,r16
 660 001e 0E94 0000 		call delay_ms
 661               	/* epilogue start */
 202:usbExample.c  **** }
 662               		.loc 2 202 0
 663 0022 DF91      		pop r29
 664 0024 CF91      		pop r28
 665 0026 1F91      		pop r17
 666 0028 0F91      		pop r16
 667               	.LVL14:
 668 002a FF90      		pop r15
 669 002c 0895      		ret
 670               		.cfi_endproc
 671               	.LFE103:
 673               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 674               	.global	EVENT_USB_Device_ConfigurationChanged
 676               	EVENT_USB_Device_ConfigurationChanged:
 677               	.LFB95:
 108:usbExample.c  **** {
 678               		.loc 2 108 0
 679               		.cfi_startproc
 680               	/* prologue: function */
 681               	/* frame size = 0 */
 682               	/* stack size = 0 */
 683               	.L__stack_usage = 0
 684               	.LVL15:
 110:usbExample.c  **** 	blink(50);
 685               		.loc 2 110 0
 686 0000 82E3      		ldi r24,lo8(50)
 687 0002 90E0      		ldi r25,hi8(50)
 688 0004 0E94 0000 		call blink
 111:usbExample.c  **** 	ConfigSuccess &= CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
 689               		.loc 2 111 0
 690 0008 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 691 000a 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 692 000c 0E94 0000 		call CDC_Device_ConfigureEndpoints
 693               	.LVL16:
 694               	/* epilogue start */
 113:usbExample.c  **** }
 695               		.loc 2 113 0
 696 0010 0895      		ret
 697               		.cfi_endproc
 698               	.LFE95:
 700               		.section	.text.signum,"ax",@progbits
 701               	.global	signum
 703               	signum:
 704               	.LFB104:
 203:usbExample.c  **** 
 204:usbExample.c  **** //Return only the sign of number n: 1, -1, or 0. 
 205:usbExample.c  **** int signum(int n) { 
 705               		.loc 2 205 0
 706               		.cfi_startproc
 707               	.LVL17:
 708               	/* prologue: function */
 709               	/* frame size = 0 */
 710               	/* stack size = 0 */
 711               	.L__stack_usage = 0
 206:usbExample.c  **** 	return (n < 0) ? -1 : (n > 0) ? +1 : 0; 
 712               		.loc 2 206 0
 713 0000 97FD      		sbrc r25,7
 714 0002 00C0      		rjmp .L21
 715               		.loc 2 206 0 is_stmt 0 discriminator 1
 716 0004 21E0      		ldi r18,lo8(1)
 717 0006 30E0      		ldi r19,hi8(1)
 718 0008 1816      		cp __zero_reg__,r24
 719 000a 1906      		cpc __zero_reg__,r25
 720 000c 04F0      		brlt .L19
 721 000e 20E0      		ldi r18,lo8(0)
 722 0010 30E0      		ldi r19,hi8(0)
 723 0012 00C0      		rjmp .L19
 724               	.L21:
 725               		.loc 2 206 0
 726 0014 2FEF      		ldi r18,lo8(-1)
 727 0016 3FEF      		ldi r19,hi8(-1)
 728               	.L19:
 207:usbExample.c  **** }
 729               		.loc 2 207 0 is_stmt 1 discriminator 3
 730 0018 C901      		movw r24,r18
 731               	.LVL18:
 732               	/* epilogue start */
 733 001a 0895      		ret
 734               		.cfi_endproc
 735               	.LFE104:
 737               		.section	.text.SetupHardware,"ax",@progbits
 738               	.global	SetupHardware
 740               	SetupHardware:
 741               	.LFB105:
 208:usbExample.c  **** 
 209:usbExample.c  **** 
 210:usbExample.c  **** /** Configures the board hardware and chip peripherals for the demo's functionality. */
 211:usbExample.c  **** void SetupHardware(void)
 212:usbExample.c  **** {
 742               		.loc 2 212 0
 743               		.cfi_startproc
 744 0000 CF93      		push r28
 745               	.LCFI13:
 746               		.cfi_def_cfa_offset 3
 747               		.cfi_offset 28, -2
 748 0002 DF93      		push r29
 749               	.LCFI14:
 750               		.cfi_def_cfa_offset 4
 751               		.cfi_offset 29, -3
 752               	/* prologue: function */
 753               	/* frame size = 0 */
 754               	/* stack size = 2 */
 755               	.L__stack_usage = 2
 756               	.LVL19:
 757               	.LBB86:
 758               	.LBB87:
 759               		.file 4 "./LUFA/Platform/XMEGA/ClockManagement.h"
   1:./LUFA/Platform/XMEGA/ClockManagement.h **** /*
   2:./LUFA/Platform/XMEGA/ClockManagement.h ****              LUFA Library
   3:./LUFA/Platform/XMEGA/ClockManagement.h ****      Copyright (C) Dean Camera, 2012.
   4:./LUFA/Platform/XMEGA/ClockManagement.h **** 
   5:./LUFA/Platform/XMEGA/ClockManagement.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Platform/XMEGA/ClockManagement.h ****            www.lufa-lib.org
   7:./LUFA/Platform/XMEGA/ClockManagement.h **** */
   8:./LUFA/Platform/XMEGA/ClockManagement.h **** 
   9:./LUFA/Platform/XMEGA/ClockManagement.h **** /*
  10:./LUFA/Platform/XMEGA/ClockManagement.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  12:./LUFA/Platform/XMEGA/ClockManagement.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Platform/XMEGA/ClockManagement.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Platform/XMEGA/ClockManagement.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Platform/XMEGA/ClockManagement.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Platform/XMEGA/ClockManagement.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Platform/XMEGA/ClockManagement.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Platform/XMEGA/ClockManagement.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA/Platform/XMEGA/ClockManagement.h ****   software without specific, written prior permission.
  20:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  21:./LUFA/Platform/XMEGA/ClockManagement.h ****   The author disclaim all warranties with regard to this
  22:./LUFA/Platform/XMEGA/ClockManagement.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Platform/XMEGA/ClockManagement.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Platform/XMEGA/ClockManagement.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Platform/XMEGA/ClockManagement.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Platform/XMEGA/ClockManagement.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Platform/XMEGA/ClockManagement.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Platform/XMEGA/ClockManagement.h ****   this software.
  29:./LUFA/Platform/XMEGA/ClockManagement.h **** */
  30:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  31:./LUFA/Platform/XMEGA/ClockManagement.h **** /** \file
  32:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \brief Module Clock Driver for the AVR USB XMEGA microcontrollers.
  33:./LUFA/Platform/XMEGA/ClockManagement.h ****  *
  34:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  Clock management driver for the AVR USB XMEGA microcontrollers. This driver allows for the conf
  35:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  of the various clocks within the device to clock the various peripherals.
  36:./LUFA/Platform/XMEGA/ClockManagement.h ****  */
  37:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  38:./LUFA/Platform/XMEGA/ClockManagement.h **** /** \ingroup Group_PlatformDrivers_XMEGA
  39:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \defgroup Group_PlatformDrivers_XMEGAClocks Clock Management Driver - LUFA/Platform/XMEGA/Clock
  40:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \brief Module Clock Driver for the AVR USB XMEGA microcontrollers.
  41:./LUFA/Platform/XMEGA/ClockManagement.h ****  *
  42:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \section Sec_Dependencies Module Source Dependencies
  43:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  The following files must be built with any user project that uses this module:
  44:./LUFA/Platform/XMEGA/ClockManagement.h ****  *    - None
  45:./LUFA/Platform/XMEGA/ClockManagement.h ****  *
  46:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \section Sec_ModDescription Module Description
  47:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  Clock management driver for the AVR USB XMEGA microcontrollers. This driver allows for the conf
  48:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  of the various clocks within the device to clock the various peripherals.
  49:./LUFA/Platform/XMEGA/ClockManagement.h ****  *
  50:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  Usage Example:
  51:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \code
  52:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   	#include <LUFA/Platform/XMEGA/ClockManagement.h>
  53:./LUFA/Platform/XMEGA/ClockManagement.h ****  *      
  54:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   	void main(void)
  55:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   	{
  56:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		// Start the PLL to multiply the 2MHz RC oscillator to F_CPU and switch the CPU core to run 
  57:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		XMEGACLK_StartPLL(CLOCK_SRC_INT_RC2MHZ, 2000000, F_CPU);
  58:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		XMEGACLK_SetCPUClockSource(CLOCK_SRC_PLL);
  59:./LUFA/Platform/XMEGA/ClockManagement.h ****  *          
  60:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		// Start the 32MHz internal RC oscillator and start the DFLL to increase it to F_USB using t
  61:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		XMEGACLK_StartInternalOscillator(CLOCK_SRC_INT_RC32MHZ);
  62:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   		XMEGACLK_StartDFLL(CLOCK_SRC_INT_RC32MHZ, DFLL_REF_INT_USBSOF, F_USB);
  63:./LUFA/Platform/XMEGA/ClockManagement.h ****  *   	}
  64:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  \endcode
  65:./LUFA/Platform/XMEGA/ClockManagement.h ****  *
  66:./LUFA/Platform/XMEGA/ClockManagement.h ****  *  @{
  67:./LUFA/Platform/XMEGA/ClockManagement.h ****  */
  68:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  69:./LUFA/Platform/XMEGA/ClockManagement.h **** #ifndef _XMEGA_CLOCK_MANAGEMENT_H_
  70:./LUFA/Platform/XMEGA/ClockManagement.h **** #define _XMEGA_CLOCK_MANAGEMENT_H_
  71:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  72:./LUFA/Platform/XMEGA/ClockManagement.h **** 	/* Includes: */
  73:./LUFA/Platform/XMEGA/ClockManagement.h **** 		#include "../../Common/Common.h"
  74:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  75:./LUFA/Platform/XMEGA/ClockManagement.h **** 	/* Enable C linkage for C++ Compilers: */
  76:./LUFA/Platform/XMEGA/ClockManagement.h **** 		#if defined(__cplusplus)
  77:./LUFA/Platform/XMEGA/ClockManagement.h **** 			extern "C" {
  78:./LUFA/Platform/XMEGA/ClockManagement.h **** 		#endif
  79:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  80:./LUFA/Platform/XMEGA/ClockManagement.h **** 	/* Public Interface - May be used in end-application: */
  81:./LUFA/Platform/XMEGA/ClockManagement.h **** 		/* Macros: */
  82:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Enum for the possible external oscillator frequency ranges. */
  83:./LUFA/Platform/XMEGA/ClockManagement.h **** 			enum XMEGA_Extern_OSC_ClockFrequency_t
  84:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
  85:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_FREQ_2MHZ_MAX      = OSC_FRQRANGE_04TO2_gc,  /**< External crystal oscillator equal to or
  86:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_FREQ_9MHZ_MAX      = OSC_FRQRANGE_2TO9_gc,   /**< External crystal oscillator equal to or
  87:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_FREQ_12MHZ_MAX     = OSC_FRQRANGE_9TO12_gc,  /**< External crystal oscillator equal to or
  88:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_FREQ_16MHZ_MAX     = OSC_FRQRANGE_12TO16_gc, /**< External crystal oscillator equal to or
  89:./LUFA/Platform/XMEGA/ClockManagement.h **** 			};
  90:./LUFA/Platform/XMEGA/ClockManagement.h **** 
  91:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Enum for the possible external oscillator startup times. */
  92:./LUFA/Platform/XMEGA/ClockManagement.h **** 			enum XMEGA_Extern_OSC_ClockStartup_t
  93:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
  94:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_START_6CLK         = OSC_XOSCSEL_EXTCLK_gc,      /**< Wait 6 clock cycles before startup 
  95:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_START_32KCLK       = OSC_XOSCSEL_32KHz_gc,       /**< Wait 32K clock cycles before startu
  96:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_START_256CLK       = OSC_XOSCSEL_XTAL_256CLK_gc, /**< Wait 256 clock cycles before startu
  97:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_START_1KCLK        = OSC_XOSCSEL_XTAL_1KCLK_gc,  /**< Wait 1K clock cycles before startup
  98:./LUFA/Platform/XMEGA/ClockManagement.h **** 				EXOSC_START_16KCLK       = OSC_XOSCSEL_XTAL_16KCLK_gc, /**< Wait 16K clock cycles before startu
  99:./LUFA/Platform/XMEGA/ClockManagement.h **** 			};
 100:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 101:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Enum for the possible module clock sources. */
 102:./LUFA/Platform/XMEGA/ClockManagement.h **** 			enum XMEGA_System_ClockSource_t
 103:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 104:./LUFA/Platform/XMEGA/ClockManagement.h **** 				CLOCK_SRC_INT_RC2MHZ    = 0, /**< Clock sourced from the Internal 2MHz RC Oscillator clock. */
 105:./LUFA/Platform/XMEGA/ClockManagement.h **** 				CLOCK_SRC_INT_RC32MHZ   = 1, /**< Clock sourced from the Internal 32MHz RC Oscillator clock. */
 106:./LUFA/Platform/XMEGA/ClockManagement.h **** 				CLOCK_SRC_INT_RC32KHZ   = 2, /**< Clock sourced from the Internal 32KHz RC Oscillator clock. */
 107:./LUFA/Platform/XMEGA/ClockManagement.h **** 				CLOCK_SRC_XOSC          = 3, /**< Clock sourced from the External Oscillator clock. */
 108:./LUFA/Platform/XMEGA/ClockManagement.h **** 				CLOCK_SRC_PLL           = 4, /**< Clock sourced from the Internal PLL clock. */
 109:./LUFA/Platform/XMEGA/ClockManagement.h **** 			};
 110:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 111:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Enum for the possible DFLL clock reference sources. */
 112:./LUFA/Platform/XMEGA/ClockManagement.h **** 			enum XMEGA_System_DFLLReference_t
 113:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 114:./LUFA/Platform/XMEGA/ClockManagement.h **** 				DFLL_REF_INT_RC32KHZ   = 0, /**< Reference clock sourced from the Internal 32KHz RC Oscillator 
 115:./LUFA/Platform/XMEGA/ClockManagement.h **** 				DFLL_REF_EXT_RC32KHZ   = 1, /**< Reference clock sourced from the External 32KHz RC Oscillator 
 116:./LUFA/Platform/XMEGA/ClockManagement.h **** 				DFLL_REF_INT_USBSOF    = 2, /**< Reference clock sourced from the USB Start Of Frame packets. *
 117:./LUFA/Platform/XMEGA/ClockManagement.h **** 			};
 118:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 119:./LUFA/Platform/XMEGA/ClockManagement.h **** 		/* Inline Functions: */
 120:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Write a value to a location protected by the XMEGA CCP protection mechanism. This function u
 121:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  the protected address is written to within four clock cycles of the CCP key being written.
 122:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 123:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Address  Address to write to, a memory address protected by the CCP mechanism
 124:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Value    Value to write to the protected location
 125:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 126:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_CCP_Write(volatile void* Address, const uint8_t Value) ATTR_ALWAYS_I
 127:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_CCP_Write(volatile void* Address, const uint8_t Value)
 128:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 129:./LUFA/Platform/XMEGA/ClockManagement.h **** 				__asm__ __volatile__ (
 130:./LUFA/Platform/XMEGA/ClockManagement.h **** 					"out %0, __zero_reg__" "\n\t" /* Zero RAMPZ using fixed zero value register */
 131:./LUFA/Platform/XMEGA/ClockManagement.h **** 					"movw r30, %1"         "\n\t" /* Copy address to Z register pair */
 132:./LUFA/Platform/XMEGA/ClockManagement.h **** 					"out %2, %3"           "\n\t" /* Write key to CCP register */
 133:./LUFA/Platform/XMEGA/ClockManagement.h **** 					"st Z, %4"             "\n\t" /* Indirectly write value to address */
 134:./LUFA/Platform/XMEGA/ClockManagement.h **** 					: /* No output operands */
 135:./LUFA/Platform/XMEGA/ClockManagement.h **** 					: /* Input operands: */ "m" (RAMPZ), "e" (Address), "m" (CCP), "r" (CCP_IOREG_gc), "r" (Value)
 136:./LUFA/Platform/XMEGA/ClockManagement.h **** 					: /* Clobbered registers: */ "r30", "r31"
 137:./LUFA/Platform/XMEGA/ClockManagement.h **** 				); 
 138:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 139:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 140:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Starts the external oscillator of the XMEGA microcontroller, with the given options. This ro
 141:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  the oscillator is ready for use.
 142:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 143:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] FreqRange  Frequency range of the external oscillator, a value from \ref XMEGA_Ex
 144:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Startup    Startup time of the external oscillator, a value from \ref XMEGA_Exter
 145:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 146:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the external oscillator was successfully started, \c false if inv
 147:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 148:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartExternalOscillator(const uint8_t FreqRange,
 149:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                                    const uint8_t Startup) ATTR_ALWAYS_INLINE;
 150:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartExternalOscillator(const uint8_t FreqRange,
 151:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                                    const uint8_t Startup)
 152:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 153:./LUFA/Platform/XMEGA/ClockManagement.h **** 				OSC.XOSCCTRL  = (FreqRange | ((Startup == EXOSC_START_32KCLK) ? OSC_X32KLPM_bm : 0) | Startup);
 154:./LUFA/Platform/XMEGA/ClockManagement.h **** 				OSC.CTRL     |= OSC_XOSCEN_bm;
 155:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 156:./LUFA/Platform/XMEGA/ClockManagement.h **** 				while (!(OSC.STATUS & OSC_XOSCRDY_bm));
 157:./LUFA/Platform/XMEGA/ClockManagement.h **** 				return true;
 158:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 159:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 160:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Stops the external oscillator of the XMEGA microcontroller. */
 161:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_StopExternalOscillator(void) ATTR_ALWAYS_INLINE;
 162:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_StopExternalOscillator(void)
 163:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 164:./LUFA/Platform/XMEGA/ClockManagement.h **** 				OSC.CTRL     &= ~OSC_XOSCEN_bm;
 165:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 166:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 167:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Starts the given internal oscillator of the XMEGA microcontroller, with the given options. T
 168:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  the oscillator is ready for use.
 169:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 170:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source  Internal oscillator to start, a value from \ref XMEGA_System_ClockSource_
 171:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 172:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the internal oscillator was successfully started, \c false if inv
 173:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 174:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline uint8_t XMEGACLK_StartInternalOscillator(const uint8_t Source) ATTR_ALWAYS_INLINE;
 175:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline uint8_t XMEGACLK_StartInternalOscillator(const uint8_t Source)
 176:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 177:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 178:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 179:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 180:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL |= OSC_RC2MEN_bm;
 181:./LUFA/Platform/XMEGA/ClockManagement.h **** 						while (!(OSC.STATUS & OSC_RC2MRDY_bm));
 182:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 183:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 184:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL |= OSC_RC32MEN_bm;
 185:./LUFA/Platform/XMEGA/ClockManagement.h **** 						while (!(OSC.STATUS & OSC_RC32MRDY_bm));
 186:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 187:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32KHZ:
 188:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL |= OSC_RC32KEN_bm;
 189:./LUFA/Platform/XMEGA/ClockManagement.h **** 						while (!(OSC.STATUS & OSC_RC32KRDY_bm));
 190:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 191:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 192:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 193:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 194:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 195:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 196:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Stops the given internal oscillator of the XMEGA microcontroller.
 197:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 198:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source  Internal oscillator to stop, a value from \ref XMEGA_System_ClockSource_t
 199:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 200:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the internal oscillator was successfully stopped, \c false if inv
 201:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 202:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StopInternalOscillator(const uint8_t Source) ATTR_ALWAYS_INLINE;
 203:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StopInternalOscillator(const uint8_t Source)
 204:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 205:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 206:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 207:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 208:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL &= ~OSC_RC2MEN_bm;
 209:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 210:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 211:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL &= ~OSC_RC32MEN_bm;
 212:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 213:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32KHZ:
 214:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL &= ~OSC_RC32KEN_bm;
 215:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return true;
 216:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 217:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 218:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 219:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 220:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 221:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Starts the PLL of the XMEGA microcontroller, with the given options. This routine blocks unt
 222:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 223:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \attention The output frequency must be equal to or greater than the source frequency.
 224:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 225:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source       Clock source for the PLL, a value from \ref XMEGA_System_ClockSource
 226:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] SourceFreq   Frequency of the PLL's clock source, in Hz.
 227:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Frequency    Target frequency of the PLL's output.
 228:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 229:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the PLL was successfully started, \c false if invalid parameters 
 230:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 231:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartPLL(const uint8_t Source,
 232:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                     const uint32_t SourceFreq,
 233:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                     const uint32_t Frequency) ATTR_ALWAYS_INLINE;
 234:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartPLL(const uint8_t Source,
 235:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                     const uint32_t SourceFreq,
 236:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                     const uint32_t Frequency)
 237:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 238:./LUFA/Platform/XMEGA/ClockManagement.h **** 				uint8_t MulFactor = (Frequency / SourceFreq);
 239:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 240:./LUFA/Platform/XMEGA/ClockManagement.h **** 				if (SourceFreq > Frequency)
 241:./LUFA/Platform/XMEGA/ClockManagement.h **** 				  return false;
 242:./LUFA/Platform/XMEGA/ClockManagement.h **** 				  
 243:./LUFA/Platform/XMEGA/ClockManagement.h **** 				if (MulFactor > 31)
 244:./LUFA/Platform/XMEGA/ClockManagement.h **** 				  return false;
 245:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 246:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 247:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 248:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 249:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.PLLCTRL = (OSC_PLLSRC_RC2M_gc  | MulFactor);
 760               		.loc 4 249 0
 761 0004 80E1      		ldi r24,lo8(16)
 762 0006 E0E5      		ldi r30,lo8(80)
 763 0008 F0E0      		ldi r31,hi8(80)
 764 000a 8583      		std Z+5,r24
 250:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 251:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 252:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.PLLCTRL = (OSC_PLLSRC_RC32M_gc | MulFactor);
 253:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 254:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_XOSC:
 255:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.PLLCTRL = (OSC_PLLSRC_XOSC_gc  | MulFactor);
 256:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 257:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 258:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 259:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 260:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 261:./LUFA/Platform/XMEGA/ClockManagement.h **** 				OSC.CTRL |= OSC_PLLEN_bm;
 765               		.loc 4 261 0
 766 000c 8091 5000 		lds r24,80
 767 0010 8061      		ori r24,lo8(16)
 768 0012 8093 5000 		sts 80,r24
 769               	.L23:
 262:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 263:./LUFA/Platform/XMEGA/ClockManagement.h **** 				while (!(OSC.STATUS & OSC_PLLRDY_bm));
 770               		.loc 4 263 0
 771 0016 8091 5100 		lds r24,81
 772 001a 84FF      		sbrs r24,4
 773 001c 00C0      		rjmp .L23
 774               	.LVL20:
 775               	.LBE87:
 776               	.LBE86:
 777               	.LBB88:
 778               	.LBB89:
 779               	.LBB90:
 780               	.LBB91:
 781               		.file 5 "./LUFA/Drivers/USB/../../Common/Common.h"
   1:./LUFA/Drivers/USB/../../Common/Common.h **** /*
   2:./LUFA/Drivers/USB/../../Common/Common.h ****              LUFA Library
   3:./LUFA/Drivers/USB/../../Common/Common.h ****      Copyright (C) Dean Camera, 2012.
   4:./LUFA/Drivers/USB/../../Common/Common.h **** 
   5:./LUFA/Drivers/USB/../../Common/Common.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Drivers/USB/../../Common/Common.h ****            www.lufa-lib.org
   7:./LUFA/Drivers/USB/../../Common/Common.h **** */
   8:./LUFA/Drivers/USB/../../Common/Common.h **** 
   9:./LUFA/Drivers/USB/../../Common/Common.h **** /*
  10:./LUFA/Drivers/USB/../../Common/Common.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Drivers/USB/../../Common/Common.h **** 
  12:./LUFA/Drivers/USB/../../Common/Common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Drivers/USB/../../Common/Common.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Drivers/USB/../../Common/Common.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Drivers/USB/../../Common/Common.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Drivers/USB/../../Common/Common.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Drivers/USB/../../Common/Common.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Drivers/USB/../../Common/Common.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA/Drivers/USB/../../Common/Common.h ****   software without specific, written prior permission.
  20:./LUFA/Drivers/USB/../../Common/Common.h **** 
  21:./LUFA/Drivers/USB/../../Common/Common.h ****   The author disclaim all warranties with regard to this
  22:./LUFA/Drivers/USB/../../Common/Common.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Drivers/USB/../../Common/Common.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Drivers/USB/../../Common/Common.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Drivers/USB/../../Common/Common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Drivers/USB/../../Common/Common.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Drivers/USB/../../Common/Common.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Drivers/USB/../../Common/Common.h ****   this software.
  29:./LUFA/Drivers/USB/../../Common/Common.h **** */
  30:./LUFA/Drivers/USB/../../Common/Common.h **** 
  31:./LUFA/Drivers/USB/../../Common/Common.h **** /** \dir
  32:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library header files.
  33:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  34:./LUFA/Drivers/USB/../../Common/Common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
  35:./LUFA/Drivers/USB/../../Common/Common.h ****  *  user applications.
  36:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  37:./LUFA/Drivers/USB/../../Common/Common.h **** 
  38:./LUFA/Drivers/USB/../../Common/Common.h **** /** \file
  39:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  41:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \copydetails Group_Common
  42:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  43:./LUFA/Drivers/USB/../../Common/Common.h **** 
  44:./LUFA/Drivers/USB/../../Common/Common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  47:./LUFA/Drivers/USB/../../Common/Common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
  48:./LUFA/Drivers/USB/../../Common/Common.h ****  *  aspects of the library.
  49:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  50:./LUFA/Drivers/USB/../../Common/Common.h ****  *  @{
  51:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  52:./LUFA/Drivers/USB/../../Common/Common.h **** 
  53:./LUFA/Drivers/USB/../../Common/Common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  56:./LUFA/Drivers/USB/../../Common/Common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  58:./LUFA/Drivers/USB/../../Common/Common.h **** 
  59:./LUFA/Drivers/USB/../../Common/Common.h **** #ifndef __LUFA_COMMON_H__
  60:./LUFA/Drivers/USB/../../Common/Common.h **** #define __LUFA_COMMON_H__
  61:./LUFA/Drivers/USB/../../Common/Common.h **** 
  62:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Macros: */
  63:./LUFA/Drivers/USB/../../Common/Common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:./LUFA/Drivers/USB/../../Common/Common.h **** 
  65:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Includes: */
  66:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stdint.h>
  67:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stdbool.h>
  68:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <string.h>
  69:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stddef.h>
  70:./LUFA/Drivers/USB/../../Common/Common.h **** 
  71:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "Architectures.h"
  72:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "BoardTypes.h"
  73:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "ArchitectureSpecific.h"
  74:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "CompilerSpecific.h"
  75:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "Attributes.h"
  76:./LUFA/Drivers/USB/../../Common/Common.h **** 
  77:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "LUFAConfig.h"
  79:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
  80:./LUFA/Drivers/USB/../../Common/Common.h **** 
  81:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(__cplusplus)
  83:./LUFA/Drivers/USB/../../Common/Common.h **** 			extern "C" {
  84:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
  85:./LUFA/Drivers/USB/../../Common/Common.h **** 
  86:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Architecture specific utility includes: */
  87:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(__DOXYGEN__)
  88:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
  92:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/io.h>
  95:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/interrupt.h>
  96:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/pgmspace.h>
  97:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/eeprom.h>
  98:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/boot.h>
  99:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 100:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <util/delay.h>
 101:./LUFA/Drivers/USB/../../Common/Common.h **** 
 102:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 103:./LUFA/Drivers/USB/../../Common/Common.h **** 
 104:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 105:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:./LUFA/Drivers/USB/../../Common/Common.h **** 
 109:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 110:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_UC3)
 111:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr32/io.h>
 112:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 113:./LUFA/Drivers/USB/../../Common/Common.h **** 
 114:./LUFA/Drivers/USB/../../Common/Common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define PROGMEM                  
 116:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define pgm_read_byte(x)         *x
 117:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:./LUFA/Drivers/USB/../../Common/Common.h **** 			// =================================================
 120:./LUFA/Drivers/USB/../../Common/Common.h **** 
 121:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint32_t uint_reg_t;
 122:./LUFA/Drivers/USB/../../Common/Common.h **** 
 123:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_BIG_ENDIAN
 124:./LUFA/Drivers/USB/../../Common/Common.h **** 
 125:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 126:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_XMEGA)
 127:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/io.h>
 128:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/interrupt.h>
 129:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/pgmspace.h>
 130:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/eeprom.h>
 131:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 132:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <util/delay.h>
 133:./LUFA/Drivers/USB/../../Common/Common.h **** 
 134:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 135:./LUFA/Drivers/USB/../../Common/Common.h **** 
 136:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 137:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 138:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 139:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 140:./LUFA/Drivers/USB/../../Common/Common.h **** 
 141:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 142:./LUFA/Drivers/USB/../../Common/Common.h **** 		#else
 143:./LUFA/Drivers/USB/../../Common/Common.h **** 			#error Unknown device architecture specified.
 144:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
 145:./LUFA/Drivers/USB/../../Common/Common.h **** 
 146:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Public Interface - May be used in end-application: */
 147:./LUFA/Drivers/USB/../../Common/Common.h **** 		/* Macros: */
 148:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Macro for encasing other multi-statement macros. This should be used along with an opening b
 149:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  before the start of any multi-statement macro, so that the macros contents as a whole are tr
 150:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  as a discrete block and not as a list of separate statements which may cause problems when u
 151:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  a block (such as inline \c if statements).
 152:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 153:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define MACROS                  do
 154:./LUFA/Drivers/USB/../../Common/Common.h **** 
 155:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Macro for encasing other multi-statement macros. This should be used along with a preceding 
 156:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  brace at the end of any multi-statement macro, so that the macros contents as a whole are tr
 157:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  as a discrete block and not as a list of separate statements which may cause problems when u
 158:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  a block (such as inline \c if statements).
 159:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 160:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define MACROE                  while (0)
 161:./LUFA/Drivers/USB/../../Common/Common.h **** 
 162:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Convenience macro to determine the larger of two values.
 163:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 164:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 165:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *             multiple times.
 166:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 167:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 168:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 169:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 170:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return The larger of the two input parameters
 171:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 172:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 173:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 174:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 175:./LUFA/Drivers/USB/../../Common/Common.h **** 
 176:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Convenience macro to determine the smaller of two values.
 177:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 178:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 179:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *             multiple times.
 180:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 181:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 182:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 183:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 184:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return The smaller of the two input parameters
 185:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 186:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 187:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 188:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 189:./LUFA/Drivers/USB/../../Common/Common.h **** 
 190:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 191:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 192:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  marks around the input, converting the source into a string literal.
 193:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 194:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 195:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 196:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return String version of the input.
 197:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 198:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define STRINGIFY(x)            #x
 199:./LUFA/Drivers/USB/../../Common/Common.h **** 
 200:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 201:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 202:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 203:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 204:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 205:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return String version of the expanded input.
 206:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 207:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 208:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 209:./LUFA/Drivers/USB/../../Common/Common.h **** 
 210:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 211:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 212:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 213:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  state with unintentional side-effects.
 214:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 215:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 216:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 217:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 218:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 219:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 220:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 221:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \ingroup Group_GlobalInt
 222:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 223:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 224:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 225:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 226:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 227:./LUFA/Drivers/USB/../../Common/Common.h **** 
 228:./LUFA/Drivers/USB/../../Common/Common.h **** 		/* Inline Functions: */
 229:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 230:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  etc.
 231:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 232:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 233:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 234:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 235:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 236:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 237:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 238:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 239:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 240:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 241:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 242:./LUFA/Drivers/USB/../../Common/Common.h **** 
 243:./LUFA/Drivers/USB/../../Common/Common.h **** 				return Byte;
 244:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 245:./LUFA/Drivers/USB/../../Common/Common.h **** 
 246:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 247:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 248:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  may be slightly higher.
 249:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 250:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
 251:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 252:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 253:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 254:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 255:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 256:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 257:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 258:./LUFA/Drivers/USB/../../Common/Common.h **** 					_delay_ms(Milliseconds);
 259:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 260:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 261:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 262:./LUFA/Drivers/USB/../../Common/Common.h **** 					while (Milliseconds--)
 263:./LUFA/Drivers/USB/../../Common/Common.h **** 					  _delay_ms(1);
 264:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 265:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 266:./LUFA/Drivers/USB/../../Common/Common.h **** 				while (Milliseconds--)
 267:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 268:./LUFA/Drivers/USB/../../Common/Common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 269:./LUFA/Drivers/USB/../../Common/Common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 270:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 271:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 272:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 273:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 274:./LUFA/Drivers/USB/../../Common/Common.h **** 					_delay_ms(Milliseconds);
 275:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 276:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 277:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 278:./LUFA/Drivers/USB/../../Common/Common.h **** 					while (Milliseconds--)
 279:./LUFA/Drivers/USB/../../Common/Common.h **** 					  _delay_ms(1);
 280:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 281:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 282:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 283:./LUFA/Drivers/USB/../../Common/Common.h **** 
 284:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 285:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 286:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 287:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 288:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 289:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 290:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 291:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 292:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 293:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 294:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 295:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 782               		.loc 5 295 0
 296:./LUFA/Drivers/USB/../../Common/Common.h **** 
 297:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 298:./LUFA/Drivers/USB/../../Common/Common.h **** 				return SREG;
 299:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 300:./LUFA/Drivers/USB/../../Common/Common.h **** 				return __builtin_mfsr(AVR32_SR);
 301:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 302:./LUFA/Drivers/USB/../../Common/Common.h **** 				return SREG;
 783               		.loc 5 302 0
 784 001e 2FB7      		in r18,__SREG__
 785               	.LBE91:
 786               	.LBE90:
 787               	.LBB92:
 788               	.LBB93:
 303:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 304:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 305:./LUFA/Drivers/USB/../../Common/Common.h **** 
 306:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 307:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
 308:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 309:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 310:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 311:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 312:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 313:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 314:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 315:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 316:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 317:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 318:./LUFA/Drivers/USB/../../Common/Common.h **** 
 319:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 320:./LUFA/Drivers/USB/../../Common/Common.h **** 				SREG = GlobalIntState;
 321:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 322:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 323:./LUFA/Drivers/USB/../../Common/Common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 324:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 325:./LUFA/Drivers/USB/../../Common/Common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 326:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 327:./LUFA/Drivers/USB/../../Common/Common.h **** 				SREG = GlobalIntState;
 328:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 329:./LUFA/Drivers/USB/../../Common/Common.h **** 
 330:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 331:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 332:./LUFA/Drivers/USB/../../Common/Common.h **** 
 333:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 334:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 335:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 336:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 337:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 338:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void)
 339:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 340:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 341:./LUFA/Drivers/USB/../../Common/Common.h **** 
 342:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 343:./LUFA/Drivers/USB/../../Common/Common.h **** 				sei();
 344:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 345:./LUFA/Drivers/USB/../../Common/Common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 346:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 347:./LUFA/Drivers/USB/../../Common/Common.h **** 				sei();
 348:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 349:./LUFA/Drivers/USB/../../Common/Common.h **** 
 350:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 351:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 352:./LUFA/Drivers/USB/../../Common/Common.h **** 
 353:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Disabled global interrupt handling for the device, preventing interrupts from being handled.
 354:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 355:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 356:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 357:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void) ATTR_ALWAYS_INLINE;
 358:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void)
 359:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 360:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 789               		.loc 5 360 0
 361:./LUFA/Drivers/USB/../../Common/Common.h **** 
 362:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 363:./LUFA/Drivers/USB/../../Common/Common.h **** 				cli();
 364:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 365:./LUFA/Drivers/USB/../../Common/Common.h **** 				__builtin_ssrf(AVR32_SR_GM_OFFSET);
 366:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 367:./LUFA/Drivers/USB/../../Common/Common.h **** 				cli();
 790               		.loc 5 367 0
 791               	/* #APP */
 792               	 ;  367 "./LUFA/Drivers/USB/../../Common/Common.h" 1
 793 0020 F894      		cli
 794               	 ;  0 "" 2
 368:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 369:./LUFA/Drivers/USB/../../Common/Common.h **** 
 370:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 795               		.loc 5 370 0
 796               	.LVL21:
 797               	/* #NOAPP */
 798               	.LBE93:
 799               	.LBE92:
 800               	.LBB94:
 801               	.LBB95:
 129:./LUFA/Platform/XMEGA/ClockManagement.h **** 				__asm__ __volatile__ (
 802               		.loc 4 129 0
 803 0022 34E0      		ldi r19,lo8(4)
 804 0024 88ED      		ldi r24,lo8(216)
 805 0026 90E0      		ldi r25,hi8(216)
 806 0028 A0E4      		ldi r26,lo8(64)
 807 002a B0E0      		ldi r27,hi8(64)
 808               	/* #APP */
 809               	 ;  129 "./LUFA/Platform/XMEGA/ClockManagement.h" 1
 810 002c 1BBE      		out 59, __zero_reg__
 811 002e FD01      		movw r30, r26
 812 0030 84BF      		out 52, r24
 813 0032 3083      		st Z, r19
 814               		
 815               	 ;  0 "" 2
 816               	.LVL22:
 817               	/* #NOAPP */
 818               	.LBE95:
 819               	.LBE94:
 820               	.LBB96:
 821               	.LBB97:
 317:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 822               		.loc 5 317 0
 327:./LUFA/Drivers/USB/../../Common/Common.h **** 				SREG = GlobalIntState;
 823               		.loc 5 327 0
 824 0034 2FBF      		out __SREG__,r18
 330:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 825               		.loc 5 330 0
 826               	.LVL23:
 827               	.LBE97:
 828               	.LBE96:
 829               	.LBB98:
 830               	.LBB99:
 831               	.LBB100:
 164:/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.2/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 832               		.loc 3 164 0
 833 0036 8FE3      		 ldi r24,lo8(7999)
 834 0038 9FE1      	    ldi r25,hi8(7999)
 835 003a 0197      	    1:sbiw r24,1
 836 003c 01F4      	    brne 1b
 837 003e 00C0      		rjmp .
 838 0040 0000      		nop
 839               	.LBE100:
 840               	.LBE99:
 841               	.LBE98:
 264:./LUFA/Platform/XMEGA/ClockManagement.h **** 				return true;
 265:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 266:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 267:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Stops the PLL of the XMEGA microcontroller. */
 268:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_StopPLL(void) ATTR_ALWAYS_INLINE;
 269:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline void XMEGACLK_StopPLL(void)
 270:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 271:./LUFA/Platform/XMEGA/ClockManagement.h **** 				OSC.CTRL &= ~OSC_PLLEN_bm;
 272:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 273:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 274:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Starts the DFLL of the XMEGA microcontroller, with the given options.
 275:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 276:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source     RC Clock source for the DFLL, a value from \ref XMEGA_System_ClockSour
 277:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Reference  Reference clock source for the DFLL, an value from \ref XMEGA_System_D
 278:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Frequency  Target frequency of the DFLL's output.
 279:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 280:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the DFLL was successfully started, \c false if invalid parameters
 281:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 282:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartDFLL(const uint8_t Source,
 283:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                      const uint8_t Reference,
 284:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                      const uint32_t Frequency) ATTR_ALWAYS_INLINE;
 285:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StartDFLL(const uint8_t Source,
 286:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                      const uint8_t Reference,
 287:./LUFA/Platform/XMEGA/ClockManagement.h **** 			                                      const uint32_t Frequency)
 288:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 289:./LUFA/Platform/XMEGA/ClockManagement.h **** 				uint16_t DFLLCompare = (Frequency / 1000);
 290:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 291:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 292:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 293:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 294:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.DFLLCTRL   |= (Reference << OSC_RC2MCREF_bp);
 295:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC2M.COMP1  = (DFLLCompare & 0xFF);
 296:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC2M.COMP2  = (DFLLCompare >> 8);
 297:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC2M.CTRL   = DFLL_ENABLE_bm;
 298:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 299:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 300:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.DFLLCTRL   |= (Reference << OSC_RC32MCREF_gp);
 301:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.COMP1 = (DFLLCompare & 0xFF);
 302:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.COMP2 = (DFLLCompare >> 8);
 303:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 304:./LUFA/Platform/XMEGA/ClockManagement.h **** 						if (Reference == DFLL_REF_INT_USBSOF)
 305:./LUFA/Platform/XMEGA/ClockManagement.h **** 						{
 306:./LUFA/Platform/XMEGA/ClockManagement.h **** 							NVM.CMD        = NVM_CMD_READ_CALIB_ROW_gc;
 307:./LUFA/Platform/XMEGA/ClockManagement.h **** 							DFLLRC32M.CALA = pgm_read_byte(offsetof(NVM_PROD_SIGNATURES_t, USBRCOSCA));
 308:./LUFA/Platform/XMEGA/ClockManagement.h **** 							DFLLRC32M.CALB = pgm_read_byte(offsetof(NVM_PROD_SIGNATURES_t, USBRCOSC));
 309:./LUFA/Platform/XMEGA/ClockManagement.h **** 							NVM.CMD        = 0;
 310:./LUFA/Platform/XMEGA/ClockManagement.h **** 						}
 311:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 312:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.CTRL  = DFLL_ENABLE_bm;
 313:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 314:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 315:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 316:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 317:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 318:./LUFA/Platform/XMEGA/ClockManagement.h **** 				return true;
 319:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 320:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 321:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Stops the given DFLL of the XMEGA microcontroller.
 322:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 323:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source  RC Clock source for the DFLL to be stopped, a value from \ref XMEGA_Syste
 324:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 325:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the DFLL was successfully stopped, \c false if invalid parameters
 326:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 327:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StopDFLL(const uint8_t Source) ATTR_ALWAYS_INLINE;
 328:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_StopDFLL(const uint8_t Source)
 329:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 330:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 331:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 332:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 333:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC2M.CTRL = 0;
 334:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 335:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 336:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.CTRL = 0;
 337:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 338:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 339:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 340:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 341:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 342:./LUFA/Platform/XMEGA/ClockManagement.h **** 				return true;
 343:./LUFA/Platform/XMEGA/ClockManagement.h **** 			}
 344:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 345:./LUFA/Platform/XMEGA/ClockManagement.h **** 			/** Sets the clock source for the main microcontroller core. The given clock source should be co
 346:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  and ready for use before this function is called.
 347:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 348:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \param[in] Source      Clock source for the CPU core, a value from \ref XMEGA_System_ClockSo
 349:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *
 350:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 *  \return Boolean \c true if the CPU core clock was successfully altered, \c false if invalid 
 351:./LUFA/Platform/XMEGA/ClockManagement.h **** 			 */
 352:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_SetCPUClockSource(const uint8_t Source) ATTR_ALWAYS_INLINE;
 353:./LUFA/Platform/XMEGA/ClockManagement.h **** 			static inline bool XMEGACLK_SetCPUClockSource(const uint8_t Source)
 354:./LUFA/Platform/XMEGA/ClockManagement.h **** 			{
 355:./LUFA/Platform/XMEGA/ClockManagement.h **** 				uint8_t ClockSourceMask = 0;
 356:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 357:./LUFA/Platform/XMEGA/ClockManagement.h **** 				switch (Source)
 358:./LUFA/Platform/XMEGA/ClockManagement.h **** 				{
 359:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC2MHZ:
 360:./LUFA/Platform/XMEGA/ClockManagement.h **** 						ClockSourceMask = CLK_SCLKSEL_RC2M_gc;
 361:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 362:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32MHZ:
 363:./LUFA/Platform/XMEGA/ClockManagement.h **** 						ClockSourceMask = CLK_SCLKSEL_RC32M_gc;
 364:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 365:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_INT_RC32KHZ:
 366:./LUFA/Platform/XMEGA/ClockManagement.h **** 						ClockSourceMask = CLK_SCLKSEL_RC32K_gc;
 367:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 368:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_XOSC:
 369:./LUFA/Platform/XMEGA/ClockManagement.h **** 						ClockSourceMask = CLK_SCLKSEL_XOSC_gc;
 370:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 371:./LUFA/Platform/XMEGA/ClockManagement.h **** 					case CLOCK_SRC_PLL:
 372:./LUFA/Platform/XMEGA/ClockManagement.h **** 						ClockSourceMask = CLK_SCLKSEL_PLL_gc;
 373:./LUFA/Platform/XMEGA/ClockManagement.h **** 						break;
 374:./LUFA/Platform/XMEGA/ClockManagement.h **** 					default:
 375:./LUFA/Platform/XMEGA/ClockManagement.h **** 						return false;
 376:./LUFA/Platform/XMEGA/ClockManagement.h **** 				}
 377:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 378:./LUFA/Platform/XMEGA/ClockManagement.h **** 				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
 379:./LUFA/Platform/XMEGA/ClockManagement.h **** 				GlobalInterruptDisable();
 380:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 381:./LUFA/Platform/XMEGA/ClockManagement.h **** 				XMEGACLK_CCP_Write(&CLK.CTRL, ClockSourceMask);
 382:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 383:./LUFA/Platform/XMEGA/ClockManagement.h **** 				SetGlobalInterruptMask(CurrentGlobalInt);
 384:./LUFA/Platform/XMEGA/ClockManagement.h **** 
 385:./LUFA/Platform/XMEGA/ClockManagement.h **** 				Delay_MS(1);
 386:./LUFA/Platform/XMEGA/ClockManagement.h **** 				return (CLK.CTRL == ClockSourceMask);
 842               		.loc 4 386 0
 843 0042 8091 4000 		lds r24,64
 844               	.LVL24:
 845               	.LBE89:
 846               	.LBE88:
 847               	.LBB101:
 848               	.LBB102:
 184:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.CTRL |= OSC_RC32MEN_bm;
 849               		.loc 4 184 0
 850 0046 8091 5000 		lds r24,80
 851 004a 8260      		ori r24,lo8(2)
 852 004c 8093 5000 		sts 80,r24
 853               	.L24:
 185:./LUFA/Platform/XMEGA/ClockManagement.h **** 						while (!(OSC.STATUS & OSC_RC32MRDY_bm));
 854               		.loc 4 185 0
 855 0050 8091 5100 		lds r24,81
 856 0054 81FF      		sbrs r24,1
 857 0056 00C0      		rjmp .L24
 858               	.LVL25:
 859               	.LBE102:
 860               	.LBE101:
 861               	.LBB103:
 862               	.LBB104:
 300:./LUFA/Platform/XMEGA/ClockManagement.h **** 						OSC.DFLLCTRL   |= (Reference << OSC_RC32MCREF_gp);
 863               		.loc 4 300 0
 864 0058 8091 5600 		lds r24,86
 865 005c 8460      		ori r24,lo8(4)
 866 005e E0E5      		ldi r30,lo8(80)
 867 0060 F0E0      		ldi r31,hi8(80)
 868 0062 8683      		std Z+6,r24
 301:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.COMP1 = (DFLLCompare & 0xFF);
 869               		.loc 4 301 0
 870 0064 A0E6      		ldi r26,lo8(96)
 871 0066 B0E0      		ldi r27,hi8(96)
 872 0068 80E8      		ldi r24,lo8(-128)
 873 006a 1596      		adiw r26,5
 874 006c 8C93      		st X,r24
 875 006e 1597      		sbiw r26,5
 302:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.COMP2 = (DFLLCompare >> 8);
 876               		.loc 4 302 0
 877 0070 8BEB      		ldi r24,lo8(-69)
 878 0072 1696      		adiw r26,6
 879 0074 8C93      		st X,r24
 880 0076 1697      		sbiw r26,6
 306:./LUFA/Platform/XMEGA/ClockManagement.h **** 							NVM.CMD        = NVM_CMD_READ_CALIB_ROW_gc;
 881               		.loc 4 306 0
 882 0078 C0EC      		ldi r28,lo8(448)
 883 007a D1E0      		ldi r29,hi8(448)
 884 007c 82E0      		ldi r24,lo8(2)
 885 007e 8A87      		std Y+10,r24
 886               	.LVL26:
 887               	.LBB105:
 307:./LUFA/Platform/XMEGA/ClockManagement.h **** 							DFLLRC32M.CALA = pgm_read_byte(offsetof(NVM_PROD_SIGNATURES_t, USBRCOSCA));
 888               		.loc 4 307 0
 889 0080 EDE1      		ldi r30,lo8(29)
 890 0082 F0E0      		ldi r31,hi8(29)
 891               	/* #APP */
 892               	 ;  307 "./LUFA/Platform/XMEGA/ClockManagement.h" 1
 893 0084 E491      		lpm r30, Z
 894               		
 895               	 ;  0 "" 2
 896               	.LVL27:
 897               	/* #NOAPP */
 898               	.LBE105:
 899 0086 1296      		adiw r26,2
 900 0088 EC93      		st X,r30
 901 008a 1297      		sbiw r26,2
 902               	.LVL28:
 903               	.LBB106:
 308:./LUFA/Platform/XMEGA/ClockManagement.h **** 							DFLLRC32M.CALB = pgm_read_byte(offsetof(NVM_PROD_SIGNATURES_t, USBRCOSC));
 904               		.loc 4 308 0
 905 008c ECE1      		ldi r30,lo8(28)
 906 008e F0E0      		ldi r31,hi8(28)
 907               	.LVL29:
 908               	/* #APP */
 909               	 ;  308 "./LUFA/Platform/XMEGA/ClockManagement.h" 1
 910 0090 E491      		lpm r30, Z
 911               		
 912               	 ;  0 "" 2
 913               	.LVL30:
 914               	/* #NOAPP */
 915               	.LBE106:
 916 0092 1396      		adiw r26,3
 917 0094 EC93      		st X,r30
 309:./LUFA/Platform/XMEGA/ClockManagement.h **** 							NVM.CMD        = 0;
 918               		.loc 4 309 0
 919 0096 1A86      		std Y+10,__zero_reg__
 312:./LUFA/Platform/XMEGA/ClockManagement.h **** 						DFLLRC32M.CTRL  = DFLL_ENABLE_bm;
 920               		.loc 4 312 0
 921 0098 81E0      		ldi r24,lo8(1)
 922 009a 8093 6000 		sts 96,r24
 923               	.LBE104:
 924               	.LBE103:
 213:usbExample.c  **** 	// Start the PLL to multiply the 2MHz RC oscillator to 32MHz and switch the CPU core to run from i
 214:usbExample.c  **** 	XMEGACLK_StartPLL(CLOCK_SRC_INT_RC2MHZ, 2000000, F_CPU);
 215:usbExample.c  **** 	XMEGACLK_SetCPUClockSource(CLOCK_SRC_PLL);
 216:usbExample.c  **** 
 217:usbExample.c  **** 	// Start the 32MHz internal RC oscillator and start the DFLL to increase it to 48MHz using the USB
 218:usbExample.c  **** 	XMEGACLK_StartInternalOscillator(CLOCK_SRC_INT_RC32MHZ);
 219:usbExample.c  **** 	XMEGACLK_StartDFLL(CLOCK_SRC_INT_RC32MHZ, DFLL_REF_INT_USBSOF, F_USB);
 220:usbExample.c  **** 
 221:usbExample.c  **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
 925               		.loc 2 221 0
 926 009e 87E0      		ldi r24,lo8(7)
 927 00a0 E0EA      		ldi r30,lo8(160)
 928 00a2 F0E0      		ldi r31,hi8(160)
 929               	.LVL31:
 930 00a4 8283      		std Z+2,r24
 222:usbExample.c  **** 
 223:usbExample.c  **** 	/* Hardware Initialization */
 224:usbExample.c  **** 	USB_Init();
 931               		.loc 2 224 0
 932 00a6 0E94 0000 		call USB_Init
 933               	.LVL32:
 934               	/* epilogue start */
 225:usbExample.c  **** }
 935               		.loc 2 225 0
 936 00aa DF91      		pop r29
 937 00ac CF91      		pop r28
 938 00ae 0895      		ret
 939               		.cfi_endproc
 940               	.LFE105:
 942               		.section	.text.setupIO,"ax",@progbits
 943               	.global	setupIO
 945               	setupIO:
 946               	.LFB106:
 226:usbExample.c  **** 
 227:usbExample.c  **** void setupIO(void){
 947               		.loc 2 227 0
 948               		.cfi_startproc
 949               	/* prologue: function */
 950               	/* frame size = 0 */
 951               	/* stack size = 0 */
 952               	.L__stack_usage = 0
 228:usbExample.c  **** 	PORTE.DIRSET |= _BV(0); // DEBUG: Set pin E0 as OUTPUT
 953               		.loc 2 228 0
 954 0000 E0E8      		ldi r30,lo8(1664)
 955 0002 F6E0      		ldi r31,hi8(1664)
 956 0004 8181      		ldd r24,Z+1
 957 0006 8160      		ori r24,lo8(1)
 958 0008 8183      		std Z+1,r24
 959               	/* epilogue start */
 229:usbExample.c  **** }
 960               		.loc 2 229 0
 961 000a 0895      		ret
 962               		.cfi_endproc
 963               	.LFE106:
 965               		.section	.text.interruptInit,"ax",@progbits
 966               	.global	interruptInit
 968               	interruptInit:
 969               	.LFB107:
 230:usbExample.c  **** 
 231:usbExample.c  **** void interruptInit(void){
 970               		.loc 2 231 0
 971               		.cfi_startproc
 972               	/* prologue: function */
 973               	/* frame size = 0 */
 974               	/* stack size = 0 */
 975               	.L__stack_usage = 0
 232:usbExample.c  **** 		/* Timer for keeping track of milliseconds:
 233:usbExample.c  **** 	 * The result of this triggers the interrupt once per millisecond.
 234:usbExample.c  **** 	 */
 235:usbExample.c  **** 	TCC0.PER = 6000;// Set HIGH to 4000
 976               		.loc 2 235 0
 977 0000 E0E0      		ldi r30,lo8(2048)
 978 0002 F8E0      		ldi r31,hi8(2048)
 979 0004 80E7      		ldi r24,lo8(6000)
 980 0006 97E1      		ldi r25,hi8(6000)
 981 0008 86A3      		std Z+38,r24
 982 000a 97A3      		std Z+39,r25
 236:usbExample.c  **** 	TCC0.CTRLA = ( TCC0.CTRLA & ~TC0_CLKSEL_gm ) | TC_CLKSEL_DIV8_gc; // Work from CPUCLK/8
 983               		.loc 2 236 0
 984 000c 8081      		ld r24,Z
 985 000e 807F      		andi r24,lo8(-16)
 986 0010 8460      		ori r24,lo8(4)
 987 0012 8083      		st Z,r24
 237:usbExample.c  **** 	TCC0.INTCTRLA = ( TCC0.INTCTRLA & ~TC0_OVFINTLVL_gm ) | TC_OVFINTLVL_HI_gc; // Enable overflow int
 988               		.loc 2 237 0
 989 0014 8681      		ldd r24,Z+6
 990 0016 8360      		ori r24,lo8(3)
 991 0018 8683      		std Z+6,r24
 238:usbExample.c  **** 	// Enable low interrupt level in PMIC and enable global interrupts.
 239:usbExample.c  **** 	PMIC.CTRL |= PMIC_HILVLEN_bm;
 992               		.loc 2 239 0
 993 001a E0EA      		ldi r30,lo8(160)
 994 001c F0E0      		ldi r31,hi8(160)
 995 001e 8281      		ldd r24,Z+2
 996 0020 8460      		ori r24,lo8(4)
 997 0022 8283      		std Z+2,r24
 240:usbExample.c  **** 	sei();
 998               		.loc 2 240 0
 999               	/* #APP */
 1000               	 ;  240 "usbExample.c" 1
 1001 0024 7894      		sei
 1002               	 ;  0 "" 2
 1003               	/* epilogue start */
 241:usbExample.c  **** }
 1004               		.loc 2 241 0
 1005               	/* #NOAPP */
 1006 0026 0895      		ret
 1007               		.cfi_endproc
 1008               	.LFE107:
 1010               		.section	.text.startup.main,"ax",@progbits
 1011               	.global	main
 1013               	main:
 1014               	.LFB108:
 242:usbExample.c  **** 
 243:usbExample.c  **** /** Main program entry point. This routine contains the overall program flow, including initial
 244:usbExample.c  ****  *  setup of all components and the main program loop.
 245:usbExample.c  ****  */
 246:usbExample.c  **** int main(void)
 247:usbExample.c  **** {
 1015               		.loc 2 247 0
 1016               		.cfi_startproc
 1017               	/* prologue: function */
 1018               	/* frame size = 0 */
 1019               	/* stack size = 0 */
 1020               	.L__stack_usage = 0
 248:usbExample.c  **** 	SetupHardware();
 1021               		.loc 2 248 0
 1022 0000 0E94 0000 		call SetupHardware
 249:usbExample.c  **** 	setupIO();
 1023               		.loc 2 249 0
 1024 0004 0E94 0000 		call setupIO
 250:usbExample.c  **** 	interruptInit();
 1025               		.loc 2 250 0
 1026 0008 0E94 0000 		call interruptInit
 251:usbExample.c  **** 	/* Create a regular character stream for the interface so that it can be used with the stdio.h fun
 252:usbExample.c  **** 	CDC_Device_CreateStream(&VirtualSerial_CDC_Interface, &USBSerialStream);
 1027               		.loc 2 252 0
 1028 000c 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1029 000e 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1030 0010 60E0      		ldi r22,lo8(USBSerialStream)
 1031 0012 70E0      		ldi r23,hi8(USBSerialStream)
 1032 0014 0E94 0000 		call CDC_Device_CreateStream
 253:usbExample.c  **** 
 254:usbExample.c  **** 	sei();
 1033               		.loc 2 254 0
 1034               	/* #APP */
 1035               	 ;  254 "usbExample.c" 1
 1036 0018 7894      		sei
 1037               	 ;  0 "" 2
 1038               	/* #NOAPP */
 1039               	.L30:
 255:usbExample.c  **** 	
 256:usbExample.c  **** 	while (1)
 257:usbExample.c  **** 	{
 258:usbExample.c  **** 		
 259:usbExample.c  **** 		/* Must throw away unused bytes from the host, or it will lock up while waiting for the device */
 260:usbExample.c  **** 		CDC_Device_ReceiveByte(&VirtualSerial_CDC_Interface);
 1040               		.loc 2 260 0 discriminator 1
 1041 001a 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1042 001c 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1043 001e 0E94 0000 		call CDC_Device_ReceiveByte
 261:usbExample.c  **** 		CDC_Device_USBTask(&VirtualSerial_CDC_Interface);
 1044               		.loc 2 261 0 discriminator 1
 1045 0022 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1046 0024 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1047 0026 0E94 0000 		call CDC_Device_USBTask
 262:usbExample.c  **** 		USB_USBTask();
 1048               		.loc 2 262 0 discriminator 1
 1049 002a 0E94 0000 		call USB_USBTask
 1050 002e 00C0      		rjmp .L30
 1051               		.cfi_endproc
 1052               	.LFE108:
 1054               	.global	VirtualSerial_CDC_Interface
 1055               		.data
 1058               	VirtualSerial_CDC_Interface:
 1059 0000 00        		.byte	0
 1060 0001 83        		.byte	-125
 1061 0002 1000      		.word	16
 1062 0004 00        		.skip 1,0
 1063 0005 01        		.byte	1
 1064 0006 04        		.byte	4
 1065 0007 1000      		.word	16
 1066 0009 00        		.skip 1,0
 1067 000a 01        		.byte	1
 1068 000b 82        		.byte	-126
 1069 000c 0800      		.word	8
 1070 000e 00        		.skip 1,0
 1071 000f 01        		.byte	1
 1072 0010 0000 0000 		.skip 11,0
 1072      0000 0000 
 1072      0000 00
 1073               	.global	elapsedMillis
 1074               	.global	elapsedMillis
 1075               		.section .bss
 1078               	elapsedMillis:
 1079 0000 0000 0000 		.skip 4,0
 1080               		.lcomm USBSerialStream,14
 1081               		.text
 1082               	.Letext0:
 1083               		.file 6 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
 1084               		.file 7 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
 1085               		.file 8 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
 1086               		.file 9 "./LUFA/Drivers/USB/Core/XMEGA/USBController_XMEGA.h"
 1087               		.file 10 "./LUFA/Drivers/USB/Core/XMEGA/../Endpoint.h"
 1088               		.file 11 "./LUFA/Drivers/USB/Class/Device/../Common/CDCClassCommon.h"
 1089               		.file 12 "./LUFA/Drivers/USB/Class/Device/CDCClassDevice.h"
 1090               		.file 13 "./LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbExample.c
     /tmp/cczyoqcx.s:2      *ABS*:0000003f __SREG__
     /tmp/cczyoqcx.s:3      *ABS*:0000003e __SP_H__
     /tmp/cczyoqcx.s:4      *ABS*:0000003d __SP_L__
     /tmp/cczyoqcx.s:5      *ABS*:00000034 __CCP__
     /tmp/cczyoqcx.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cczyoqcx.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cczyoqcx.s:15     .text.Endpoint_SelectEndpoint:00000000 Endpoint_SelectEndpoint
     /tmp/cczyoqcx.s:98     .text.EVENT_USB_Device_Connect:00000000 EVENT_USB_Device_Connect
     /tmp/cczyoqcx.s:116    .text.EVENT_USB_Device_Disconnect:00000000 EVENT_USB_Device_Disconnect
     /tmp/cczyoqcx.s:133    .text.EVENT_USB_Device_ControlRequest:00000000 EVENT_USB_Device_ControlRequest
     /tmp/cczyoqcx.s:1058   .data:00000000 VirtualSerial_CDC_Interface
     /tmp/cczyoqcx.s:154    .text.process_SET_GOAL:00000000 process_SET_GOAL
     /tmp/cczyoqcx.s:241    .text.process_SET_STOP:00000000 process_SET_STOP
     /tmp/cczyoqcx.s:302    .text.process_GET_STATUS:00000000 process_GET_STATUS
     /tmp/cczyoqcx.s:422    .text.process_GET_POSE:00000000 process_GET_POSE
     /tmp/cczyoqcx.s:539    .text.delay_ms:00000000 delay_ms
     /tmp/cczyoqcx.s:583    .text.millis:00000000 millis
     /tmp/cczyoqcx.s:1078   .bss:00000000 elapsedMillis
     /tmp/cczyoqcx.s:617    .text.blink:00000000 blink
     /tmp/cczyoqcx.s:676    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
     /tmp/cczyoqcx.s:703    .text.signum:00000000 signum
     /tmp/cczyoqcx.s:740    .text.SetupHardware:00000000 SetupHardware
     /tmp/cczyoqcx.s:945    .text.setupIO:00000000 setupIO
     /tmp/cczyoqcx.s:968    .text.interruptInit:00000000 interruptInit
     /tmp/cczyoqcx.s:1013   .text.startup.main:00000000 main
                             .bss:00000004 USBSerialStream

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
USB_Endpoint_SelectedEndpoint
USB_Endpoint_FIFOs
USB_Endpoint_SelectedFIFO
USB_Endpoint_SelectedHandle
CDC_Device_ProcessControlRequest
Endpoint_Read_Control_Stream_LE
Endpoint_ClearStatusStage
Endpoint_Write_Stream_LE
CDC_Device_ConfigureEndpoints
USB_Init
CDC_Device_CreateStream
CDC_Device_ReceiveByte
CDC_Device_USBTask
USB_USBTask
