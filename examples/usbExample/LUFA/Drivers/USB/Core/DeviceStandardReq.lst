   1               		.file	"DeviceStandardReq.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.Endpoint_SelectEndpoint,"ax",@progbits
  15               	Endpoint_SelectEndpoint:
  16               	.LFB22:
  17               		.file 1 "LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h"
   1:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /*
   2:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****              LUFA Library
   3:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****      Copyright (C) Dean Camera, 2012.
   4:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
   5:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****            www.lufa-lib.org
   7:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** */
   8:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
   9:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /*
  10:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  12:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   all copies and that both that the copyright notice and this
  16:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   documentation, and that the name of the author not be used in
  18:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software without specific, written prior permission.
  20:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  21:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   The author disclaim all warranties with regard to this
  22:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   software, including all implied warranties of merchantability
  23:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   special, indirect or consequential damages or any damages
  25:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   arising out of or in connection with the use or performance of
  28:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****   this software.
  29:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** */
  30:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  31:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \file
  32:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief USB Endpoint definitions for the AVR XMEGA microcontrollers.
  33:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \copydetails Group_EndpointManagement_XMEGA
  34:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  35:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  38:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  39:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointRW
  40:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointRW_XMEGA Endpoint Data Reading and Writing (XMEGA)
  41:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR XMEGA architecture.
  42:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  43:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  45:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  46:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointPrimitiveRW_XMEGA Read/Write of Primitive Data Types (XMEGA)
  48:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR XMEGA architecture.
  49:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  50:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  from and to endpoints.
  52:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  53:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  54:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointPacketManagement_XMEGA Endpoint Packet Management (XMEGA)
  56:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR XMEGA architecture.
  57:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  58:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  60:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  61:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** /** \ingroup Group_EndpointManagement
  62:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \defgroup Group_EndpointManagement_XMEGA Endpoint Management (XMEGA)
  63:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  \brief Endpoint management definitions for the Atmel AVR XMEGA architecture.
  64:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  65:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  send/receive functions for various data types.
  68:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *
  69:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  *  @{
  70:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h ****  */
  71:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  72:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** #ifndef __ENDPOINT_XMEGA_H__
  73:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** #define __ENDPOINT_XMEGA_H__
  74:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  75:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Includes: */
  76:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../../../../Common/Common.h"
  77:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBTask.h"
  78:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBInterrupt.h"
  79:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#include "../USBController.h"
  80:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  81:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Enable C linkage for C++ Compilers: */
  82:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#if defined(__cplusplus)
  83:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern "C" {
  84:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#endif
  85:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  86:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Preprocessor Checks: */
  87:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  88:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  89:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		#endif
  90:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
  91:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Public Interface - May be used in end-application: */
  92:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Macros: */
  93:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#if (!defined(MAX_ENDPOINT_INDEX) && !defined(CONTROL_ONLY_DEVICE)) || defined(__DOXYGEN__)
  94:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
  95:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
  96:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
  97:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 */
  98:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            16
  99:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#else
 100:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#if defined(CONTROL_ONLY_DEVICE)
 101:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        1
 102:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#else
 103:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        (MAX_ENDPOINT_INDEX + 1)
 104:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#endif
 105:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#endif
 106:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 107:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Private Interface - For use in library only: */
 108:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	#if !defined(__DOXYGEN__)
 109:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Type Defines: */
 110:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			typedef struct
 111:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 112:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Data[64];
 113:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 114:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Length;
 115:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t Position;
 116:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			} Endpoint_FIFO_t;
 117:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 118:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			typedef struct
 119:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 120:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_FIFO_t OUT;
 121:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_FIFO_t IN;
 122:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			} Endpoint_FIFOPair_t;
 123:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 124:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* External Variables: */
 125:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern Endpoint_FIFOPair_t       USB_Endpoint_FIFOs[ENDPOINT_TOTAL_ENDPOINTS];
 126:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile uint8_t          USB_Endpoint_SelectedEndpoint;
 127:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile USB_EP_t*        USB_Endpoint_SelectedHandle;
 128:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			extern volatile Endpoint_FIFO_t* USB_Endpoint_SelectedFIFO;
 129:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 130:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Inline Functions: */
 131:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 132:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 133:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 134:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 135:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t  MaskVal    = 0;
 136:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint16_t CheckBytes = 8;
 137:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 138:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				while (CheckBytes < Bytes)
 139:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 140:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					MaskVal++;
 141:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					CheckBytes <<= 1;
 142:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 143:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 144:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (MaskVal << USB_EP_BUFSIZE_gp);
 145:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 146:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 147:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Function Prototypes: */
 148:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			bool Endpoint_ConfigureEndpoint_PRV(const uint8_t Address,
 149:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                    const uint8_t Config,
 150:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                    const uint8_t Size);
 151:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			void Endpoint_ClearEndpoints(void);
 152:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	#endif
 153:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 154:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 	/* Public Interface - May be used in end-application: */
 155:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Macros: */
 156:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 157:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 158:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 159:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				 */
 160:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 161:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			#endif
 162:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 163:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Enums: */
 164:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 165:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 166:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointRW_XMEGA
 167:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 168:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 169:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 170:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 171:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 172:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   transfer by the host or device.
 173:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 174:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 175:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   waiting for the endpoint to become ready.
 176:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 177:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 178:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   no USB endpoint traffic can occur until th
 179:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   has resumed.
 180:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 181:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 182:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   within the software timeout period set by 
 183:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 184:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				                                                 */
 185:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			};
 186:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 187:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 		/* Inline Functions: */
 188:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Selects the given endpoint address.
 189:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 190:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 191:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  the currently selected endpoint.
 192:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 193:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address  Endpoint address to select.
 194:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 195:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address);
 196:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 197:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
  18               		.loc 1 197 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
 198:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t EndpointNumber = (Address & ENDPOINT_EPNUM_MASK);
  25               		.loc 1 198 0
  26 0000 282F      		mov r18,r24
  27 0002 2F70      		andi r18,lo8(15)
  28               	.LVL1:
 199:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 200:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedEndpoint = Address;
  29               		.loc 1 200 0
  30 0004 8093 0000 		sts USB_Endpoint_SelectedEndpoint,r24
  31 0008 30E0      		ldi r19,lo8(0)
 201:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 202:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
 203:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 204:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO   = &USB_Endpoint_FIFOs[EndpointNumber].IN;
  32               		.loc 1 204 0
  33 000a 44E8      		ldi r20,lo8(132)
  34 000c 50E0      		ldi r21,hi8(132)
 202:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
  35               		.loc 1 202 0
  36 000e 87FF      		sbrs r24,7
  37 0010 00C0      		rjmp .L2
  38               		.loc 1 204 0
  39 0012 249F      		mul r18,r20
  40 0014 C001      		movw r24,r0
  41 0016 259F      		mul r18,r21
  42 0018 900D      		add r25,r0
  43 001a 349F      		mul r19,r20
  44 001c 900D      		add r25,r0
  45 001e 1124      		clr r1
  46               	.LVL2:
  47 0020 8050      		subi r24,lo8(-(USB_Endpoint_FIFOs+66))
  48 0022 9040      		sbci r25,hi8(-(USB_Endpoint_FIFOs+66))
  49 0024 8093 0000 		sts USB_Endpoint_SelectedFIFO,r24
  50 0028 9093 0000 		sts USB_Endpoint_SelectedFIFO+1,r25
 205:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle = &((USB_EndpointTable_t*)USB.EPPTR)->Endpoints[EndpointNumber].IN
  51               		.loc 1 205 0
  52 002c 8091 C604 		lds r24,1222
  53 0030 9091 C704 		lds r25,1222+1
  54 0034 74E0      		ldi r23,4
  55 0036 220F      	1:	lsl r18
  56 0038 331F      		rol r19
  57 003a 7A95      		dec r23
  58 003c 01F4      		brne 1b
  59               	.LVL3:
  60 003e 285F      		subi r18,lo8(-(8))
  61 0040 3F4F      		sbci r19,hi8(-(8))
  62 0042 00C0      		rjmp .L4
  63               	.LVL4:
  64               	.L2:
 206:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 207:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 208:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 209:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO   = &USB_Endpoint_FIFOs[EndpointNumber].OUT;
  65               		.loc 1 209 0
  66 0044 249F      		mul r18,r20
  67 0046 C001      		movw r24,r0
  68 0048 259F      		mul r18,r21
  69 004a 900D      		add r25,r0
  70 004c 349F      		mul r19,r20
  71 004e 900D      		add r25,r0
  72 0050 1124      		clr r1
  73 0052 8050      		subi r24,lo8(-(USB_Endpoint_FIFOs))
  74 0054 9040      		sbci r25,hi8(-(USB_Endpoint_FIFOs))
  75 0056 8093 0000 		sts USB_Endpoint_SelectedFIFO,r24
  76 005a 9093 0000 		sts USB_Endpoint_SelectedFIFO+1,r25
 210:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle = &((USB_EndpointTable_t*)USB.EPPTR)->Endpoints[EndpointNumber].OU
  77               		.loc 1 210 0
  78 005e 8091 C604 		lds r24,1222
  79 0062 9091 C704 		lds r25,1222+1
  80 0066 64E0      		ldi r22,4
  81 0068 220F      	1:	lsl r18
  82 006a 331F      		rol r19
  83 006c 6A95      		dec r22
  84 006e 01F4      		brne 1b
  85               	.LVL5:
  86               	.L4:
  87 0070 820F      		add r24,r18
  88 0072 931F      		adc r25,r19
  89 0074 8093 0000 		sts USB_Endpoint_SelectedHandle,r24
  90 0078 9093 0000 		sts USB_Endpoint_SelectedHandle+1,r25
  91 007c 0895      		ret
  92               		.cfi_endproc
  93               	.LFE22:
  95               		.section	.text.USB_Device_ProcessControlRequest,"ax",@progbits
  96               	.global	USB_Device_ProcessControlRequest
  98               	USB_Device_ProcessControlRequest:
  99               	.LFB68:
 100               		.file 2 "LUFA//Drivers/USB/Core/DeviceStandardReq.c"
   1:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** /*
   2:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****              LUFA Library
   3:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****      Copyright (C) Dean Camera, 2012.
   4:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
   5:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****            www.lufa-lib.org
   7:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** */
   8:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
   9:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** /*
  10:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  12:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   all copies and that both that the copyright notice and this
  16:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   documentation, and that the name of the author not be used in
  18:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   software without specific, written prior permission.
  20:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  21:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   The author disclaim all warranties with regard to this
  22:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   software, including all implied warranties of merchantability
  23:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   special, indirect or consequential damages or any damages
  25:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   arising out of or in connection with the use or performance of
  28:LUFA//Drivers/USB/Core/DeviceStandardReq.c ****   this software.
  29:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** */
  30:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  31:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #include "USBMode.h"
  33:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  34:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #if defined(USB_CAN_BE_DEVICE)
  35:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  36:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_DEVICESTDREQ_C
  37:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #include "DeviceStandardReq.h"
  38:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  39:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** uint8_t USB_Device_ConfigurationNumber;
  40:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  41:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_SELF_POWER)
  42:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_CurrentlySelfPowered;
  43:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #endif
  44:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  45:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_REMOTE_WAKEUP)
  46:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_RemoteWakeupEnabled;
  47:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #endif
  48:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  49:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** void USB_Device_ProcessControlRequest(void)
  50:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 101               		.loc 2 50 0
 102               		.cfi_startproc
 103 0000 0F93      		push r16
 104               	.LCFI0:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 16, -2
 107 0002 1F93      		push r17
 108               	.LCFI1:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 17, -3
 111 0004 CF93      		push r28
 112               	.LCFI2:
 113               		.cfi_def_cfa_offset 5
 114               		.cfi_offset 28, -4
 115 0006 DF93      		push r29
 116               	.LCFI3:
 117               		.cfi_def_cfa_offset 6
 118               		.cfi_offset 29, -5
 119 0008 CDB7      		in r28,__SP_L__
 120 000a DEB7      		in r29,__SP_H__
 121 000c EC97      		sbiw r28,60
 122               	.LCFI4:
 123               		.cfi_def_cfa 28, 66
 124 000e CDBF      		out __SP_L__,r28
 125 0010 DEBF      		out __SP_H__,r29
 126               	/* prologue: function */
 127               	/* frame size = 60 */
 128               	/* stack size = 64 */
 129               	.L__stack_usage = 64
 130               	.LVL6:
 131               		.loc 2 50 0
 132 0012 28E0      		ldi r18,lo8(8)
  51:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_BIG_ENDIAN)
  52:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bmRequestType = Endpoint_Read_8();
  53:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bRequest      = Endpoint_Read_8();
  54:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wValue        = Endpoint_Read_16_LE();
  55:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
  56:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
  57:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#else
  58:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;
 133               		.loc 2 58 0
 134 0014 40E0      		ldi r20,lo8(USB_ControlRequest)
 135 0016 50E0      		ldi r21,hi8(USB_ControlRequest)
 136               	.LVL7:
 137               	.L6:
 138               	.LBB183:
 139               	.LBB184:
 140               	.LBB185:
 211:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 212:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 213:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 214:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Configures the specified endpoint address with the given endpoint type, direction, bank size
 215:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 216:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  on its direction.
 217:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 218:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address    Endpoint address to configure.
 219:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 220:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 221:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 222:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 223:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 224:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 225:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 226:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *                        that the endpoint can handle.
 227:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 228:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Banks      Number of hardware banks to use for the endpoint being configured.
 229:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 230:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 231:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *        it is automatically configured by the library internally.
 232:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *        \n\n
 233:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 234:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note This routine will automatically select the specified endpoint.
 235:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 236:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 237:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 238:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 239:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Type,
 240:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint16_t Size,
 241:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 242:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 243:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Type,
 244:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint16_t Size,
 245:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			                                              const uint8_t Banks)
 246:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 247:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				uint8_t EPConfigMask = (USB_EP_INTDSBL_bm | ((Banks > 1) ? USB_EP_PINGPONG_bm : 0) | Endpoint_B
 248:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 249:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((Address & ENDPOINT_EPNUM_MASK) >= ENDPOINT_TOTAL_ENDPOINTS)
 250:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return false;
 251:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 252:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				// TODO - Fix once limitations are lifted
 253:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				EPConfigMask &= ~USB_EP_PINGPONG_bm;
 254:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Size > 64)
 255:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return false;
 256:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 257:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				switch (Type)
 258:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 259:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					case EP_TYPE_CONTROL:
 260:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_CONTROL_gc;
 261:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 262:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					case EP_TYPE_ISOCHRONOUS:
 263:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_ISOCHRONOUS_gc;
 264:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 265:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					default:
 266:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						EPConfigMask |= USB_EP_TYPE_BULK_gc;
 267:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 						break;
 268:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 269:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 270:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Type == EP_TYPE_CONTROL)
 271:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  Endpoint_ConfigureEndpoint_PRV(Address ^ ENDPOINT_DIR_IN, EPConfigMask, Size);
 272:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 273:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return Endpoint_ConfigureEndpoint_PRV(Address, EPConfigMask, Size);
 274:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 275:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 276:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 277:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 278:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointRW_XMEGA
 279:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 280:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 281:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 282:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 283:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 284:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 285:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedEndpoint & ENDPOINT_DIR_IN)
 286:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return USB_Endpoint_SelectedFIFO->Position;
 287:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 288:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  return (USB_Endpoint_SelectedFIFO->Length - USB_Endpoint_SelectedFIFO->Position);
 289:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 290:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 291:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 292:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 293:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  manipulated.
 294:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 295:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Index of the currently selected endpoint.
 296:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 297:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 298:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 299:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 300:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return USB_Endpoint_SelectedEndpoint;
 301:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 302:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 303:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 304:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  data In and Out pointers to the bank's contents.
 305:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 306:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 307:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 308:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 309:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 310:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 311:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (Address & ENDPOINT_DIR_IN)
 312:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  USB_Endpoint_FIFOs[Address & ENDPOINT_EPNUM_MASK].IN.Position  = 0;
 313:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				else
 314:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  USB_Endpoint_FIFOs[Address & ENDPOINT_EPNUM_MASK].OUT.Position = 0;
 315:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 316:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 317:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 318:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 319:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 320:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 321:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 322:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsEnabled(void)
 323:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 324:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return true;
 325:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 326:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 327:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 328:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 329:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 330:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  packet.
 331:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 332:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 333:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 334:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_AbortPendingIN(void)
 335:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 336:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_BUSNACK0_bm;
 337:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 338:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 339:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 340:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 341:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 342:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 343:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  direction and the endpoint bank is full.
 344:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 345:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 346:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 347:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 348:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *          on its direction.
 349:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 350:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 351:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 352:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 353:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (USB_Endpoint_SelectedFIFO->Position < USB_Endpoint_SelectedFIFO->Length);
 354:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 355:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 356:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is configured.
 357:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 358:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 359:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 360:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 361:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsConfigured(void)
 362:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 363:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) ? true : false);
 364:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 365:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 366:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 367:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 368:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 369:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 370:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 371:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 372:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 373:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsINReady(void)
 374:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 375:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 376:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 377:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->STATUS & USB_EP_BUSNACK0_bm) ? true : false);
 378:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 379:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 380:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 381:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 382:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 383:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 384:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 385:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 386:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 387:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 388:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 389:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 390:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 391:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_TRNCOMPL0_bm)
 392:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 393:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 394:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					return true;
 395:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 396:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 397:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return false;
 398:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 399:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 400:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 401:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 402:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 403:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 404:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 405:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 406:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 407:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 408:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 409:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 410:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 411:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_SETUP_bm)
 412:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 413:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 414:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					return true;
 415:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 416:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 417:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return false;
 418:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 419:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 420:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 421:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  endpoint for the next packet.
 422:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 423:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 424:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 425:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 426:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 427:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 428:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearSETUP(void)
 429:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 434:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 438:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 439:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 440:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 441:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 442:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 443:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 444:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 445:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 446:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearIN(void)
 447:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 448:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CNT     = USB_Endpoint_SelectedFIFO->Position;
 449:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 450:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 451:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 452:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 453:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 454:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 455:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 456:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 457:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 458:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 459:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearOUT(void)
 460:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 461:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 462:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 463:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 464:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 465:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 466:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 467:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 468:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  aborted and the host can begin its own recovery sequence.
 469:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 470:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 471:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 472:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  endpoint.
 473:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 474:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 475:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 476:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 477:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_StallTransaction(void)
 478:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 479:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 480:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 481:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) == USB_EP_TYPE_CONTROL_gc)
 482:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				{
 483:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint ^ ENDPOINT_DIR_IN);
 484:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 485:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				}
 486:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 487:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 488:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 489:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 490:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 491:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 492:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 493:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ClearStall(void)
 494:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 495:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL &= ~USB_EP_STALL_bm;
 496:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 497:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 498:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 499:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 500:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPacketManagement_XMEGA
 501:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 502:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 503:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 504:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 505:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline bool Endpoint_IsStalled(void)
 506:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 507:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_STALL_bm) ? true : false);
 508:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 509:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 510:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 511:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 512:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_ResetDataToggle(void)
 513:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 514:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~USB_EP_TOGGLE_bm;
 515:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 516:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 517:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Determines the currently selected endpoint's direction.
 518:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 519:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 520:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 521:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 522:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 523:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 524:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return (USB_Endpoint_SelectedEndpoint & ENDPOINT_DIR_IN);
 525:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 526:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 527:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 528:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 529:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_XMEGA
 530:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 531:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 532:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 533:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 534:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline uint8_t Endpoint_Read_8(void)
 535:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 536:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return USB_Endpoint_SelectedFIFO->Data[USB_Endpoint_SelectedFIFO->Position++];
 141               		.loc 1 536 0
 142 0018 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 143 001c 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 144 0020 DC01      		movw r26,r24
 145 0022 AF5B      		subi r26,lo8(-(65))
 146 0024 BF4F      		sbci r27,hi8(-(65))
 147 0026 3C91      		ld r19,X
 148 0028 830F      		add r24,r19
 149 002a 911D      		adc r25,__zero_reg__
 150 002c FC01      		movw r30,r24
 151 002e 8081      		ld r24,Z
 152 0030 3F5F      		subi r19,lo8(-(1))
 153 0032 3C93      		st X,r19
 154               	.LBE185:
 155               	.LBE184:
  59:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  60:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeade
  61:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  *(RequestHeader++) = Endpoint_Read_8();
 156               		.loc 2 61 0
 157 0034 DA01      		movw r26,r20
 158 0036 8D93      		st X+,r24
 159 0038 AD01      		movw r20,r26
 160               	.LVL8:
 161 003a 2150      		subi r18,lo8(-(-1))
  60:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeade
 162               		.loc 2 60 0
 163 003c 01F4      		brne .L6
 164               	.LBE183:
  62:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
  63:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  64:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ControlRequest();
 165               		.loc 2 64 0
 166 003e 0E94 0000 		call EVENT_USB_Device_ControlRequest
 167               	.LVL9:
 168               	.LBB186:
 169               	.LBB187:
 409:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 170               		.loc 1 409 0
 171 0042 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 172 0046 8F77      		andi r24,lo8(127)
 173 0048 0E94 0000 		call Endpoint_SelectEndpoint
 411:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_SETUP_bm)
 174               		.loc 1 411 0
 175 004c A091 0000 		lds r26,USB_Endpoint_SelectedHandle
 176 0050 B091 0000 		lds r27,USB_Endpoint_SelectedHandle+1
 177 0054 8C91      		ld r24,X
 178 0056 84FF      		sbrs r24,4
 179 0058 00C0      		rjmp .L7
 413:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 180               		.loc 1 413 0
 181 005a E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 182 005e F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 183 0062 1296      		adiw r26,2
 184 0064 8D91      		ld r24,X+
 185 0066 9C91      		ld r25,X
 186 0068 1397      		sbiw r26,2+1
 187 006a E05C      		subi r30,lo8(-(64))
 188 006c FF4F      		sbci r31,hi8(-(64))
 189 006e 8083      		st Z,r24
 190               	.LBE187:
 191               	.LBE186:
 192               	.LBB188:
  65:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  66:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
  67:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
  68:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
 193               		.loc 2 68 0
 194 0070 8091 0000 		lds r24,USB_ControlRequest
 195               	.LVL10:
  69:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  70:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		switch (USB_ControlRequest.bRequest)
 196               		.loc 2 70 0
 197 0074 2091 0000 		lds r18,USB_ControlRequest+1
 198 0078 2530      		cpi r18,lo8(5)
 199 007a 01F4      		brne .+2
 200 007c 00C0      		rjmp .L10
 201 007e 2630      		cpi r18,lo8(6)
 202 0080 00F4      		brsh .L14
 203 0082 2130      		cpi r18,lo8(1)
 204 0084 01F4      		brne .+2
 205 0086 00C0      		rjmp .L9
 206 0088 2130      		cpi r18,lo8(1)
 207 008a 00F0      		brlo .L8
 208 008c 2330      		cpi r18,lo8(3)
 209 008e 01F0      		breq .+2
 210 0090 00C0      		rjmp .L7
 211 0092 00C0      		rjmp .L9
 212               	.L14:
 213 0094 2830      		cpi r18,lo8(8)
 214 0096 01F4      		brne .+2
 215 0098 00C0      		rjmp .L12
 216 009a 2930      		cpi r18,lo8(9)
 217 009c 01F4      		brne .+2
 218 009e 00C0      		rjmp .L13
 219 00a0 2630      		cpi r18,lo8(6)
 220 00a2 01F0      		breq .+2
 221 00a4 00C0      		rjmp .L7
 222 00a6 00C0      		rjmp .L46
 223               	.L8:
  71:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		{
  72:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetStatus:
  73:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 224               		.loc 2 73 0
 225 00a8 8038      		cpi r24,lo8(-128)
 226 00aa 01F0      		breq .L15
 227               		.loc 2 73 0 is_stmt 0 discriminator 1
 228 00ac 8238      		cpi r24,lo8(-126)
 229 00ae 01F0      		breq .+2
 230 00b0 00C0      		rjmp .L7
 231 00b2 00C0      		rjmp .L47
 232               	.L15:
 233               	.LVL11:
  74:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  75:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				{
  76:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetStatus();
  77:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				}
  78:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  79:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  80:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_ClearFeature:
  81:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetFeature:
  82:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  83:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  84:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				{
  85:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_ClearSetFeature();
  86:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				}
  87:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  88:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  89:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetAddress:
  90:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
  91:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetAddress();
  92:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
  93:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  94:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetDescriptor:
  95:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  96:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_INTERFACE)))
  97:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				{
  98:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetDescriptor();
  99:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				}
 100:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 101:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 102:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetConfiguration:
 103:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
 104:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_GetConfiguration();
 105:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 106:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 107:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetConfiguration:
 108:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 109:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetConfiguration();
 110:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 111:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 112:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 113:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			default:
 114:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 115:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		}
 116:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 117:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 118:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
 119:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 120:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_StallTransaction();
 121:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_ClearSETUP();
 122:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 123:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 124:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 125:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetAddress(void)
 126:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 127:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t    DeviceAddress    = (USB_ControlRequest.wValue & 0x7F);
 128:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
 129:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	GlobalInterruptDisable();
 130:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 131:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 132:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 133:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 134:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 135:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	while (!(Endpoint_IsINReady()));
 136:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 137:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_SetDeviceAddress(DeviceAddress);
 138:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
 139:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 140:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	SetGlobalInterruptMask(CurrentGlobalInt);
 141:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 142:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 143:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetConfiguration(void)
 144:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 145:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(FIXED_NUM_CONFIGURATIONS)
 146:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
 147:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 148:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 149:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Descriptor_Device_t* DevDescriptorPtr;
 150:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 151:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 152:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#if defined(USE_FLASH_DESCRIPTORS)
 153:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_FLASH
 154:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_EEPROM_DESCRIPTORS)
 155:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_EEPROM
 156:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_SRAM_DESCRIPTORS)
 157:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_SRAM
 158:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#else
 159:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			uint8_t MemoryAddressSpace;
 160:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 161:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 162:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 163:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (CALLBACK_USB_GetDescriptor((DTYPE_Device << 8), 0, (void*)&DevDescriptorPtr
 164:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 165:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 166:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	                               , &MemoryAddressSpace
 167:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 168:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	                               ) == NO_DESCRIPTOR)
 169:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 170:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 171:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 172:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 173:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 174:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (MemoryAddressSpace == MEMSPACE_FLASH)
 175:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 176:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > pgm_read_byte(&DevDescriptorPtr->NumberOfConfigurations
 177:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 178:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 179:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	else if (MemoryAddressSpace == MEMSPACE_EEPROM)
 180:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 181:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > eeprom_read_byte(&DevDescriptorPtr->NumberOfConfigurati
 182:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 183:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 184:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	else
 185:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 186:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 187:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 188:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 189:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 190:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 191:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 192:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 193:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 194:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 195:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 196:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 197:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
 198:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 199:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 200:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 201:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_Device_ConfigurationNumber)
 202:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = DEVICE_STATE_Configured;
 203:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	else
 204:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
 205:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 206:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ConfigurationChanged();
 207:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 208:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 209:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetConfiguration(void)
 210:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 211:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 212:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 213:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_8(USB_Device_ConfigurationNumber);
 214:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 215:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 216:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 217:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 218:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 219:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 220:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetInternalSerialDescriptor(void)
 221:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 222:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	struct
 223:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 224:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Descriptor_Header_t Header;
 225:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
 226:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	} SignatureDescriptor;
 227:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 228:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Type = DTYPE_String;
 229:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 230:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 231:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);
 232:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 233:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 234:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 235:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
 236:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 237:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 238:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** #endif
 239:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 240:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetDescriptor(void)
 241:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 242:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	const void* DescriptorPointer;
 243:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint16_t    DescriptorSize;
 244:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 245:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 246:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 247:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DescriptorAddressSpace;
 248:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 249:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 250:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 251:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
 252:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 253:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Device_GetInternalSerialDescriptor();
 254:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 255:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 256:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 257:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 258:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIn
 259:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 &DescriptorPointer
 260:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 261:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 262:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 , &DescriptorAddressSpace
 263:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 264:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 													 )) == NO_DESCRIPTOR)
 265:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 266:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 267:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 268:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 269:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 270:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 271:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 272:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 273:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_EEPROM_DESCRIPTORS)
 274:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 275:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_FLASH_DESCRIPTORS)
 276:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 277:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 278:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (DescriptorAddressSpace == MEMSPACE_FLASH)
 279:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 280:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	else if (DescriptorAddressSpace == MEMSPACE_EEPROM)
 281:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 282:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	else
 283:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 284:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 285:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 286:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 287:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 288:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 289:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetStatus(void)
 290:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 291:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t CurrentStatus = 0;
 234               		.loc 2 291 0 is_stmt 1
 235 00b4 1091 0000 		lds r17,USB_Device_CurrentlySelfPowered
 236               	.LVL12:
 237               	.LBB189:
 238               	.LBB190:
 292:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 293:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType)
 294:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 295:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE):
 296:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_SELF_POWER)
 297:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_CurrentlySelfPowered)
 298:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
 299:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 300:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 301:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 302:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_RemoteWakeupEnabled)
 239               		.loc 2 302 0
 240 00b8 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 241 00bc 8823      		tst r24
 242 00be 01F0      		breq .L17
 303:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
 243               		.loc 2 303 0
 244 00c0 1260      		ori r17,lo8(2)
 245               	.LVL13:
 246 00c2 00C0      		rjmp .L17
 247               	.LVL14:
 248               	.L47:
 304:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 305:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 306:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
 307:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(CONTROL_ONLY_DEVICE)
 308:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 249               		.loc 2 308 0
 250 00c4 8091 0000 		lds r24,USB_ControlRequest+4
 251 00c8 8F70      		andi r24,lo8(15)
 252 00ca 0E94 0000 		call Endpoint_SelectEndpoint
 253               	.LVL15:
 254               	.LBB191:
 255               	.LBB192:
 507:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_STALL_bm) ? true : false);
 256               		.loc 1 507 0
 257 00ce E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 258 00d2 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 259 00d6 8181      		ldd r24,Z+1
 260               	.LBE192:
 261               	.LBE191:
 309:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 310:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			CurrentStatus = Endpoint_IsStalled();
 262               		.loc 2 310 0
 263 00d8 11E0      		ldi r17,lo8(1)
 264 00da 82FF      		sbrs r24,2
 265 00dc 10E0      		ldi r17,lo8(0)
 266               	.L18:
 267               	.LVL16:
 311:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 312:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 268               		.loc 2 312 0
 269 00de 80E0      		ldi r24,lo8(0)
 270 00e0 0E94 0000 		call Endpoint_SelectEndpoint
 271               	.L17:
 272               	.LBB193:
 273               	.LBB194:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 274               		.loc 1 430 0
 275 00e4 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 276 00e8 8F77      		andi r24,lo8(127)
 277 00ea 0E94 0000 		call Endpoint_SelectEndpoint
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 278               		.loc 1 431 0
 279 00ee E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 280 00f2 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 281 00f6 8081      		ld r24,Z
 282 00f8 8D78      		andi r24,lo8(-115)
 283 00fa 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 284               		.loc 1 432 0
 285 00fc E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 286 0100 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 287 0104 8081      		ld r24,Z
 288 0106 8160      		ori r24,lo8(1)
 289 0108 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 290               		.loc 1 433 0
 291 010a E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 292 010e F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 293 0112 EF5B      		subi r30,lo8(-(65))
 294 0114 FF4F      		sbci r31,hi8(-(65))
 295 0116 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 296               		.loc 1 435 0
 297 0118 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 298 011c 8068      		ori r24,lo8(-128)
 299 011e 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 300               		.loc 1 436 0
 301 0122 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 302 0126 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 303 012a 8081      		ld r24,Z
 304 012c 8160      		ori r24,lo8(1)
 305 012e 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 306               		.loc 1 437 0
 307 0130 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 308 0134 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 309 0138 FC01      		movw r30,r24
 310 013a EF5B      		subi r30,lo8(-(65))
 311 013c FF4F      		sbci r31,hi8(-(65))
 312 013e 1082      		st Z,__zero_reg__
 313               	.LVL17:
 314               	.LBE194:
 315               	.LBE193:
 316               	.LBB195:
 317               	.LBB196:
 318               	.LBB197:
 537:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			}
 538:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 
 539:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 540:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 541:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_XMEGA
 542:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *
 543:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 544:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			 */
 545:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 546:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 547:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 			{
 548:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Data[USB_Endpoint_SelectedFIFO->Position++] = Data;
 319               		.loc 1 548 0
 320 0140 2081      		ld r18,Z
 321 0142 820F      		add r24,r18
 322 0144 911D      		adc r25,__zero_reg__
 323 0146 DC01      		movw r26,r24
 324 0148 1C93      		st X,r17
 325 014a 2F5F      		subi r18,lo8(-(1))
 326 014c 2083      		st Z,r18
 327               	.LVL18:
 328               	.LBE197:
 329               	.LBE196:
 330               	.LBB198:
 331               	.LBB199:
 332 014e 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 333 0152 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 334 0156 FC01      		movw r30,r24
 335 0158 EF5B      		subi r30,lo8(-(65))
 336 015a FF4F      		sbci r31,hi8(-(65))
 337 015c 2081      		ld r18,Z
 338 015e 820F      		add r24,r18
 339 0160 911D      		adc r25,__zero_reg__
 340 0162 DC01      		movw r26,r24
 341 0164 1C92      		st X,__zero_reg__
 342 0166 00C0      		rjmp .L44
 343               	.LVL19:
 344               	.L9:
 345               	.LBE199:
 346               	.LBE198:
 347               	.LBE195:
 348               	.LBE190:
 349               	.LBE189:
  82:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 350               		.loc 2 82 0
 351 0168 8823      		tst r24
 352 016a 01F0      		breq .L19
  82:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 353               		.loc 2 82 0 is_stmt 0 discriminator 1
 354 016c 8230      		cpi r24,lo8(2)
 355 016e 01F0      		breq .+2
 356 0170 00C0      		rjmp .L7
 357               	.L19:
 358               	.LBB200:
 359               	.LBB201:
 313:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 314:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 315:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 316:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		default:
 317:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			return;
 318:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 319:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 320:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 321:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 322:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_16_LE(CurrentStatus);
 323:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 324:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 325:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 326:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 327:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 328:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_ClearSetFeature(void)
 329:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** {
 330:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
 360               		.loc 2 330 0 is_stmt 1
 361 0172 90E0      		ldi r25,lo8(0)
 362 0174 8F71      		andi r24,lo8(31)
 363 0176 9070      		andi r25,hi8(31)
 364               	.LVL20:
 365 0178 0097      		sbiw r24,0
 366 017a 01F0      		breq .L20
 367 017c 8230      		cpi r24,2
 368 017e 9105      		cpc r25,__zero_reg__
 369 0180 01F0      		breq .+2
 370 0182 00C0      		rjmp .L7
 371 0184 00C0      		rjmp .L48
 372               	.L20:
 331:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	{
 332:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 333:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_DEVICE:
 334:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
 373               		.loc 2 334 0
 374 0186 8091 0000 		lds r24,USB_ControlRequest+2
 375 018a 8130      		cpi r24,lo8(1)
 376 018c 01F0      		breq .+2
 377 018e 00C0      		rjmp .L7
 335:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
 378               		.loc 2 335 0
 379 0190 2330      		cpi r18,lo8(3)
 380 0192 01F0      		breq .L22
 381 0194 80E0      		ldi r24,lo8(0)
 382               	.L22:
 383 0196 8093 0000 		sts USB_Device_RemoteWakeupEnabled,r24
 384 019a 00C0      		rjmp .L23
 385               	.L48:
 336:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			else
 337:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			  return;
 338:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 339:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 340:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 341:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(CONTROL_ONLY_DEVICE)
 342:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_ENDPOINT:
 343:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
 386               		.loc 2 343 0
 387 019c 8091 0000 		lds r24,USB_ControlRequest+2
 388 01a0 8823      		tst r24
 389 01a2 01F0      		breq .+2
 390 01a4 00C0      		rjmp .L23
 391               	.LBB202:
 344:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			{
 345:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 392               		.loc 2 345 0
 393 01a6 1091 0000 		lds r17,USB_ControlRequest+4
 394 01aa 1F70      		andi r17,lo8(15)
 395               	.LVL21:
 346:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 347:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (EndpointIndex == ENDPOINT_CONTROLEP)
 396               		.loc 2 347 0
 397 01ac 01F4      		brne .+2
 398 01ae 00C0      		rjmp .L7
 348:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				  return;
 349:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 350:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				Endpoint_SelectEndpoint(EndpointIndex);
 399               		.loc 2 350 0
 400 01b0 812F      		mov r24,r17
 401 01b2 0E94 0000 		call Endpoint_SelectEndpoint
 402               	.LVL22:
 351:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 352:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (Endpoint_IsEnabled())
 353:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				{
 354:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					if (USB_ControlRequest.bRequest == REQ_SetFeature)
 403               		.loc 2 354 0
 404 01b6 8091 0000 		lds r24,USB_ControlRequest+1
 405 01ba E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 406 01be F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 407 01c2 8330      		cpi r24,lo8(3)
 408 01c4 01F4      		brne .L24
 409               	.LBB203:
 410               	.LBB204:
 479:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 411               		.loc 1 479 0
 412 01c6 8181      		ldd r24,Z+1
 413 01c8 8460      		ori r24,lo8(4)
 414 01ca 8183      		std Z+1,r24
 481:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) == USB_EP_TYPE_CONTROL_gc)
 415               		.loc 1 481 0
 416 01cc E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 417 01d0 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 418 01d4 8181      		ldd r24,Z+1
 419 01d6 807C      		andi r24,lo8(-64)
 420 01d8 8034      		cpi r24,lo8(64)
 421 01da 01F4      		brne .L23
 483:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint ^ ENDPOINT_DIR_IN);
 422               		.loc 1 483 0
 423 01dc 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 424 01e0 8058      		subi r24,lo8(-(-128))
 425 01e2 0E94 0000 		call Endpoint_SelectEndpoint
 484:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 426               		.loc 1 484 0
 427 01e6 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 428 01ea F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 429 01ee 8181      		ldd r24,Z+1
 430 01f0 8460      		ori r24,lo8(4)
 431 01f2 8183      		std Z+1,r24
 432 01f4 00C0      		rjmp .L23
 433               	.L24:
 434               	.LBE204:
 435               	.LBE203:
 436               	.LBB205:
 437               	.LBB206:
 495:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL &= ~USB_EP_STALL_bm;
 438               		.loc 1 495 0
 439 01f6 8181      		ldd r24,Z+1
 440 01f8 8B7F      		andi r24,lo8(-5)
 441 01fa 8183      		std Z+1,r24
 442               	.LVL23:
 443               	.LBE206:
 444               	.LBE205:
 445               	.LBB207:
 446               	.LBB208:
 314:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				  USB_Endpoint_FIFOs[Address & ENDPOINT_EPNUM_MASK].OUT.Position = 0;
 447               		.loc 1 314 0
 448 01fc 812F      		mov r24,r17
 449 01fe 90E0      		ldi r25,lo8(0)
 450 0200 24E8      		ldi r18,lo8(132)
 451 0202 30E0      		ldi r19,hi8(132)
 452 0204 829F      		mul r24,r18
 453 0206 F001      		movw r30,r0
 454 0208 839F      		mul r24,r19
 455 020a F00D      		add r31,r0
 456 020c 929F      		mul r25,r18
 457 020e F00D      		add r31,r0
 458 0210 1124      		clr r1
 459 0212 E050      		subi r30,lo8(-(USB_Endpoint_FIFOs+65))
 460 0214 F040      		sbci r31,hi8(-(USB_Endpoint_FIFOs+65))
 461 0216 1082      		st Z,__zero_reg__
 462               	.LBE208:
 463               	.LBE207:
 464               	.LBB209:
 465               	.LBB210:
 514:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~USB_EP_TOGGLE_bm;
 466               		.loc 1 514 0
 467 0218 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 468 021c F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 469 0220 8081      		ld r24,Z
 470 0222 8E7F      		andi r24,lo8(-2)
 471 0224 8083      		st Z,r24
 472               	.LVL24:
 473               	.L23:
 474               	.LBE210:
 475               	.LBE209:
 476               	.LBE202:
 355:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					{
 356:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_StallTransaction();
 357:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					}
 358:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					else
 359:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					{
 360:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ClearStall();
 361:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ResetEndpoint(EndpointIndex);
 362:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 						Endpoint_ResetDataToggle();
 363:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 					}
 364:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				}
 365:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			}
 366:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 367:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 368:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 369:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 		default:
 370:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 			return;
 371:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	}
 372:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 
 373:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 477               		.loc 2 373 0
 478 0226 80E0      		ldi r24,lo8(0)
 479 0228 0E94 0000 		call Endpoint_SelectEndpoint
 480               	.LBB211:
 481               	.LBB212:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 482               		.loc 1 430 0
 483 022c 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 484 0230 8F77      		andi r24,lo8(127)
 485 0232 0E94 0000 		call Endpoint_SelectEndpoint
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 486               		.loc 1 431 0
 487 0236 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 488 023a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 489 023e 8081      		ld r24,Z
 490 0240 8D78      		andi r24,lo8(-115)
 491 0242 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 492               		.loc 1 432 0
 493 0244 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 494 0248 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 495 024c 8081      		ld r24,Z
 496 024e 8160      		ori r24,lo8(1)
 497 0250 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 498               		.loc 1 433 0
 499 0252 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 500 0256 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 501 025a EF5B      		subi r30,lo8(-(65))
 502 025c FF4F      		sbci r31,hi8(-(65))
 503 025e 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 504               		.loc 1 435 0
 505 0260 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 506 0264 8068      		ori r24,lo8(-128)
 507 0266 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 508               		.loc 1 436 0
 509 026a E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 510 026e F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 511 0272 8081      		ld r24,Z
 512 0274 8160      		ori r24,lo8(1)
 513 0276 00C0      		rjmp .L42
 514               	.LVL25:
 515               	.L10:
 516               	.LBE212:
 517               	.LBE211:
 518               	.LBE201:
 519               	.LBE200:
  90:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 520               		.loc 2 90 0
 521 0278 8823      		tst r24
 522 027a 01F0      		breq .+2
 523 027c 00C0      		rjmp .L7
 524               	.LBB213:
 525               	.LBB214:
 127:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t    DeviceAddress    = (USB_ControlRequest.wValue & 0x7F);
 526               		.loc 2 127 0
 527 027e 0091 0000 		lds r16,USB_ControlRequest+2
 528 0282 0F77      		andi r16,lo8(127)
 529               	.LVL26:
 530               	.LBB215:
 531               	.LBB216:
 532               		.file 3 "LUFA//Drivers/USB/Core/../../../Common/Common.h"
   1:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /*
   2:LUFA//Drivers/USB/Core/../../../Common/Common.h ****              LUFA Library
   3:LUFA//Drivers/USB/Core/../../../Common/Common.h ****      Copyright (C) Dean Camera, 2012.
   4:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
   5:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA//Drivers/USB/Core/../../../Common/Common.h ****            www.lufa-lib.org
   7:LUFA//Drivers/USB/Core/../../../Common/Common.h **** */
   8:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
   9:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /*
  10:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  12:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   all copies and that both that the copyright notice and this
  16:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   documentation, and that the name of the author not be used in
  18:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   software without specific, written prior permission.
  20:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  21:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   The author disclaim all warranties with regard to this
  22:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   software, including all implied warranties of merchantability
  23:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   special, indirect or consequential damages or any damages
  25:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   arising out of or in connection with the use or performance of
  28:LUFA//Drivers/USB/Core/../../../Common/Common.h ****   this software.
  29:LUFA//Drivers/USB/Core/../../../Common/Common.h **** */
  30:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  31:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /** \dir
  32:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library header files.
  33:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *
  34:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
  35:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  user applications.
  36:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  */
  37:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  38:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /** \file
  39:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *
  41:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  \copydetails Group_Common
  42:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  */
  43:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  44:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *
  47:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
  48:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  aspects of the library.
  49:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *
  50:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  @{
  51:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  */
  52:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  53:LUFA//Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *
  56:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:LUFA//Drivers/USB/Core/../../../Common/Common.h ****  */
  58:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  59:LUFA//Drivers/USB/Core/../../../Common/Common.h **** #ifndef __LUFA_COMMON_H__
  60:LUFA//Drivers/USB/Core/../../../Common/Common.h **** #define __LUFA_COMMON_H__
  61:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  62:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 	/* Macros: */
  63:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  65:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 	/* Includes: */
  66:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdint.h>
  67:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdbool.h>
  68:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include <string.h>
  69:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include <stddef.h>
  70:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  71:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include "Architectures.h"
  72:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include "BoardTypes.h"
  73:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include "ArchitectureSpecific.h"
  74:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include "CompilerSpecific.h"
  75:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#include "Attributes.h"
  76:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  77:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include "LUFAConfig.h"
  79:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  80:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  81:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__cplusplus)
  83:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			extern "C" {
  84:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  85:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
  86:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 	/* Architecture specific utility includes: */
  87:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__DOXYGEN__)
  88:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
  92:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
  95:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
  96:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
  97:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
  98:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/boot.h>
  99:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 100:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 101:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 102:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 103:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 104:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 105:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 109:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 110:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_UC3)
 111:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr32/io.h>
 112:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 113:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 114:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define PROGMEM                  
 116:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define pgm_read_byte(x)         *x
 117:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			// =================================================
 120:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 121:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint32_t uint_reg_t;
 122:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 123:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_BIG_ENDIAN
 124:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 125:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 126:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_XMEGA)
 127:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
 128:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
 129:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
 130:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
 131:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 132:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 133:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 134:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 135:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 136:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 137:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 138:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 139:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 140:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 141:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 142:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#else
 143:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#error Unknown device architecture specified.
 144:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		#endif
 145:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 146:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 	/* Public Interface - May be used in end-application: */
 147:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		/* Macros: */
 148:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Macro for encasing other multi-statement macros. This should be used along with an opening b
 149:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  before the start of any multi-statement macro, so that the macros contents as a whole are tr
 150:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  as a discrete block and not as a list of separate statements which may cause problems when u
 151:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  a block (such as inline \c if statements).
 152:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 153:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define MACROS                  do
 154:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 155:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Macro for encasing other multi-statement macros. This should be used along with a preceding 
 156:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  brace at the end of any multi-statement macro, so that the macros contents as a whole are tr
 157:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  as a discrete block and not as a list of separate statements which may cause problems when u
 158:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  a block (such as inline \c if statements).
 159:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 160:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#define MACROE                  while (0)
 161:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 162:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the larger of two values.
 163:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 164:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 165:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 166:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 167:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 168:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 169:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 170:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The larger of the two input parameters
 171:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 172:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 173:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 174:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 175:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 176:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the smaller of two values.
 177:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 178:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 179:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 180:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 181:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 182:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 183:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 184:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The smaller of the two input parameters
 185:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 186:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 187:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 188:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 189:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 190:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 191:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 192:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  marks around the input, converting the source into a string literal.
 193:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 194:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 195:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 196:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the input.
 197:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 */
 198:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY(x)            #x
 199:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 200:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 201:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 202:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 203:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 204:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 205:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the expanded input.
 206:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 */
 207:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 208:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 209:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 210:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 211:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 212:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 213:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  state with unintentional side-effects.
 214:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 215:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 216:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 217:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 218:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 219:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 220:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 221:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \ingroup Group_GlobalInt
 222:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *
 223:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 224:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				 */
 225:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 226:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 227:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 228:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 		/* Inline Functions: */
 229:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 230:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  etc.
 231:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 232:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 233:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 234:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 235:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 236:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 237:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 238:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 239:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 240:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 241:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 242:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 243:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				return Byte;
 244:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			}
 245:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 246:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 247:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 248:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  may be slightly higher.
 249:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 250:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
 251:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 252:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 253:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 254:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 255:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 256:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 257:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				{
 258:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 259:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				}
 260:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				else
 261:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				{
 262:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 263:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
 264:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				}
 265:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 266:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				while (Milliseconds--)
 267:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				{
 268:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 269:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 270:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				}
 271:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 272:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 273:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				{
 274:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 275:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				}
 276:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				else
 277:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				{
 278:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 279:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
 280:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				}
 281:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 282:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			}
 283:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 284:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 285:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 286:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 287:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 288:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 289:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 290:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 291:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 292:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 293:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 294:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 295:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 533               		.loc 3 295 0
 296:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 297:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 298:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 299:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 300:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				return __builtin_mfsr(AVR32_SR);
 301:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 302:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 534               		.loc 3 302 0
 535 0284 1FB7      		in r17,__SREG__
 536               	.LBE216:
 537               	.LBE215:
 538               	.LBB217:
 539               	.LBB218:
 303:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 304:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			}
 305:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 306:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 307:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
 308:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 309:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 310:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 311:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 312:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 313:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 314:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 315:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 316:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 317:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 318:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 319:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 320:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 321:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 322:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 323:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 324:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				else
 325:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 326:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 327:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 328:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 329:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 330:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 331:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			}
 332:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 333:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 334:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 335:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 336:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 337:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 338:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void)
 339:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 340:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 341:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 342:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 343:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 344:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 345:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 346:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 347:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 348:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 349:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 350:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 351:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			}
 352:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 353:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			/** Disabled global interrupt handling for the device, preventing interrupts from being handled.
 354:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *
 355:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 356:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			 */
 357:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void) ATTR_ALWAYS_INLINE;
 358:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void)
 359:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 			{
 360:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 540               		.loc 3 360 0
 361:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 362:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 363:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 364:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 365:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_ssrf(AVR32_SR_GM_OFFSET);
 366:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 367:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 541               		.loc 3 367 0
 542               	/* #APP */
 543               	 ;  367 "LUFA//Drivers/USB/Core/../../../Common/Common.h" 1
 544 0286 F894      		cli
 545               	 ;  0 "" 2
 368:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 369:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 
 370:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 546               		.loc 3 370 0
 547               	/* #NOAPP */
 548               	.LBE218:
 549               	.LBE217:
 550               	.LBB219:
 551               	.LBB220:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 552               		.loc 1 430 0
 553 0288 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 554               	.LVL27:
 555 028c 8F77      		andi r24,lo8(127)
 556 028e 0E94 0000 		call Endpoint_SelectEndpoint
 557               	.LVL28:
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 558               		.loc 1 431 0
 559 0292 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 560 0296 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 561 029a 8081      		ld r24,Z
 562 029c 8D78      		andi r24,lo8(-115)
 563 029e 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 564               		.loc 1 432 0
 565 02a0 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 566 02a4 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 567 02a8 8081      		ld r24,Z
 568 02aa 8160      		ori r24,lo8(1)
 569 02ac 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 570               		.loc 1 433 0
 571 02ae E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 572 02b2 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 573 02b6 EF5B      		subi r30,lo8(-(65))
 574 02b8 FF4F      		sbci r31,hi8(-(65))
 575 02ba 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 576               		.loc 1 435 0
 577 02bc 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 578 02c0 8068      		ori r24,lo8(-128)
 579 02c2 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 580               		.loc 1 436 0
 581 02c6 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 582 02ca F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 583 02ce 8081      		ld r24,Z
 584 02d0 8160      		ori r24,lo8(1)
 585 02d2 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 586               		.loc 1 437 0
 587 02d4 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 588 02d8 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 589 02dc EF5B      		subi r30,lo8(-(65))
 590 02de FF4F      		sbci r31,hi8(-(65))
 591 02e0 1082      		st Z,__zero_reg__
 592               	.LBE220:
 593               	.LBE219:
 133:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 594               		.loc 2 133 0
 595 02e2 0E94 0000 		call Endpoint_ClearStatusStage
 596               	.L25:
 597               	.LBB221:
 598               	.LBB222:
 375:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 599               		.loc 1 375 0
 600 02e6 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 601 02ea 8068      		ori r24,lo8(-128)
 602 02ec 0E94 0000 		call Endpoint_SelectEndpoint
 377:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				return ((USB_Endpoint_SelectedHandle->STATUS & USB_EP_BUSNACK0_bm) ? true : false);
 603               		.loc 1 377 0
 604 02f0 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 605 02f4 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 606 02f8 8081      		ld r24,Z
 607               	.LBE222:
 608               	.LBE221:
 135:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	while (!(Endpoint_IsINReady()));
 609               		.loc 2 135 0
 610 02fa 81FF      		sbrs r24,1
 611 02fc 00C0      		rjmp .L25
 612               	.LVL29:
 613               	.LBB223:
 614               	.LBB224:
 615               		.file 4 "LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h"
   1:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** /*
   2:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****              LUFA Library
   3:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****      Copyright (C) Dean Camera, 2012.
   4:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
   5:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****            www.lufa-lib.org
   7:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** */
   8:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
   9:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** /*
  10:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  12:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   all copies and that both that the copyright notice and this
  16:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   documentation, and that the name of the author not be used in
  18:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   software without specific, written prior permission.
  20:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  21:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   The author disclaim all warranties with regard to this
  22:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   software, including all implied warranties of merchantability
  23:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   special, indirect or consequential damages or any damages
  25:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   arising out of or in connection with the use or performance of
  28:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****   this software.
  29:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** */
  30:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  31:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** /** \file
  32:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  \brief USB Device definitions for the AVR XMEGA microcontrollers.
  33:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  \copydetails Group_Device_XMEGA
  34:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *
  35:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  */
  38:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  39:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** /** \ingroup Group_Device
  40:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  \defgroup Group_Device_XMEGA Device Management (XMEGA)
  41:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  \brief USB Device definitions for the AVR XMEGA microcontrollers.
  42:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *
  43:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  Architecture specific USB Device definitions for the Atmel AVR XMEGA microcontrollers.
  44:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *
  45:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  *  @{
  46:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h ****  */
  47:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  48:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** #ifndef __USBDEVICE_XMEGA_H__
  49:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** #define __USBDEVICE_XMEGA_H__
  50:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  51:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	/* Includes: */
  52:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#include "../../../../Common/Common.h"
  53:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#include "../USBController.h"
  54:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#include "../StdDescriptors.h"
  55:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#include "../USBInterrupt.h"
  56:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#include "../Endpoint.h"
  57:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  58:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	/* Enable C linkage for C++ Compilers: */
  59:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#if defined(__cplusplus)
  60:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			extern "C" {
  61:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#endif
  62:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  63:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	/* Preprocessor Checks: */
  64:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#endif
  67:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  68:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#endif
  71:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  72:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#endif
  75:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  76:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		#endif
  79:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  80:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	/* Public Interface - May be used in end-application: */
  81:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		/* Macros: */
  82:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** \name USB Device Mode Option Masks */
  83:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			//@{
  84:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  85:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  86:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
  87:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note Low Speed mode is not available on all USB AVR models.
  88:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        \n
  89:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
  90:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  91:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        when running in low speed mode - refer to the USB 2.0 specification.
  92:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 */
  93:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#define USB_DEVICE_OPT_LOWSPEED        (1 << 0)
  94:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
  95:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#if (F_USB > 6000000)
  96:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  97:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  USB interface should be initialized in full speed (12Mb/s) mode.
  98:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 */
  99:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define USB_DEVICE_OPT_FULLSPEED   (0 << 0)
 100:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#endif
 101:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			//@}
 102:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 103:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#if (!defined(NO_INTERNAL_SERIAL) || defined(__DOXYGEN__))
 104:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 105:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 106:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 107:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 108:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  will cause it to use the internal serial number.
 109:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *
 110:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 111:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  number for the device.
 112:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 */
 113:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 114:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 115:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 116:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  model.
 117:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 */
 118:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    (8 * (1 + (offsetof(NVM_PROD_SIGNATURES_t, COORDY1) - of
 119:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 120:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 121:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 *  model.
 122:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				 */
 123:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  offsetof(NVM_PROD_SIGNATURES_t, LOTNUM0)
 124:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#else
 125:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 126:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 127:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 128:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 129:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#endif
 130:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 131:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		/* Function Prototypes: */
 132:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 133:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  be taken out of suspended mode, and communications should resume.
 134:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 135:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 136:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 137:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 138:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note This function should only be used if the device has indicated to the host that it
 139:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        supports the Remote Wakeup feature in the device descriptors, and should only be
 140:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        issued if the host is currently allowing remote wakeup events from the device (i.e.,
 141:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOTE_WAK
 142:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        compile time option is used, this function is unavailable.
 143:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        \n\n
 144:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 145:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note The USB clock must be running for this function to operate. If the stack is initialize
 146:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is runni
 147:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *        before attempting to call this function.
 148:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 149:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 150:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 */
 151:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			void USB_Device_SendRemoteWakeup(void);
 152:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 153:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		/* Inline Functions: */
 154:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 155:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  the frame number is incremented by one.
 156:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 157:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \return Current USB frame number from the USB controller.
 158:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 */
 159:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 160:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 161:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 162:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				return ((USB_EndpointTable_t*)USB.EPPTR)->FrameNum;
 163:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 164:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 165:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#if !defined(NO_SOF_EVENTS)
 166:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** Enables the device mode Start Of Frame events. When enabled, this causes the
 167:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to the
 168:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  at the start of each USB frame when enumerated in device mode.
 169:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 170:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is defined
 171:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 */
 172:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 173:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_EnableSOFEvents(void)
 174:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 175:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				USB.INTCTRLA |=  USB_SOFIE_bm;
 176:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 177:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 178:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			/** Disables the device mode Start Of Frame events. When disabled, this stops the firing of the
 179:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \ref EVENT_USB_Device_StartOfFrame() event when enumerated in device mode.
 180:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *
 181:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is defined
 182:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			 */
 183:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_DisableSOFEvents(void) ATTR_ALWAYS_INLINE;
 184:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_DisableSOFEvents(void)
 185:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 186:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				USB.INTCTRLA &= ~USB_SOFIE_bm;
 187:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 188:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			#endif
 189:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 190:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	/* Private Interface - For use in library only: */
 191:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 	#if !defined(__DOXYGEN__)
 192:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 		/* Inline Functions: */
 193:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetLowSpeed(void) ATTR_ALWAYS_INLINE;
 194:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetLowSpeed(void)
 195:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 196:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				USB.CTRLA &= ~USB_SPEED_bm;
 197:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 198:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 199:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
 200:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetFullSpeed(void)
 201:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 202:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				USB.CTRLA |=  USB_SPEED_bm;
 203:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 204:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 205:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 206:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
 207:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 208:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				USB.ADDR = Address;
 616               		.loc 4 208 0
 617 02fe E0EC      		ldi r30,lo8(1216)
 618 0300 F4E0      		ldi r31,hi8(1216)
 619 0302 0383      		std Z+3,r16
 620               	.LBE224:
 621               	.LBE223:
 138:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
 622               		.loc 2 138 0
 623 0304 0023      		tst r16
 624 0306 01F0      		breq .L37
 625 0308 83E0      		ldi r24,lo8(3)
 626               	.LVL30:
 627 030a 00C0      		rjmp .L26
 628               	.L37:
 629 030c 82E0      		ldi r24,lo8(2)
 630               	.L26:
 631               	.LVL31:
 632 030e 8093 0000 		sts USB_DeviceState,r24
 633               	.LVL32:
 634               	.LBB225:
 635               	.LBB226:
 317:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 636               		.loc 3 317 0
 327:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 637               		.loc 3 327 0
 638 0312 1FBF      		out __SREG__,r17
 330:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 639               		.loc 3 330 0
 640 0314 00C0      		rjmp .L7
 641               	.LVL33:
 642               	.L46:
 643               	.LBE226:
 644               	.LBE225:
 645               	.LBE214:
 646               	.LBE213:
  95:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 647               		.loc 2 95 0
 648 0316 8058      		subi r24,lo8(-(-128))
 649               	.LVL34:
 650 0318 8230      		cpi r24,lo8(2)
 651 031a 00F0      		brlo .+2
 652 031c 00C0      		rjmp .L7
 653               	.LBB227:
 654               	.LBB228:
 251:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
 655               		.loc 2 251 0
 656 031e 8091 0000 		lds r24,USB_ControlRequest+2
 657 0322 9091 0000 		lds r25,USB_ControlRequest+2+1
 658 0326 B3E0      		ldi r27,hi8(988)
 659 0328 8C3D      		cpi r24,lo8(988)
 660 032a 9B07      		cpc r25,r27
 661 032c 01F0      		breq .+2
 662 032e 00C0      		rjmp .L27
 663               	.LBB229:
 664               	.LBB230:
 228:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Type = DTYPE_String;
 665               		.loc 2 228 0
 666 0330 83E0      		ldi r24,lo8(3)
 667 0332 8C83      		std Y+4,r24
 229:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 668               		.loc 2 229 0
 669 0334 8AE3      		ldi r24,lo8(58)
 670 0336 8B83      		std Y+3,r24
 671               	.LVL35:
 672               	.LBB231:
 673               	.LBB232:
 674               	.LBB233:
 675               	.LBB234:
 295:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 676               		.loc 3 295 0
 302:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 677               		.loc 3 302 0
 678 0338 0FB7      		in r16,__SREG__
 679               	.LBE234:
 680               	.LBE233:
 681               	.LBB235:
 682               	.LBB236:
 360:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 683               		.loc 3 360 0
 367:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 684               		.loc 3 367 0
 685               	/* #APP */
 686               	 ;  367 "LUFA//Drivers/USB/Core/../../../Common/Common.h" 1
 687 033a F894      		cli
 688               	 ;  0 "" 2
 689               		.loc 3 370 0
 690               	.LVL36:
 691               	/* #NOAPP */
 692 033c DE01      		movw r26,r28
 693 033e 1396      		adiw r26,3
 694 0340 80E0      		ldi r24,lo8(0)
 695 0342 90E0      		ldi r25,hi8(0)
 209:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 210:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 211:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 212:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline bool USB_Device_IsAddressSet(void)
 213:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 214:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				return ((USB.ADDR != 0) ? true : false);
 215:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			}
 216:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 217:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString) ATTR_NON_NULL_PTR_A
 218:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
 219:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 			{
 220:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
 221:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				GlobalInterruptDisable();
 222:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 223:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
 696               		.loc 4 223 0
 697 0344 48E0      		ldi r20,lo8(8)
 698               	.LBE236:
 699               	.LBE235:
 700               	.LBB237:
 701               	.LBB238:
 224:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 225:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNu
 226:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				{
 227:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					uint8_t SerialByte;
 228:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 229:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					NVM.CMD    = NVM_CMD_READ_CALIB_ROW_gc;
 702               		.loc 4 229 0
 703 0346 60EC      		ldi r22,lo8(448)
 704 0348 71E0      		ldi r23,hi8(448)
 705 034a 52E0      		ldi r21,lo8(2)
 706               	.LVL37:
 707               	.L31:
 708 034c FB01      		movw r30,r22
 709 034e 5287      		std Z+10,r21
 710               	.LVL38:
 711               	.LBB239:
 230:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					SerialByte = pgm_read_byte(SigReadAddress);
 712               		.loc 4 230 0
 713 0350 E42F      		mov r30,r20
 714 0352 F0E0      		ldi r31,lo8(0)
 715               	/* #APP */
 716               	 ;  230 "LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h" 1
 717 0354 2491      		lpm r18, Z
 718               		
 719               	 ;  0 "" 2
 720               	.LVL39:
 721               	/* #NOAPP */
 722               	.LBE239:
 231:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					NVM.CMD    = 0;
 723               		.loc 4 231 0
 724 0356 FB01      		movw r30,r22
 725 0358 1286      		std Z+10,__zero_reg__
 232:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 233:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					if (SerialCharNum & 0x01)
 726               		.loc 4 233 0
 727 035a 80FF      		sbrs r24,0
 728 035c 00C0      		rjmp .L28
 234:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					{
 235:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 						SerialByte >>= 4;
 729               		.loc 4 235 0
 730 035e 2295      		swap r18
 731               	.LVL40:
 732 0360 2F70      		andi r18,lo8(15)
 733               	.LVL41:
 236:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 						SigReadAddress++;
 734               		.loc 4 236 0
 735 0362 4F5F      		subi r20,lo8(-(1))
 736               	.LVL42:
 737               	.L28:
 237:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					}
 238:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 239:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					SerialByte &= 0x0F;
 738               		.loc 4 239 0
 739 0364 E22F      		mov r30,r18
 740 0366 EF70      		andi r30,lo8(15)
 741               	.LVL43:
 742 0368 2E2F      		mov r18,r30
 743 036a 30E0      		ldi r19,lo8(0)
 240:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 
 241:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
 744               		.loc 4 241 0
 745 036c EA30      		cpi r30,lo8(10)
 746 036e 00F0      		brlo .L29
 747 0370 295C      		subi r18,lo8(-(55))
 748 0372 3F4F      		sbci r19,hi8(-(55))
 749 0374 00C0      		rjmp .L30
 750               	.L29:
 751 0376 205D      		subi r18,lo8(-(48))
 752 0378 3F4F      		sbci r19,hi8(-(48))
 753               	.L30:
 754 037a 1296      		adiw r26,2
 755 037c 2D93      		st X+,r18
 756 037e 3C93      		st X,r19
 757 0380 1397      		sbiw r26,2+1
 758 0382 0196      		adiw r24,1
 759 0384 1296      		adiw r26,2
 760               	.LBE238:
 225:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNu
 761               		.loc 4 225 0
 762 0386 8C31      		cpi r24,28
 763 0388 9105      		cpc r25,__zero_reg__
 764 038a 01F4      		brne .L31
 765               	.LVL44:
 766               	.LBE237:
 767               	.LBB240:
 768               	.LBB241:
 317:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 769               		.loc 3 317 0
 327:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 770               		.loc 3 327 0
 771 038c 0FBF      		out __SREG__,r16
 330:LUFA//Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 772               		.loc 3 330 0
 773               	.LBE241:
 774               	.LBE240:
 775               	.LBE232:
 776               	.LBE231:
 777               	.LBB242:
 778               	.LBB243:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 779               		.loc 1 430 0
 780 038e 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 781 0392 8F77      		andi r24,lo8(127)
 782 0394 0E94 0000 		call Endpoint_SelectEndpoint
 783               	.LVL45:
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 784               		.loc 1 431 0
 785 0398 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 786 039c F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 787 03a0 8081      		ld r24,Z
 788 03a2 8D78      		andi r24,lo8(-115)
 789 03a4 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 790               		.loc 1 432 0
 791 03a6 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 792 03aa F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 793 03ae 8081      		ld r24,Z
 794 03b0 8160      		ori r24,lo8(1)
 795 03b2 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 796               		.loc 1 433 0
 797 03b4 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 798 03b8 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 799 03bc EF5B      		subi r30,lo8(-(65))
 800 03be FF4F      		sbci r31,hi8(-(65))
 801 03c0 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 802               		.loc 1 435 0
 803 03c2 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 804 03c6 8068      		ori r24,lo8(-128)
 805 03c8 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 806               		.loc 1 436 0
 807 03cc E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 808 03d0 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 809 03d4 8081      		ld r24,Z
 810 03d6 8160      		ori r24,lo8(1)
 811 03d8 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 812               		.loc 1 437 0
 813 03da E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 814 03de F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 815 03e2 EF5B      		subi r30,lo8(-(65))
 816 03e4 FF4F      		sbci r31,hi8(-(65))
 817 03e6 1082      		st Z,__zero_reg__
 818               	.LBE243:
 819               	.LBE242:
 235:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
 820               		.loc 2 235 0
 821 03e8 CE01      		movw r24,r28
 822 03ea 0396      		adiw r24,3
 823 03ec 6AE3      		ldi r22,lo8(58)
 824 03ee 70E0      		ldi r23,hi8(58)
 825 03f0 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 826 03f4 00C0      		rjmp .L43
 827               	.LVL46:
 828               	.L27:
 829               	.LBE230:
 830               	.LBE229:
 258:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIn
 831               		.loc 2 258 0
 832 03f6 6091 0000 		lds r22,USB_ControlRequest+4
 833 03fa AE01      		movw r20,r28
 834 03fc 4F5F      		subi r20,lo8(-(1))
 835 03fe 5F4F      		sbci r21,hi8(-(1))
 836 0400 0E94 0000 		call CALLBACK_USB_GetDescriptor
 837               	.LVL47:
 838 0404 8C01      		movw r16,r24
 839               	.LVL48:
 840 0406 0097      		sbiw r24,0
 841 0408 01F4      		brne .+2
 842 040a 00C0      		rjmp .L7
 843               	.LBB244:
 844               	.LBB245:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 845               		.loc 1 430 0
 846 040c 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 847               	.LVL49:
 848 0410 8F77      		andi r24,lo8(127)
 849 0412 0E94 0000 		call Endpoint_SelectEndpoint
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 850               		.loc 1 431 0
 851 0416 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 852 041a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 853 041e 8081      		ld r24,Z
 854 0420 8D78      		andi r24,lo8(-115)
 855 0422 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 856               		.loc 1 432 0
 857 0424 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 858 0428 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 859 042c 8081      		ld r24,Z
 860 042e 8160      		ori r24,lo8(1)
 861 0430 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 862               		.loc 1 433 0
 863 0432 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 864 0436 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 865 043a EF5B      		subi r30,lo8(-(65))
 866 043c FF4F      		sbci r31,hi8(-(65))
 867 043e 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 868               		.loc 1 435 0
 869 0440 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 870 0444 8068      		ori r24,lo8(-128)
 871 0446 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 872               		.loc 1 436 0
 873 044a E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 874 044e F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 875 0452 8081      		ld r24,Z
 876 0454 8160      		ori r24,lo8(1)
 877 0456 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 878               		.loc 1 437 0
 879 0458 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 880 045c F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 881 0460 EF5B      		subi r30,lo8(-(65))
 882 0462 FF4F      		sbci r31,hi8(-(65))
 883 0464 1082      		st Z,__zero_reg__
 884               	.LVL50:
 885               	.LBE245:
 886               	.LBE244:
 276:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 887               		.loc 2 276 0
 888 0466 8981      		ldd r24,Y+1
 889 0468 9A81      		ldd r25,Y+2
 890 046a B801      		movw r22,r16
 891 046c 0E94 0000 		call Endpoint_Write_Control_PStream_LE
 892               	.LVL51:
 893               	.L43:
 894               	.LBB246:
 895               	.LBB247:
 461:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 896               		.loc 1 461 0
 897 0470 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 898 0474 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 899 0478 8081      		ld r24,Z
 900 047a 8D79      		andi r24,lo8(-99)
 901 047c 8083      		st Z,r24
 462:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 902               		.loc 1 462 0
 903 047e E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 904 0482 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 905 0486 EF5B      		subi r30,lo8(-(65))
 906 0488 FF4F      		sbci r31,hi8(-(65))
 907 048a 1082      		st Z,__zero_reg__
 908 048c 00C0      		rjmp .L7
 909               	.LVL52:
 910               	.L12:
 911               	.LBE247:
 912               	.LBE246:
 913               	.LBE228:
 914               	.LBE227:
 103:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
 915               		.loc 2 103 0
 916 048e 8038      		cpi r24,lo8(-128)
 917 0490 01F0      		breq .+2
 918 0492 00C0      		rjmp .L7
 919               	.LBB248:
 920               	.LBB249:
 921               	.LBB250:
 922               	.LBB251:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 923               		.loc 1 430 0
 924 0494 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 925               	.LVL53:
 926 0498 8F77      		andi r24,lo8(127)
 927 049a 0E94 0000 		call Endpoint_SelectEndpoint
 928               	.LVL54:
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 929               		.loc 1 431 0
 930 049e E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 931 04a2 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 932 04a6 8081      		ld r24,Z
 933 04a8 8D78      		andi r24,lo8(-115)
 934 04aa 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 935               		.loc 1 432 0
 936 04ac E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 937 04b0 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 938 04b4 8081      		ld r24,Z
 939 04b6 8160      		ori r24,lo8(1)
 940 04b8 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 941               		.loc 1 433 0
 942 04ba E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 943 04be F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 944 04c2 EF5B      		subi r30,lo8(-(65))
 945 04c4 FF4F      		sbci r31,hi8(-(65))
 946 04c6 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 947               		.loc 1 435 0
 948 04c8 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 949 04cc 8068      		ori r24,lo8(-128)
 950 04ce 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 951               		.loc 1 436 0
 952 04d2 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 953 04d6 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 954 04da 8081      		ld r24,Z
 955 04dc 8160      		ori r24,lo8(1)
 956 04de 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 957               		.loc 1 437 0
 958 04e0 8091 0000 		lds r24,USB_Endpoint_SelectedFIFO
 959 04e4 9091 0000 		lds r25,USB_Endpoint_SelectedFIFO+1
 960 04e8 FC01      		movw r30,r24
 961 04ea EF5B      		subi r30,lo8(-(65))
 962 04ec FF4F      		sbci r31,hi8(-(65))
 963 04ee 1082      		st Z,__zero_reg__
 964               	.LBE251:
 965               	.LBE250:
 213:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_8(USB_Device_ConfigurationNumber);
 966               		.loc 2 213 0
 967 04f0 3091 0000 		lds r19,USB_Device_ConfigurationNumber
 968               	.LVL55:
 969               	.LBB252:
 970               	.LBB253:
 971               		.loc 1 548 0
 972 04f4 2081      		ld r18,Z
 973 04f6 820F      		add r24,r18
 974 04f8 911D      		adc r25,__zero_reg__
 975 04fa DC01      		movw r26,r24
 976 04fc 3C93      		st X,r19
 977               	.LVL56:
 978               	.L44:
 979 04fe 2F5F      		subi r18,lo8(-(1))
 980 0500 2083      		st Z,r18
 981               	.LBE253:
 982               	.LBE252:
 983               	.LBB254:
 984               	.LBB255:
 448:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CNT     = USB_Endpoint_SelectedFIFO->Position;
 985               		.loc 1 448 0
 986 0502 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 987 0506 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 988 050a A091 0000 		lds r26,USB_Endpoint_SelectedFIFO
 989 050e B091 0000 		lds r27,USB_Endpoint_SelectedFIFO+1
 990 0512 AF5B      		subi r26,lo8(-(65))
 991 0514 BF4F      		sbci r27,hi8(-(65))
 992 0516 8C91      		ld r24,X
 993 0518 90E0      		ldi r25,lo8(0)
 994 051a 8283      		std Z+2,r24
 995 051c 9383      		std Z+3,r25
 449:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK0_bm | USB_EP_OVF_
 996               		.loc 1 449 0
 997 051e 8081      		ld r24,Z
 998 0520 8D79      		andi r24,lo8(-99)
 999               	.L42:
 1000 0522 8083      		st Z,r24
 450:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 1001               		.loc 1 450 0
 1002 0524 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 1003 0528 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 1004 052c EF5B      		subi r30,lo8(-(65))
 1005 052e FF4F      		sbci r31,hi8(-(65))
 1006 0530 1082      		st Z,__zero_reg__
 1007               	.LBE255:
 1008               	.LBE254:
 216:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 1009               		.loc 2 216 0
 1010 0532 0E94 0000 		call Endpoint_ClearStatusStage
 1011 0536 00C0      		rjmp .L7
 1012               	.LVL57:
 1013               	.L13:
 1014               	.LBE249:
 1015               	.LBE248:
 108:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 1016               		.loc 2 108 0
 1017 0538 8823      		tst r24
 1018 053a 01F0      		breq .+2
 1019 053c 00C0      		rjmp .L7
 1020               	.LBB256:
 1021               	.LBB257:
 146:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
 1022               		.loc 2 146 0
 1023 053e 8091 0000 		lds r24,USB_ControlRequest+2
 1024               	.LVL58:
 1025 0542 8230      		cpi r24,lo8(2)
 1026 0544 00F0      		brlo .+2
 1027 0546 00C0      		rjmp .L7
 1028               	.LBB258:
 1029               	.LBB259:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 1030               		.loc 1 430 0
 1031 0548 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1032 054c 8F77      		andi r24,lo8(127)
 1033 054e 0E94 0000 		call Endpoint_SelectEndpoint
 1034               	.LVL59:
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 1035               		.loc 1 431 0
 1036 0552 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1037 0556 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1038 055a 8081      		ld r24,Z
 1039 055c 8D78      		andi r24,lo8(-115)
 1040 055e 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 1041               		.loc 1 432 0
 1042 0560 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1043 0564 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1044 0568 8081      		ld r24,Z
 1045 056a 8160      		ori r24,lo8(1)
 1046 056c 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 1047               		.loc 1 433 0
 1048 056e E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 1049 0572 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 1050 0576 EF5B      		subi r30,lo8(-(65))
 1051 0578 FF4F      		sbci r31,hi8(-(65))
 1052 057a 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 1053               		.loc 1 435 0
 1054 057c 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1055 0580 8068      		ori r24,lo8(-128)
 1056 0582 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 1057               		.loc 1 436 0
 1058 0586 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1059 058a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1060 058e 8081      		ld r24,Z
 1061 0590 8160      		ori r24,lo8(1)
 1062 0592 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 1063               		.loc 1 437 0
 1064 0594 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 1065 0598 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 1066 059c EF5B      		subi r30,lo8(-(65))
 1067 059e FF4F      		sbci r31,hi8(-(65))
 1068 05a0 1082      		st Z,__zero_reg__
 1069               	.LBE259:
 1070               	.LBE258:
 197:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
 1071               		.loc 2 197 0
 1072 05a2 8091 0000 		lds r24,USB_ControlRequest+2
 1073 05a6 8093 0000 		sts USB_Device_ConfigurationNumber,r24
 199:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 1074               		.loc 2 199 0
 1075 05aa 0E94 0000 		call Endpoint_ClearStatusStage
 201:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_Device_ConfigurationNumber)
 1076               		.loc 2 201 0
 1077 05ae 8091 0000 		lds r24,USB_Device_ConfigurationNumber
 1078 05b2 8823      		tst r24
 1079 05b4 01F4      		brne .L45
 1080               	.L32:
 1081               	.LBB260:
 1082               	.LBB261:
 214:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Device_XMEGA.h **** 				return ((USB.ADDR != 0) ? true : false);
 1083               		.loc 4 214 0
 1084 05b6 8091 C304 		lds r24,1219
 1085               	.LBE261:
 1086               	.LBE260:
 204:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
 1087               		.loc 2 204 0
 1088 05ba 8823      		tst r24
 1089 05bc 01F0      		breq .L38
 1090               	.L45:
 1091 05be 84E0      		ldi r24,lo8(4)
 1092 05c0 00C0      		rjmp .L34
 1093               	.L38:
 1094 05c2 81E0      		ldi r24,lo8(1)
 1095               	.L34:
 1096               	.LVL60:
 1097 05c4 8093 0000 		sts USB_DeviceState,r24
 206:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ConfigurationChanged();
 1098               		.loc 2 206 0
 1099 05c8 0E94 0000 		call EVENT_USB_Device_ConfigurationChanged
 1100               	.LVL61:
 1101               	.L7:
 1102               	.LBE257:
 1103               	.LBE256:
 1104               	.LBE188:
 1105               	.LBB262:
 1106               	.LBB263:
 409:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 1107               		.loc 1 409 0
 1108 05cc 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1109               	.LVL62:
 1110 05d0 8F77      		andi r24,lo8(127)
 1111 05d2 0E94 0000 		call Endpoint_SelectEndpoint
 411:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if (USB_Endpoint_SelectedHandle->STATUS & USB_EP_SETUP_bm)
 1112               		.loc 1 411 0
 1113 05d6 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1114 05da F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1115 05de 8081      		ld r24,Z
 1116 05e0 84FF      		sbrs r24,4
 1117 05e2 00C0      		rjmp .L5
 413:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedFIFO->Length = USB_Endpoint_SelectedHandle->CNT;
 1118               		.loc 1 413 0
 1119 05e4 A091 0000 		lds r26,USB_Endpoint_SelectedFIFO
 1120 05e8 B091 0000 		lds r27,USB_Endpoint_SelectedFIFO+1
 1121 05ec 8281      		ldd r24,Z+2
 1122 05ee 9381      		ldd r25,Z+3
 1123 05f0 A05C      		subi r26,lo8(-(64))
 1124 05f2 BF4F      		sbci r27,hi8(-(64))
 1125 05f4 8C93      		st X,r24
 1126               	.LBE263:
 1127               	.LBE262:
 1128               	.LBB264:
 1129               	.LBB265:
 479:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 1130               		.loc 1 479 0
 1131 05f6 8181      		ldd r24,Z+1
 1132 05f8 8460      		ori r24,lo8(4)
 1133 05fa 8183      		std Z+1,r24
 481:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				if ((USB_Endpoint_SelectedHandle->CTRL & USB_EP_TYPE_gm) == USB_EP_TYPE_CONTROL_gc)
 1134               		.loc 1 481 0
 1135 05fc E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1136 0600 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1137 0604 8181      		ldd r24,Z+1
 1138 0606 807C      		andi r24,lo8(-64)
 1139 0608 8034      		cpi r24,lo8(64)
 1140 060a 01F4      		brne .L36
 483:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint ^ ENDPOINT_DIR_IN);
 1141               		.loc 1 483 0
 1142 060c 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1143 0610 8058      		subi r24,lo8(-(-128))
 1144 0612 0E94 0000 		call Endpoint_SelectEndpoint
 484:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 					USB_Endpoint_SelectedHandle->CTRL |= USB_EP_STALL_bm;
 1145               		.loc 1 484 0
 1146 0616 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1147 061a F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1148 061e 8181      		ldd r24,Z+1
 1149 0620 8460      		ori r24,lo8(4)
 1150 0622 8183      		std Z+1,r24
 1151               	.L36:
 1152               	.LBE265:
 1153               	.LBE264:
 1154               	.LBB266:
 1155               	.LBB267:
 430:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint & ~ENDPOINT_DIR_IN);
 1156               		.loc 1 430 0
 1157 0624 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1158 0628 8F77      		andi r24,lo8(127)
 1159 062a 0E94 0000 		call Endpoint_SelectEndpoint
 431:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS &= ~(USB_EP_SETUP_bm | USB_EP_TRNCOMPL0_bm | USB_EP_BUSNACK
 1160               		.loc 1 431 0
 1161 062e E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1162 0632 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1163 0636 8081      		ld r24,Z
 1164 0638 8D78      		andi r24,lo8(-115)
 1165 063a 8083      		st Z,r24
 432:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 1166               		.loc 1 432 0
 1167 063c E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1168 0640 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1169 0644 8081      		ld r24,Z
 1170 0646 8160      		ori r24,lo8(1)
 1171 0648 8083      		st Z,r24
 433:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 1172               		.loc 1 433 0
 1173 064a E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 1174 064e F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 1175 0652 EF5B      		subi r30,lo8(-(65))
 1176 0654 FF4F      		sbci r31,hi8(-(65))
 1177 0656 1082      		st Z,__zero_reg__
 435:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				Endpoint_SelectEndpoint(USB_Endpoint_SelectedEndpoint | ENDPOINT_DIR_IN);
 1178               		.loc 1 435 0
 1179 0658 8091 0000 		lds r24,USB_Endpoint_SelectedEndpoint
 1180 065c 8068      		ori r24,lo8(-128)
 1181 065e 0E94 0000 		call Endpoint_SelectEndpoint
 436:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedHandle->STATUS |= USB_EP_TOGGLE_bm;
 1182               		.loc 1 436 0
 1183 0662 E091 0000 		lds r30,USB_Endpoint_SelectedHandle
 1184 0666 F091 0000 		lds r31,USB_Endpoint_SelectedHandle+1
 1185 066a 8081      		ld r24,Z
 1186 066c 8160      		ori r24,lo8(1)
 1187 066e 8083      		st Z,r24
 437:LUFA//Drivers/USB/Core/XMEGA/../XMEGA/Endpoint_XMEGA.h **** 				USB_Endpoint_SelectedFIFO->Position  = 0;
 1188               		.loc 1 437 0
 1189 0670 E091 0000 		lds r30,USB_Endpoint_SelectedFIFO
 1190 0674 F091 0000 		lds r31,USB_Endpoint_SelectedFIFO+1
 1191 0678 EF5B      		subi r30,lo8(-(65))
 1192 067a FF4F      		sbci r31,hi8(-(65))
 1193 067c 1082      		st Z,__zero_reg__
 1194               	.L5:
 1195               	/* epilogue start */
 1196               	.LBE267:
 1197               	.LBE266:
 123:LUFA//Drivers/USB/Core/DeviceStandardReq.c **** }
 1198               		.loc 2 123 0
 1199 067e EC96      		adiw r28,60
 1200 0680 CDBF      		out __SP_L__,r28
 1201 0682 DEBF      		out __SP_H__,r29
 1202 0684 DF91      		pop r29
 1203 0686 CF91      		pop r28
 1204 0688 1F91      		pop r17
 1205 068a 0F91      		pop r16
 1206 068c 0895      		ret
 1207               		.cfi_endproc
 1208               	.LFE68:
 1210               		.comm USB_Device_RemoteWakeupEnabled,1,1
 1211               		.comm USB_Device_CurrentlySelfPowered,1,1
 1212               		.comm USB_Device_ConfigurationNumber,1,1
 1213               		.text
 1214               	.Letext0:
 1215               		.file 5 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
 1216               		.file 6 "/home/dgonz/projects/Useful/avrTools/avr8-gnu-toolchain-linux_x86/bin/../lib/gcc/avr/4.6.
 1217               		.file 7 "LUFA//Drivers/USB/Core/StdDescriptors.h"
 1218               		.file 8 "LUFA//Drivers/USB/Core/StdRequestType.h"
 1219               		.file 9 "LUFA//Drivers/USB/Core/XMEGA/USBController_XMEGA.h"
 1220               		.file 10 "LUFA//Drivers/USB/Core/XMEGA/../Device.h"
 1221               		.file 11 "LUFA//Drivers/USB/Core/USBTask.h"
 1222               		.file 12 "LUFA//Drivers/USB/Core/DeviceStandardReq.h"
DEFINED SYMBOLS
                            *ABS*:00000000 DeviceStandardReq.c
     /tmp/ccJ748wE.s:2      *ABS*:0000003f __SREG__
     /tmp/ccJ748wE.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccJ748wE.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccJ748wE.s:5      *ABS*:00000034 __CCP__
     /tmp/ccJ748wE.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccJ748wE.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccJ748wE.s:15     .text.Endpoint_SelectEndpoint:00000000 Endpoint_SelectEndpoint
     /tmp/ccJ748wE.s:98     .text.USB_Device_ProcessControlRequest:00000000 USB_Device_ProcessControlRequest
                            *COM*:00000001 USB_Device_CurrentlySelfPowered
                            *COM*:00000001 USB_Device_RemoteWakeupEnabled
                            *COM*:00000001 USB_Device_ConfigurationNumber

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
USB_Endpoint_SelectedEndpoint
USB_Endpoint_FIFOs
USB_Endpoint_SelectedFIFO
USB_Endpoint_SelectedHandle
USB_ControlRequest
EVENT_USB_Device_ControlRequest
Endpoint_ClearStatusStage
USB_DeviceState
Endpoint_Write_Control_Stream_LE
CALLBACK_USB_GetDescriptor
Endpoint_Write_Control_PStream_LE
EVENT_USB_Device_ConfigurationChanged
